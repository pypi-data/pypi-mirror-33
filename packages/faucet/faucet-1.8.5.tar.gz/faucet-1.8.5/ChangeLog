CHANGES
=======

1.8.5
-----

* Bump version number
* Don't try to send LLDP for stack ports if LLDP is not enabled
* Don't automatically enable LLDP for stack ports
* Double check lldp\_beacon
* Log DP name as well as ID
* Cleanup used of namedtuple
* Improving diagnostic error message
* Should not edit LLDP config at run time
* Support hardware testing for stacking
* Incremental support for hardware switch testing with stacking
* Use same class to associate hardware switch (incremental support for hardware switches in stacking)
* Speed up LLDP blocked tests
* Temporarily disable stack cabling counter for FaucetSingleStackStringOfDPTaggedTest
* Re-verify cable errors for FaucetSingleStackStringOfDPTaggedTest
* Revert "Don't verify cabling counters for FaucetSingleStackStringOfDPTaggedTest."
* Don't verify cabling counters for FaucetSingleStackStringOfDPTaggedTest
* Add tagged/untagged group test
* Don't verify block rule on other tagged host/stack case
* Don't verify untagged block rule when tagged hosts in use
* Further stack connectivity testing
* Verify cabling only applies to stacks
* All stacking tests should verify there are no cabling errors
* Test LLDP probes and LLDP from hosts are not flooded
* Test that stack hosts don't see LLDP probes
* Revert "Diagnostic change to exact match LLDP."
* Diagnostic change to exact match LLDP
* Drop LLDP/group if it somehow makes it into a stacked VLAN
* Log DP name in case of mismatch
* Explicitly drop untagged traffic on stack ports
* Fix log message for stack down due to incorrect cabling
* Add debian package dependency on chewie
* 802.1x logging and ACL names
* Incremental test support for Chewie
* Add wpa\_supplicant test helper
* Incremental Chewie stub implementation
* Correct NFV interface RE
* Implment NFV test helper
* pylint
* shuffle file order for pylint/pytype
* It's been 2018 for a while, reflect this in copyright notices
* Don't multiply trigger incorrect cabling event
* Add Prometheus variable for stacking state on a port
* Stack cabling errors should be actioned immediately. Make LLDP logging less verbose
* Cleanup FAUCET LLDP parser further
* Recommend -i flag for integration testing on hardware (faster)
* Make documentation more generic
* Adding dynamic docker network option
* Attempt non -Z pytype
* Extraneous \n
* Pin pytype to 2018.5.22.1 for -Z flag
* Pin pytype, reenable parallel
* Re-enable pytype with -Z, due to excessive memory use
* Update the cisco TFM file to follow some recent changes in faucet
* pylint
* Temporarily disable pytype for python3
* Reduce job count for pytype (memory hog)
* Automatically do pytype for python2 if mininet is imported
* workaround for mininet\_test.py
* pytype workarounds
* name-error -> attribute-error
* Reduce memory usage
* Unpin pytype
* Set pytype python version
* pytype workarounds
* Install pytype via pip
* Preversion 1.8.5

1.8.4
-----

* Bump 1.8.4
* Workaround lack of availability of typing library on python3.4

1.8.3
-----

* Test stacking where redundant links are down/root dp is unreachable, to begin with
* Few minor lint fixes, make tests acutally fail
* Randomize ACL cookies
* Randomize DP cookies
* Handle stacking port state not an int
* Clean up lldp\_handler
* Bump version for release
* pylint
* Update sphinx\_rtd\_theme from 0.3.1 to 0.4.0
* Prep methods for handling stack events
* Make pip quieter
* Correct codecov
* Run unit tests before other checks
* Unpin pylint
* Work around codecov not working under docker
* Use common pip\_deps.sh install script
* Pass CODECOV token for Travis
* Docker tests can use external cache (e.g from Travis)
* FAUCETTESTS -> FAUCET\_TESTS
* Fix delim for parallel
* Absolute paths from src\_files.sh
* Incorrect : for else clause
* Non standard use of string compare
* Revert "Retry apt-get update with install."
* wrong docker run args
* Retry apt-get update with install
* diags for test runner
* avoid egg cache dir collision
* Simplify sanity shard decision
* Encode list of src files in one place
* Use pip cache dir default
* Wrong "-d" flag passed to docker tests
* Use external script for pytype-ing
* Use parallel with --bar
* RUNTESTS scope
* Move codecov inside docker
* Revert "Attempt not installing OVS."
* Correct sense of sanity shard test
* Attempt not installing OVS
* Attempt parallel pytype
* Don't run build docs test twice. Don't depend on Travis worker for pylint
* Add docs requirements, too
* Quote pip3 install
* Install test-requirements explicitly in .travis.yml
* pin pylint
* wrap pip3 install as well with retry
* Retry quote
* Wrap apt-get install with retry
* Incorrect order to preserve discovered\_up\_port\_nos
* Improve stacking logging
* Keep dynamic op status state
* Need to maintain list of up DP ports over cold/restarts
* Only reprovision known up ports on self-initiated cold start
* Only provision configured ports
* Revert "Only provision up ports."
* Simply LLDP stacking handler
* Only provision up ports
* typos
* We don't support different output port numbers with a single ACL
* Drop traffic from test host MACs
* Make my life easier by not hard coding versions
* lint check in mininet test, is redundant
* Not practical to require disabling all listening processes, but we can warn about them
* Improve test coverage
* Add check to make sure no processes using test interfaces
* Fix typo in README\_Cisco.rst
* When stack probe, should not check port.running
* Add test stack probe
* Stack port down when remote port is down
* Pre-version 1.8.3
* typos
* typos

1.8.2
-----

* Default proactive limit should be 2\*max\_hosts
* Implement periodic probing stack ports
* Add note to deconfigure Avahi
* A thread that periodically call stack probe service
* Add helper methods to check and set stack port state
* Define a threshold for probing packet loss
* Update stack port info upon receiving a LLDP packet
* Add current time (now) param to lldp\_handler method
* Add stack FSM TLV to lldp beacons on ports with stacking enabled
* Add a TLV for stack FSM  and a helper method to build the TLV
* Add a dict to hold stack probing info
* Set initial stack port state to DOWN
* Define state machine for stack ports
* Upgrade to Ryu 4.25
* Update ryu from 4.24 to 4.25
* Update ryu from 4.24 to 4.25
* Update sphinx from 1.7.4 to 1.7.5
* Expand use of mypy in pre-commit
* pytype checking for clib
* Improve clib pytype
* Increase min lint score
* pytype/pylint
* pylint/pytype fix
* enable pytype on unit tests
* Add set\_field api to valve\_of
* pylint
* Use default priority transit goto flow
* Only learn for locally expressed VLANs, and support transit stacking (where a stacked switch might not have any locally expressed VLANs)
* Add support for the Cisco Systems Catalyst 9000 Family Switches
* Pylint cleanup
* Attempt standard install method for apt dependencies
* Remove now empty gitlab build stage
* Revert "Run apt-update."
* Run apt-update
* Making docker tests actually run
* Implement dp\_acls with test
* Initial dp\_acls field support
* Refresh encrypted travis deploy password
* Wrong usage of tempfile
* Of course, config should be updated with a write/rename, not in place
* write conf files unbuffered
* Wait longer for conf file to be written
* LLDP processing should be enabled always for stacking links, and LLDP probes on stacking links should not be ratelimited
* Add missing multiarch hook for docker CI
* Tidy up tutorials
* Preversion 1.8.2

1.8.1
-----

* Gauge package should use /var/log/faucet for logging
* Fix example configuration to remove ambiguity
* Fix line under heading
* Update VM documentation
* Switch VM build from python packages to debian packages
* Bump version
* Add config test/doc for force\_port\_vlan
* Update docker documentation
* Remove old faucet-yaml.dot
* Skip tests on armhf docker builds
* Split gNMI into it's own repo
* Remove CI Dockerfile
* Removing documentation on how to manually build faucet dockers
* Add hook for docker cloud to allow cross compiling
* Upgrade grafana
* Simplify gitlab ci setup
* Attempt to tame our Dockerfile problem
* Run pylint on clib as well
* Add clib path to git hook
* pylint
* pylint
* Add lint checking of test directory
* pylint
* Wrong test sense, for nonblocking test
* pylint
* test\_tcpdump\_nextline can fail becaise ping only tries twice, and might exit before the test can terminate it
* Handle invalid UTF-8 in ofdesc messages
* Add note that test interfaces should be unmanaged to avoid conflict with tests
* Add beka dependancy to debian/control
* update docs for running only a single int test
* Common tmpdir method for test results
* Should use common test result base class
* Move test results to "tests" json blob
* use stat based reload for RandVlan test
* Revert "Report test output in json format."
* Report test output in json format
* Log result of SanityTest
* Add jsonreport option to tests
* Randomized VID test
* Stricter checking of eth\_dst when receiving LLDP
* Fix BRIDGE\_GROUP\_MASK
* Use 5 byte mask for bridge addresses
* Don't flood 01:80:c2:00:00:00 to 0f addresses per 802.1D
* Drop LLDP/BDPUs in flood table, enabling bridge local traffic to be learned
* Removing gasket Dockerfiles which are not useful yet
* Revert "pylint."
* Revert "Fix match.match."
* Fix match.match
* pylint
* pylint
* Pre-version 1.8.1

1.8.0
-----

* Bump version to 1.8.0
* Fix group\_id check
* Condense GroupTable tests
* Test IPv6 VIPs are inconsistent
* Make FaucetGroupTableUntaggedIPv6RouteTest unreliable
* Missing group\_id
* tcpdump\_helper fix
* pylint
* pylint
* pylint
* pylint
* FaucetConfigStatReloadAclTest should not hup
* Simplify FaucetUntaggedHUPTest
* verify\_faucet\_func() can take list of callables
* Fix tabs\_are\_bad()
* configure isn't smart enough to glob a path
* DPDK 18.02.1 has a slightly different install path and needs python-six
* More predictable tcpdump test
* add in missing keywords for ping tests
* test should be less than minimum, not also equal
* pylint
* Handle deconfigured VLAN while BGP active
* Better pick unused vid
* Pick unused VID
* Don't use an unused port to force cold start
* Add test for \_\_dict\_\_ on port/vlan/dp
* Config test for DP
* It's better to use the generic set\_fields modifier
* Fix typo
* Grafana doesn't call this "proxy" anymore
* ACLs should be rejected when output port can't be resolved
* Add Port unit tests
* Add more VLAN unit tests
* Must resolve all ports
* Adding tcpdump\_helper unit-test
* Add Sam Russell to authors
* Fix VLAN.to\_conf() for faucet\_vips
* Fix VLAN.to\_conf() route format
* Port.to\_conf() serialises VLAN names correctly
* Make test\_gauge quiet
* Make test\_fctl.py quieter
* Work-around for docker users missing from system
* Testability update to check\_faucet\_config.py
* Upgrade grafana images to 5.1.x
* LLDP test did not handle long DPIDs
* use rst's note
* Add documentation on developing faucet with PyCharm
* added configration documentation for meters
* return value not correct
* pylint
* Use common resolve\_handler callable
* Adding docker host capability and test
* Reduce boilerplate event scheduling code
* We have migrated from travis-ci.org to travis-ci.com
* Increase minimum test coverage to 90%
* Add smoke test for group support
* Add test for port override output port
* Test coverage for get\_tables()
* Remove unused method
* pylint
* Test API call for config
* Remove unused method
* Learn on stack port
* Add test coverage for stack edge learning
* Increase test coverage to 88%
* Test coverage for LACP
* Incremental coverage for LACP
* Standardize how coverage reporting is run
* Coverage reporting uses wrong directory
* Run unit tests with coverage tool to accurately include module imports
* git pre-commit hook now runs coverage tests
* pylint
* Test ofdesc handler
* Test packet in rate limit
* Add test for reconnect handler
* Test scrape http failure
* Test coverage for test\_check\_config
* logging level always set
* Test coverage for check\_faucet\_config.py
* Test no dp conf
* Increase test coverage to 85%
* Test coverage for push/pop VLAN config
* Add test coverage for ACL config
* Smoke test for idle needs correct table ID
* Increase coverage for idle algorithm (flow\_timeout())
* Increase test coverage to 84%
* Can't use parallel to run pytype due to multiple egg cache access
* Smoke test BGP route handler
* Smoke test coverage for the idle-flow based learning manager
* Preversion 1.7.7

1.7.6
-----

* Bump README version
* Use last\_retry\_time from cache entry
* pylint
* Increase min lint score to 9.2
* More test coverage for ryu\_event handlers
* Increase minimum test coverage to 81%
* Incremental test coverage for Prometheus flow table export
* Test valid Gauge config
* Move Gauge smoke test to test\_gauge
* Minimum test coverage is now 80%
* Smoke test config reload
* Smoke test reload config
* Test more initializers
* Use test registry
* Smoke test metrics initialization
* Gauge missing call to override registry
* Revert "Prometheus client can take a registry argument, so can be initialized in test."
* Revert "Smoke test reload\_config()."
* Revert "Restrict test registry scope."
* Test coverage for version
* Test coverage for \_\_main\_\_.py
* Run loop\_protect in unit test
* instantiate FaucetExperimentalAPI
* Implement of\_vlan\_packet\_ins
* Move more services out of \_\_init\_\_ to start()
* Revert "Revert "Avoid initializing Prometheus client in \_\_init\_\_().""
* Revert "Avoid initializing Prometheus client in \_\_init\_\_()."
* Increase minimum test coverage to 79%
* Avoid initializing Prometheus client in \_\_init\_\_()
* Smoke test for Gauge
* Smoke test Faucet class
* Start BGP in unit tests
* placate pylint
* Pre-version 1.7.5

1.7.4
-----

