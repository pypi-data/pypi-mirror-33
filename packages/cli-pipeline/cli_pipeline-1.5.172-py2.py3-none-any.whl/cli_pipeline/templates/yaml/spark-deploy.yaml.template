apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_TAG }}
  namespace: {{ PIPELINE_NAMESPACE }}
  labels:
    app: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_TAG }}
spec:
  replicas: 1
  template: 
    metadata:
      labels:
        app: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_TAG }}
        # Note:  'tag' is used by PipelineAI, 'version' is used by Istio. 
        #        for now, keep these together - and keep them the same value
        name: "{{ PIPELINE_MODEL_NAME }}"
        tag: "{{ PIPELINE_MODEL_TAG }}"
#        version: "{{ PIPELINE_MODEL_TAG }}"
#      annotations:
#        prometheus.io/scrape: "true"
#        prometheus.io/path: "/metrics"
#        prometheus.io/port: "8080"
    spec:
      containers:
      - name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_MODEL_NAME }}-{{ PIPELINE_MODEL_TAG }}
        image: {{ PIPELINE_IMAGE_REGISTRY_URL }}/{{ PIPELINE_IMAGE_REGISTRY_REPO }}/{{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_MODEL_NAME }}:{{ PIPELINE_MODEL_TAG }} 
        imagePullPolicy: "Never"
        terminationMessagePolicy: "FallbackToLogsOnError"
        env:
        - name: PIPELINE_STREAM_LOGGER_URL
          value: {{ PIPELINE_STREAM_LOGGER_URL }}
        - name: PIPELINE_STREAM_LOGGER_TOPIC
          value: {{ PIPELINE_STREAM_LOGGER_TOPIC }}
        - name: PIPELINE_STREAM_INPUT_URL
          value: {{ PIPELINE_STREAM_INPUT_URL }}
        - name: PIPELINE_STREAM_INPUT_TOPIC
          value: {{ PIPELINE_STREAM_INPUT_TOPIC }}
        - name: PIPELINE_STREAM_OUTPUT_URL
          value: {{ PIPELINE_STREAM_OUTPUT_URL }}
        - name: PIPELINE_STREAM_OUTPUT_TOPIC
          value: {{ PIPELINE_STREAM_OUTPUT_TOPIC }}
        ports:
        - containerPort: 6066
        - containerPort: 6061 
#        livenessProbe:
#          httpGet:
#            path: /ping
#            port: 8080
#          initialDelaySeconds: 60
#          periodSeconds: 15
#          failureThreshold: 4
#        readinessProbe:
#          httpGet:
#            path: /ping
#            port: 8080
#          initialDelaySeconds: 60
#          periodSeconds: 15
#          failureThreshold: 4
