
[[ send to:
   wxpython-users@googlegroups.com
   wxpython-dev@googlegroups.com
   wx-users@googlegroups.com
   wx-announce@googlegroups.com
   Python-Announce-List@Python.Org
   ]]


Announcing wxPython 4.0.3
=========================

PyPI:   https://pypi.org/project/wxPython/4.0.3
Extras: https://extras.wxPython.org/wxPython4/extras/
Pip:    ``pip install wxPython==4.0.3``

Changes in this release include the following:

* Fixed a linking problem on macOS. The new waf added an explicit link
  to the Python shared library which meant that it would try to load
  it at runtime, even if a different Python (such as Anaconda, EDM or
  Homebrew) was used to import wxPython. This, of course, caused
  runtime errors. (#892)

* Sort pages by dock_pos when added to automatic (agw.aui)
  notebook. (#882)

* Fix a bug in py.introspect.getTokens. (#889)

* Added Vagrant configuration for Fedora-28. Removed Fedora-23 (#884)

* Added wrappers for the wx.WindowIDRef class and added the
  wx.NewIdRef function. These will make it possible to create reserved
  Window IDs using the same mechanism which is used when passing
  wx.ID_ANY to a widget constructor.  The object returned by
  wx.NewIdRef will automatically convert to an int when passing it to
  a window constructor, and can also be used as the source in a
  Bind(). (#896)

* Fixed issue when sys.prefix is not unicode (Python2) and when its
  contents are not translatable to utf-8.





What is wxPython?
-----------------

wxPython is a cross-platform GUI toolkit for the Python programming
language.  It allows Python programmers to create programs with a
robust, highly functional graphical user interface, simply and
easily. It is implemented as a set of Python extension modules that
wrap the GUI components of the popular wxWidgets cross platform
library, which is written in C++. Supported platforms are Microsoft
Windows, Mac OS X and macOS, and Linux or other unix-like systems with
GTK2 or GTK3 libraries. In most cases the native widgets are used on
each platform to provide a 100% native look and feel for the
application.


What is wxPython Phoenix?
-------------------------

wxPython's Project Phoenix is a new from-the-ground-up implementation
of wxPython, created with the intent of making wxPython “better,
stronger, faster than he was before.” In other words, this new
implementation is focused on improving speed, maintainability and
extensibility of wxPython, as well as removing most of the cruft that
had accumulated over the long life of Classic wxPython.

The project has been in development off and on, mostly behind the
scenes, for many years. For the past few years automated snapshot
builds have been available for those adventurous enough to try it, and
many people eventually started using the snapshots in their projects,
even for production releases.  While there are still some things on
the periphery that need to be completed, the core of the new wxPython
extension modules which wrap the wxWidgets code has been stable for a
long time now.

Due to some things being cleaned up, reorganized, simplified and
dehackified wxPython Phoenix is not completely backwards compatible
with wxPython Classic.  This is intended. In general, however, the API
differences tend to be minor and some applications can use Phoenix
with slight, or even with no modifications.  In some other cases the
correct way to do things was also available in Classic and it's only
the wrong way that has been removed from Phoenix.  For more
information there is a Migration Guide document available at:
https://docs.wxpython.org/MigrationGuide.html

The new wxPython API reference documentation, including all
Python-specific additions and customizations, and docs for the wx.lib
package, is located at: https://docs.wxpython.org/

