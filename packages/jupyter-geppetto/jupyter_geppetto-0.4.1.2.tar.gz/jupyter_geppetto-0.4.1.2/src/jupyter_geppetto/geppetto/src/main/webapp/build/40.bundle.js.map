{"version":3,"sources":["webpack:///./js/components/controls/TextField.js","webpack:///./js/components/AComponent.js"],"names":["require","exports","module","React","AbstractComponent","props","state","value","sync_value","handleChange","bind","handleBlur","event","setState","target","nextProps","kernel","IPython","notebook","execute","path","GEPPETTO","ComponentFactory","componentsMap","push","sync","readOnly","id","Backbone","ReactDOM","dirtyView","container","window","$","parentContainer","children","get","findDOMNode","CommandController","getObjectCommands","componentType","dirty","widgetType","getComponentType","isWidget","view","isStateless","Component"],"mappings":"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","file":"40.bundle.js","sourcesContent":["define(function (require, exports, module) {\n\n\tvar React = require('react');\n\tvar AbstractComponent = require('../AComponent');\n\n\n\treturn class TextField extends AbstractComponent {\n\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tvalue: this.props.sync_value,\n\t\t\t\thandleChange: this.handleChange.bind(this),\n\t\t\t\thandleBlur: this.handleBlur.bind(this)\n\t\t\t}\n\n\t\t\tthis.handleChange = this.handleChange.bind(this);\n\t\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\t}\n\t\t// getInitialState: function () {\n\t\t// \treturn { value: this.props.sync_value };\n\t\t// },\n\t\thandleChange(event) {\n\t\t\tthis.setState({ value: event.target.value });\n\t\t\tthis.state.handleChange(event.target.value);\n\t\t}\n\t\thandleBlur(event) {\n\t\t\t//this.setState({value: event.target.value});\n\t\t\tthis.state.handleBlur(event.target.value);\n\t\t}\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tthis.setState({\n\t\t\t\tvalue: nextProps.sync_value\n\t\t\t});\n\t\t}\n\t\tsync() {\n\t\t\tvar kernel = IPython.notebook.kernel;\n\t\t\tkernel.execute('from jupyter_geppetto.geppetto_comm import GeppettoJupyterGUISync');\n\t\t\tkernel.execute('tf = GeppettoJupyterGUISync.TextFieldSync(path=\"' + this.props.path + '\",value=\"' + this.props.value + '\")');\n\t\t\tkernel.execute('tf.sync()');\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tif (!('TEXTFIELD' in GEPPETTO.ComponentFactory.componentsMap)) {\n\t\t\t\tGEPPETTO.ComponentFactory.componentsMap['TEXTFIELD'] = []\n\t\t\t}\n\t\t\tGEPPETTO.ComponentFactory.componentsMap['TEXTFIELD'].push(this);\n\n\n\t\t\tthis.sync();\n\t\t}\n\n\t\trender() {\n\t\t\tvar readOnly = this.props.readOnly === true;\n\t\t\treturn (\n\t\t\t\t<input readOnly={readOnly} type=\"text\" id={this.props.id} value={this.state.value} onChange={this.handleChange} onBlur={this.handleBlur} />\n\t\t\t);\n\t\t}\n\t};\n\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/components/controls/TextField.js","/**\n *\n * High Level widget component\n * @module Widgets/Widget\n * @author Adrian Quintana (adrian@metacell.us)\n */\ndefine(function (require) {\n\n    var Backbone = require('backbone');\n    var React = require('react');\n    var ReactDOM = require('react-dom');\n\n        /**\n         * Creates base view for widget\n         */\n        //https://gist.github.com/aldendaniels/5d94ecdbff89295f4cd6\n        return class AbstractComponent extends React.Component {\n\n            constructor(props) {\n                super(props);\n                this.dirtyView = false;\n                this.container = null;\n                window[this.props.id]=this;\n            }\n\n            getContainer() {\n                if (this.container == null){\n                    this.container = $(this.props.parentContainer).children().get(0);\n                }\n\n                // If widget is added in a react way parent Container will be null\n                if (this.container == null){\n                    this.container = ReactDOM.findDOMNode(this);\n                }\n                \n                return this.container;\n            }\n\n            isWidget() {\n                return false;\n            }\n\n            help() {\n                return GEPPETTO.CommandController.getObjectCommands(this.props.id);\n            }\n\n            getComponentType(){\n                return this.props.componentType;\n            }\n\n\n            /**\n             * Gets the ID of the widget\n             *\n             * @command getId()\n             * @returns {String} - ID of widget\n             */\n            getId() {\n                return this.props.id;\n            }\n\n            getHelp() {\n                return '### Inline help not yet available for this widget! \\n\\n' +\n                    'Try the <a href=\"http://docs.geppetto.org/en/latest/usingwidgets.html\" target=\"_blank\">online documentation</a> instead.';\n            }\n\n\n            /**\n             * Did something change in the state of the widget?\n             *\n             * @command isDirty()\n             * @returns {boolean} - ID of widget\n             */\n            isDirty () {\n                return this.dirtyView;\n            }\n\n            /**\n             * Explicitly sets status of view\n             * NOTE: we need to be able to control this from outside the component\n             *\n             * @command setDirty()\n             * @param {boolean} dirty\n             */\n            setDirty (dirty) {\n                this.dirtyView = dirty;\n            }\n\n            /**\n             * Get view with attributes common to all widgets\n             *\n             * @returns {{size: {height: *, width: *}, position: {left: *, top: *}}}\n             */\n            getView() {\n                return  {\n                    widgetType: this.getComponentType(),\n                    isWidget: this.isWidget()\n                };\n            }\n\n            /**\n             * Set attributes common to all widgets - override for widget specific behaviour\n             *\n             * @param view\n             */\n            setView(view) {\n                // after setting view through setView, reset dirty flag\n                this.dirtyView = false;\n            }\n\n            isStateLess(){\n                return this.props.isStateless;\n            }\n\n            render () {\n                \n            }\n\n        };\n})\n\n\n\n// WEBPACK FOOTER //\n// ./js/components/AComponent.js"],"sourceRoot":""}