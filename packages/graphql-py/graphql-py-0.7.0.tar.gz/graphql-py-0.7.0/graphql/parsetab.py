
# /Users/deebug/Documents/Code/graphql-py/graphql/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '4F3716A31F5AE5723EB3F2B857E8AE19'
    
_lr_action_items = {'BRACE_L':([0,21,23,24,25,26,27,28,29,30,31,43,44,45,49,50,54,55,59,60,62,68,69,71,72,73,74,80,81,85,87,88,89,92,95,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,122,123,124,125,127,135,136,137,139,141,147,148,149,150,151,152,153,154,155,158,159,160,162,165,166,167,169,],[5,5,-72,-68,-69,-70,-71,-73,-74,-75,5,5,5,5,-52,-54,5,5,5,5,5,-53,-56,5,-51,-123,5,5,5,-57,118,-55,5,-61,5,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,118,-66,118,-103,-105,-111,-102,-104,-110,118,156,-86,-87,-88,-89,-90,-91,-92,-93,156,156,-107,-109,-116,-106,-108,-115,156,]),'FRAGMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,59,60,61,62,63,64,65,66,68,69,70,75,76,79,81,82,83,84,85,86,87,88,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[9,9,9,-7,25,-8,-9,25,32,-14,-15,-6,9,-5,25,-18,-19,-20,-21,25,-37,32,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-4,-16,-17,-33,-34,-35,-36,-76,25,-52,-54,25,-39,25,-13,25,-32,-31,-30,-29,-28,-27,25,-59,-53,-56,-38,-11,-12,25,-26,-25,-24,-23,-57,-58,113,-55,-43,-10,-41,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,25,-96,-94,-95,-97,-98,-99,-100,-101,113,25,-42,25,-40,-66,113,-103,-105,25,-111,-113,25,-102,-104,-110,-112,113,113,-114,-86,-87,-88,-89,-90,-91,-92,-93,113,25,113,-107,-109,25,-116,-118,-106,-108,-115,-117,113,-119,]),'QUERY':([0,2,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,59,60,61,62,63,64,65,66,68,69,70,75,76,79,81,82,83,84,85,86,87,88,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[10,10,-7,26,-8,-9,26,35,-14,-15,-6,26,-18,-19,-20,-21,26,-37,35,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,26,-52,-54,26,-39,26,-13,26,-32,-31,-30,-29,-28,-27,26,-59,-53,-56,-38,-11,-12,26,-26,-25,-24,-23,-57,-58,114,-55,-43,-10,-41,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,26,-96,-94,-95,-97,-98,-99,-100,-101,114,26,-42,26,-40,-66,114,-103,-105,26,-111,-113,26,-102,-104,-110,-112,114,114,-114,-86,-87,-88,-89,-90,-91,-92,-93,114,26,114,-107,-109,26,-116,-118,-106,-108,-115,-117,114,-119,]),'MUTATION':([0,2,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,59,60,61,62,63,64,65,66,68,69,70,75,76,79,81,82,83,84,85,86,87,88,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[11,11,-7,27,-8,-9,27,36,-14,-15,-6,27,-18,-19,-20,-21,27,-37,36,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,27,-52,-54,27,-39,27,-13,27,-32,-31,-30,-29,-28,-27,27,-59,-53,-56,-38,-11,-12,27,-26,-25,-24,-23,-57,-58,115,-55,-43,-10,-41,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,27,-96,-94,-95,-97,-98,-99,-100,-101,115,27,-42,27,-40,-66,115,-103,-105,27,-111,-113,27,-102,-104,-110,-112,115,115,-114,-86,-87,-88,-89,-90,-91,-92,-93,115,27,115,-107,-109,27,-116,-118,-106,-108,-115,-117,115,-119,]),'$end':([1,2,3,4,6,7,12,13,14,40,41,56,75,76,91,96,121,],[0,-1,-2,-7,-8,-9,-6,-3,-5,-4,-16,-13,-11,-12,-10,-41,-40,]),'SPREAD':([5,15,16,17,18,19,21,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,49,50,52,59,60,61,62,63,64,68,69,70,81,82,83,84,85,88,90,97,119,],[22,22,-18,-19,-20,-21,-37,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-52,-54,-39,-32,-31,-30,-29,-28,-27,-53,-56,-38,-26,-25,-24,-23,-57,-55,-43,-22,-42,]),'NAME':([5,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,79,81,82,83,84,85,86,87,88,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[24,24,34,-14,-15,24,-18,-19,-20,-21,24,-37,34,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,24,-52,-54,24,-39,24,24,-32,-31,-30,-29,-28,-27,24,-59,-53,-56,-38,24,-26,-25,-24,-23,-57,-58,112,-55,-43,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,24,-96,-94,-95,-97,-98,-99,-100,-101,112,24,-42,24,-66,112,-103,-105,24,-111,-113,24,-102,-104,-110,-112,112,112,-114,-86,-87,-88,-89,-90,-91,-92,-93,112,24,112,-107,-109,24,-116,-118,-106,-108,-115,-117,112,-119,]),'ON':([5,8,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,79,81,82,83,84,85,86,87,88,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[23,23,-14,-15,23,-18,-19,-20,-21,23,-37,53,-72,-68,-69,-70,-71,-73,-74,-75,-45,58,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,23,-52,-54,23,-39,23,23,-32,-31,-30,-29,-28,-27,23,-59,-53,-56,-38,23,-26,-25,-24,-23,-57,-58,116,-55,-43,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,23,-96,-94,-95,-97,-98,-99,-100,-101,116,23,-42,23,-66,116,-103,-105,23,-111,-113,23,-102,-104,-110,-112,116,116,-114,-86,-87,-88,-89,-90,-91,-92,-93,116,23,116,-107,-109,23,-116,-118,-106,-108,-115,-117,116,-119,]),'TRUE':([5,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,79,81,82,83,84,85,86,87,88,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[28,28,37,-14,-15,28,-18,-19,-20,-21,28,-37,37,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,28,-52,-54,28,-39,28,28,-32,-31,-30,-29,-28,-27,28,-59,-53,-56,-38,28,-26,-25,-24,-23,-57,-58,110,-55,-43,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,28,-96,-94,-95,-97,-98,-99,-100,-101,110,28,-42,28,-66,110,-103,-105,28,-111,-113,28,-102,-104,-110,-112,110,110,-114,-86,-87,-88,-89,-90,-91,-92,-93,110,28,110,-107,-109,28,-116,-118,-106,-108,-115,-117,110,-119,]),'FALSE':([5,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,79,81,82,83,84,85,86,87,88,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[29,29,38,-14,-15,29,-18,-19,-20,-21,29,-37,38,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,29,-52,-54,29,-39,29,29,-32,-31,-30,-29,-28,-27,29,-59,-53,-56,-38,29,-26,-25,-24,-23,-57,-58,111,-55,-43,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,29,-96,-94,-95,-97,-98,-99,-100,-101,111,29,-42,29,-66,111,-103,-105,29,-111,-113,29,-102,-104,-110,-112,111,111,-114,-86,-87,-88,-89,-90,-91,-92,-93,111,29,111,-107,-109,29,-116,-118,-106,-108,-115,-117,111,-119,]),'NULL':([5,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,63,64,65,66,68,69,70,79,81,82,83,84,85,86,87,88,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,134,135,136,137,138,139,141,145,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,],[30,30,39,-14,-15,30,-18,-19,-20,-21,30,-37,39,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-76,30,-52,-54,30,-39,30,30,-32,-31,-30,-29,-28,-27,30,-59,-53,-56,-38,30,-26,-25,-24,-23,-57,-58,109,-55,-43,-22,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,30,-96,-94,-95,-97,-98,-99,-100,-101,109,30,-42,30,-66,109,-103,-105,30,-111,-113,30,-102,-104,-110,-112,109,109,-114,-86,-87,-88,-89,-90,-91,-92,-93,109,30,109,-107,-109,30,-116,-118,-106,-108,-115,-117,109,-119,]),'BRACE_R':([15,16,17,18,19,21,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,43,44,45,46,49,50,52,59,60,61,62,63,64,68,69,70,81,82,83,84,85,88,90,97,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,122,124,126,127,128,135,137,138,145,147,148,149,150,151,152,153,154,156,159,161,162,163,165,167,168,170,],[41,-18,-19,-20,-21,-37,-72,-68,-69,-70,-71,-73,-74,-75,-45,-44,-46,-47,-48,-49,-50,-16,-17,-33,-34,-35,-36,-52,-54,-39,-32,-31,-30,-29,-28,-27,-53,-56,-38,-26,-25,-24,-23,-57,-55,-43,-22,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,127,-42,-66,-103,137,-111,-113,-102,-110,-112,-114,-86,-87,-88,-89,-90,-91,-92,-93,162,-107,167,-116,-118,-106,-115,-117,-119,]),'COLON':([21,23,24,25,26,27,28,29,30,67,94,129,164,],[47,-72,-68,-69,-70,-71,-73,-74,-75,87,120,139,169,]),'PAREN_L':([21,23,24,25,26,27,28,29,30,31,43,69,],[48,-72,-68,-69,-70,-71,-73,-74,-75,57,48,48,]),'AT':([21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,43,44,49,50,52,54,59,68,69,71,72,73,80,85,88,92,],[51,-72,-68,-69,-70,-71,-73,-74,-75,51,-45,-44,-46,-47,-48,-49,-50,51,51,51,-54,51,51,51,-53,-56,51,-51,-123,51,-57,-55,-61,]),'PAREN_R':([23,24,25,26,27,28,29,30,65,66,73,77,78,86,93,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,122,124,127,130,131,132,133,135,137,140,142,143,146,147,148,149,150,151,152,153,154,157,159,162,165,167,],[-72,-68,-69,-70,-71,-73,-74,-75,85,-59,-123,92,-63,-58,-62,-60,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,-66,-103,-111,-65,-120,-121,-122,-102,-110,-64,-125,-126,-67,-86,-87,-88,-89,-90,-91,-92,-93,-124,-107,-116,-106,-115,]),'BRACKET_R':([23,24,25,26,27,28,29,30,73,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,122,123,124,125,127,131,132,133,135,136,137,142,143,144,147,148,149,150,151,152,153,154,155,157,158,159,160,162,165,166,167,],[-72,-68,-69,-70,-71,-73,-74,-75,-123,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,124,-66,135,-103,-105,-111,-120,-121,-122,-102,-104,-110,-125,-126,157,-86,-87,-88,-89,-90,-91,-92,-93,159,-124,165,-107,-109,-116,-106,-108,-115,]),'INT_VALUE':([23,24,25,26,27,28,29,30,87,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,122,123,124,125,127,135,136,137,139,141,147,148,149,150,151,152,153,154,155,158,159,160,162,165,166,167,169,],[-72,-68,-69,-70,-71,-73,-74,-75,100,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,100,-66,100,-103,-105,-111,-102,-104,-110,100,147,-86,-87,-88,-89,-90,-91,-92,-93,147,147,-107,-109,-116,-106,-108,-115,147,]),'FLOAT_VALUE':([23,24,25,26,27,28,29,30,87,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,122,123,124,125,127,135,136,137,139,141,147,148,149,150,151,152,153,154,155,158,159,160,162,165,166,167,169,],[-72,-68,-69,-70,-71,-73,-74,-75,101,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,101,-66,101,-103,-105,-111,-102,-104,-110,101,148,-86,-87,-88,-89,-90,-91,-92,-93,148,148,-107,-109,-116,-106,-108,-115,148,]),'STRING_VALUE':([23,24,25,26,27,28,29,30,87,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,122,123,124,125,127,135,136,137,139,141,147,148,149,150,151,152,153,154,155,158,159,160,162,165,166,167,169,],[-72,-68,-69,-70,-71,-73,-74,-75,102,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,102,-66,102,-103,-105,-111,-102,-104,-110,102,149,-86,-87,-88,-89,-90,-91,-92,-93,149,149,-107,-109,-116,-106,-108,-115,149,]),'DOLLAR':([23,24,25,26,27,28,29,30,57,73,77,78,87,93,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,122,123,124,125,127,130,131,132,133,135,136,137,139,140,142,143,146,147,148,149,150,151,152,153,154,157,159,162,165,167,],[-72,-68,-69,-70,-71,-73,-74,-75,79,-123,79,-63,108,-62,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,108,-66,108,-103,-105,-111,-65,-120,-121,-122,-102,-104,-110,108,-64,-125,-126,-67,-86,-87,-88,-89,-90,-91,-92,-93,-124,-107,-116,-106,-115,]),'BRACKET_L':([23,24,25,26,27,28,29,30,87,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,120,122,123,124,125,127,134,135,136,137,139,141,147,148,149,150,151,152,153,154,155,158,159,160,162,165,166,167,169,],[-72,-68,-69,-70,-71,-73,-74,-75,117,-77,-78,-79,-80,-81,-82,-83,-84,-85,-96,-94,-95,-97,-98,-99,-100,-101,117,134,-66,117,-103,-105,-111,134,-102,-104,-110,117,155,-86,-87,-88,-89,-90,-91,-92,-93,155,155,-107,-109,-116,-106,-108,-115,155,]),'BANG':([23,24,25,26,27,28,29,30,73,131,132,157,],[-72,-68,-69,-70,-71,-73,-74,-75,-123,142,143,-124,]),'EQUALS':([23,24,25,26,27,28,29,30,73,130,131,132,133,142,143,157,],[-72,-68,-69,-70,-71,-73,-74,-75,-123,141,-120,-121,-122,-125,-126,-124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'document':([0,],[1,]),'definition_list':([0,],[2,]),'selection_set':([0,21,31,43,44,45,54,55,59,60,62,71,74,80,81,89,95,],[3,46,56,61,63,64,75,76,82,83,84,90,91,96,97,119,121,]),'definition':([0,2,],[4,12,]),'operation_definition':([0,2,],[6,6,]),'fragment_definition':([0,2,3,13,],[7,7,14,40,]),'operation_type':([0,2,],[8,8,]),'fragment_list':([3,],[13,]),'selection_list':([5,],[15,]),'selection':([5,15,],[16,42,]),'field':([5,15,],[17,17,]),'fragment_spread':([5,15,],[18,18,]),'inline_fragment':([5,15,],[19,19,]),'alias':([5,15,],[20,20,]),'name':([5,8,15,20,48,51,53,58,65,79,108,118,120,126,134,156,161,],[21,31,21,43,67,69,73,73,67,94,122,129,73,129,73,164,164,]),'fragment_name':([9,22,],[33,52,]),'arguments':([21,43,69,],[44,59,88,]),'directives':([21,31,43,44,52,54,59,71,80,],[45,55,60,62,70,74,81,89,95,]),'directive_list':([21,31,43,44,52,54,59,71,80,],[49,49,49,49,49,49,49,49,49,]),'directive':([21,31,43,44,49,52,54,59,71,80,],[50,50,50,50,68,50,50,50,50,50,]),'variable_definitions':([31,],[54,]),'argument_list':([48,],[65,]),'argument':([48,65,],[66,86,]),'type_condition':([53,58,],[71,80,]),'named_type':([53,58,120,134,],[72,72,131,131,]),'variable_definition_list':([57,],[77,]),'variable_definition':([57,77,],[78,93,]),'value':([87,117,123,139,],[98,125,136,145,]),'variable':([87,117,123,139,],[99,99,99,99,]),'null_value':([87,117,123,139,141,155,158,169,],[103,103,103,103,150,150,150,150,]),'boolean_value':([87,117,123,139,141,155,158,169,],[104,104,104,104,151,151,151,151,]),'enum_value':([87,117,123,139,141,155,158,169,],[105,105,105,105,152,152,152,152,]),'list_value':([87,117,123,139,],[106,106,106,106,]),'object_value':([87,117,123,139,],[107,107,107,107,]),'value_list':([117,],[123,]),'object_field_list':([118,],[126,]),'object_field':([118,126,],[128,138,]),'type':([120,134,],[130,144,]),'list_type':([120,134,],[132,132,]),'non_null_type':([120,134,],[133,133,]),'default_value':([130,],[140,]),'const_value':([141,155,158,169,],[146,160,166,170,]),'const_list_value':([141,155,158,169,],[153,153,153,153,]),'const_object_value':([141,155,158,169,],[154,154,154,154,]),'const_value_list':([155,],[158,]),'const_object_field_list':([156,],[161,]),'const_object_field':([156,161,],[163,168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> definition_list','document',1,'p_document','parser.py',42),
  ('document -> selection_set','document',1,'p_document_shorthand','parser.py',48),
  ('document -> selection_set fragment_list','document',2,'p_document_shorthand_with_fragments','parser.py',54),
  ('fragment_list -> fragment_list fragment_definition','fragment_list',2,'p_fragment_list','parser.py',60),
  ('fragment_list -> fragment_definition','fragment_list',1,'p_fragment_list_single','parser.py',66),
  ('definition_list -> definition_list definition','definition_list',2,'p_definition_list','parser.py',72),
  ('definition_list -> definition','definition_list',1,'p_definition_list_single','parser.py',78),
  ('definition -> operation_definition','definition',1,'p_definition','parser.py',84),
  ('definition -> fragment_definition','definition',1,'p_definition','parser.py',85),
  ('operation_definition -> operation_type name variable_definitions directives selection_set','operation_definition',5,'p_operation_definition1','parser.py',97),
  ('operation_definition -> operation_type name variable_definitions selection_set','operation_definition',4,'p_operation_definition2','parser.py',108),
  ('operation_definition -> operation_type name directives selection_set','operation_definition',4,'p_operation_definition3','parser.py',118),
  ('operation_definition -> operation_type name selection_set','operation_definition',3,'p_operation_definition4','parser.py',128),
  ('operation_type -> QUERY','operation_type',1,'p_operation_type','parser.py',134),
  ('operation_type -> MUTATION','operation_type',1,'p_operation_type','parser.py',135),
  ('selection_set -> BRACE_L selection_list BRACE_R','selection_set',3,'p_selection_set','parser.py',141),
  ('selection_list -> selection_list selection','selection_list',2,'p_selection_list','parser.py',147),
  ('selection_list -> selection','selection_list',1,'p_selection_list_single','parser.py',153),
  ('selection -> field','selection',1,'p_selection','parser.py',159),
  ('selection -> fragment_spread','selection',1,'p_selection','parser.py',160),
  ('selection -> inline_fragment','selection',1,'p_selection','parser.py',161),
  ('field -> alias name arguments directives selection_set','field',5,'p_field_all','parser.py',167),
  ('field -> name arguments directives selection_set','field',4,'p_field_optional1_1','parser.py',174),
  ('field -> alias name directives selection_set','field',4,'p_field_optional1_2','parser.py',181),
  ('field -> alias name arguments selection_set','field',4,'p_field_optional1_3','parser.py',187),
  ('field -> alias name arguments directives','field',4,'p_field_optional1_4','parser.py',193),
  ('field -> name directives selection_set','field',3,'p_field_optional2_1','parser.py',199),
  ('field -> name arguments selection_set','field',3,'p_field_optional2_2','parser.py',205),
  ('field -> name arguments directives','field',3,'p_field_optional2_3','parser.py',211),
  ('field -> alias name selection_set','field',3,'p_field_optional2_4','parser.py',217),
  ('field -> alias name directives','field',3,'p_field_optional2_5','parser.py',223),
  ('field -> alias name arguments','field',3,'p_field_optional2_6','parser.py',229),
  ('field -> alias name','field',2,'p_field_optional3_1','parser.py',235),
  ('field -> name arguments','field',2,'p_field_optional3_2','parser.py',241),
  ('field -> name directives','field',2,'p_field_optional3_3','parser.py',247),
  ('field -> name selection_set','field',2,'p_field_optional3_4','parser.py',253),
  ('field -> name','field',1,'p_field_optional4','parser.py',259),
  ('fragment_spread -> SPREAD fragment_name directives','fragment_spread',3,'p_fragment_spread1','parser.py',265),
  ('fragment_spread -> SPREAD fragment_name','fragment_spread',2,'p_fragment_spread2','parser.py',271),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition directives selection_set','fragment_definition',6,'p_fragment_definition1','parser.py',277),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition selection_set','fragment_definition',5,'p_fragment_definition2','parser.py',284),
  ('inline_fragment -> SPREAD ON type_condition directives selection_set','inline_fragment',5,'p_inline_fragment1','parser.py',291),
  ('inline_fragment -> SPREAD ON type_condition selection_set','inline_fragment',4,'p_inline_fragment2','parser.py',298),
  ('fragment_name -> NAME','fragment_name',1,'p_fragment_name','parser.py',304),
  ('fragment_name -> FRAGMENT','fragment_name',1,'p_fragment_name','parser.py',305),
  ('fragment_name -> QUERY','fragment_name',1,'p_fragment_name','parser.py',306),
  ('fragment_name -> MUTATION','fragment_name',1,'p_fragment_name','parser.py',307),
  ('fragment_name -> TRUE','fragment_name',1,'p_fragment_name','parser.py',308),
  ('fragment_name -> FALSE','fragment_name',1,'p_fragment_name','parser.py',309),
  ('fragment_name -> NULL','fragment_name',1,'p_fragment_name','parser.py',310),
  ('type_condition -> named_type','type_condition',1,'p_type_condition','parser.py',316),
  ('directives -> directive_list','directives',1,'p_directives','parser.py',322),
  ('directive_list -> directive_list directive','directive_list',2,'p_directive_list','parser.py',328),
  ('directive_list -> directive','directive_list',1,'p_directive_list_single','parser.py',334),
  ('directive -> AT name arguments','directive',3,'p_directive','parser.py',340),
  ('directive -> AT name','directive',2,'p_directive','parser.py',341),
  ('arguments -> PAREN_L argument_list PAREN_R','arguments',3,'p_arguments','parser.py',348),
  ('argument_list -> argument_list argument','argument_list',2,'p_argument_list','parser.py',354),
  ('argument_list -> argument','argument_list',1,'p_argument_list_single','parser.py',360),
  ('argument -> name COLON value','argument',3,'p_argument','parser.py',366),
  ('variable_definitions -> PAREN_L variable_definition_list PAREN_R','variable_definitions',3,'p_variable_definitions','parser.py',372),
  ('variable_definition_list -> variable_definition_list variable_definition','variable_definition_list',2,'p_variable_definition_list','parser.py',378),
  ('variable_definition_list -> variable_definition','variable_definition_list',1,'p_variable_definition_list_single','parser.py',384),
  ('variable_definition -> DOLLAR name COLON type default_value','variable_definition',5,'p_variable_definition1','parser.py',390),
  ('variable_definition -> DOLLAR name COLON type','variable_definition',4,'p_variable_definition2','parser.py',396),
  ('variable -> DOLLAR name','variable',2,'p_variable','parser.py',402),
  ('default_value -> EQUALS const_value','default_value',2,'p_default_value','parser.py',408),
  ('name -> NAME','name',1,'p_name','parser.py',414),
  ('name -> FRAGMENT','name',1,'p_name','parser.py',415),
  ('name -> QUERY','name',1,'p_name','parser.py',416),
  ('name -> MUTATION','name',1,'p_name','parser.py',417),
  ('name -> ON','name',1,'p_name','parser.py',418),
  ('name -> TRUE','name',1,'p_name','parser.py',419),
  ('name -> FALSE','name',1,'p_name','parser.py',420),
  ('name -> NULL','name',1,'p_name','parser.py',421),
  ('alias -> name COLON','alias',2,'p_alias','parser.py',427),
  ('value -> variable','value',1,'p_value','parser.py',433),
  ('value -> INT_VALUE','value',1,'p_value','parser.py',434),
  ('value -> FLOAT_VALUE','value',1,'p_value','parser.py',435),
  ('value -> STRING_VALUE','value',1,'p_value','parser.py',436),
  ('value -> null_value','value',1,'p_value','parser.py',437),
  ('value -> boolean_value','value',1,'p_value','parser.py',438),
  ('value -> enum_value','value',1,'p_value','parser.py',439),
  ('value -> list_value','value',1,'p_value','parser.py',440),
  ('value -> object_value','value',1,'p_value','parser.py',441),
  ('const_value -> INT_VALUE','const_value',1,'p_const_value','parser.py',447),
  ('const_value -> FLOAT_VALUE','const_value',1,'p_const_value','parser.py',448),
  ('const_value -> STRING_VALUE','const_value',1,'p_const_value','parser.py',449),
  ('const_value -> null_value','const_value',1,'p_const_value','parser.py',450),
  ('const_value -> boolean_value','const_value',1,'p_const_value','parser.py',451),
  ('const_value -> enum_value','const_value',1,'p_const_value','parser.py',452),
  ('const_value -> const_list_value','const_value',1,'p_const_value','parser.py',453),
  ('const_value -> const_object_value','const_value',1,'p_const_value','parser.py',454),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','parser.py',460),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','parser.py',461),
  ('null_value -> NULL','null_value',1,'p_null_value','parser.py',467),
  ('enum_value -> NAME','enum_value',1,'p_enum_value','parser.py',473),
  ('enum_value -> FRAGMENT','enum_value',1,'p_enum_value','parser.py',474),
  ('enum_value -> QUERY','enum_value',1,'p_enum_value','parser.py',475),
  ('enum_value -> MUTATION','enum_value',1,'p_enum_value','parser.py',476),
  ('enum_value -> ON','enum_value',1,'p_enum_value','parser.py',477),
  ('list_value -> BRACKET_L value_list BRACKET_R','list_value',3,'p_list_value','parser.py',483),
  ('list_value -> BRACKET_L BRACKET_R','list_value',2,'p_list_value','parser.py',484),
  ('value_list -> value_list value','value_list',2,'p_value_list','parser.py',490),
  ('value_list -> value','value_list',1,'p_value_list_single','parser.py',496),
  ('const_list_value -> BRACKET_L const_value_list BRACKET_R','const_list_value',3,'p_const_list_value','parser.py',502),
  ('const_list_value -> BRACKET_L BRACKET_R','const_list_value',2,'p_const_list_value','parser.py',503),
  ('const_value_list -> const_value_list const_value','const_value_list',2,'p_const_value_list','parser.py',509),
  ('const_value_list -> const_value','const_value_list',1,'p_const_value_list_single','parser.py',515),
  ('object_value -> BRACE_L object_field_list BRACE_R','object_value',3,'p_object_value','parser.py',521),
  ('object_value -> BRACE_L BRACE_R','object_value',2,'p_object_value','parser.py',522),
  ('object_field_list -> object_field_list object_field','object_field_list',2,'p_object_field_list','parser.py',528),
  ('object_field_list -> object_field','object_field_list',1,'p_object_field_list_single','parser.py',536),
  ('object_field -> name COLON value','object_field',3,'p_object_field','parser.py',542),
  ('const_object_value -> BRACE_L const_object_field_list BRACE_R','const_object_value',3,'p_const_object_value','parser.py',548),
  ('const_object_value -> BRACE_L BRACE_R','const_object_value',2,'p_const_object_value','parser.py',549),
  ('const_object_field_list -> const_object_field_list const_object_field','const_object_field_list',2,'p_const_object_field_list','parser.py',555),
  ('const_object_field_list -> const_object_field','const_object_field_list',1,'p_const_object_field_list_single','parser.py',563),
  ('const_object_field -> name COLON const_value','const_object_field',3,'p_const_object_field','parser.py',569),
  ('type -> named_type','type',1,'p_type','parser.py',575),
  ('type -> list_type','type',1,'p_type','parser.py',576),
  ('type -> non_null_type','type',1,'p_type','parser.py',577),
  ('named_type -> name','named_type',1,'p_named_type','parser.py',583),
  ('list_type -> BRACKET_L type BRACKET_R','list_type',3,'p_list_type','parser.py',589),
  ('non_null_type -> named_type BANG','non_null_type',2,'p_non_null_type','parser.py',595),
  ('non_null_type -> list_type BANG','non_null_type',2,'p_non_null_type','parser.py',596),
]
