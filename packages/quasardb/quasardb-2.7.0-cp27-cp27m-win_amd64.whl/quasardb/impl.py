# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _qdb.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_qdb')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_qdb')
    _qdb = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_qdb', [dirname(__file__)])
        except ImportError:
            import _qdb
            return _qdb
        try:
            _mod = imp.load_module('_qdb', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _qdb = swig_import_helper()
    del swig_import_helper
else:
    import _qdb
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class qdbSwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _qdb.delete_qdbSwigPyIterator
    def __iter__(self):
        return self
qdbSwigPyIterator.value = new_instancemethod(_qdb.qdbSwigPyIterator_value, None, qdbSwigPyIterator)
qdbSwigPyIterator.incr = new_instancemethod(_qdb.qdbSwigPyIterator_incr, None, qdbSwigPyIterator)
qdbSwigPyIterator.decr = new_instancemethod(_qdb.qdbSwigPyIterator_decr, None, qdbSwigPyIterator)
qdbSwigPyIterator.distance = new_instancemethod(_qdb.qdbSwigPyIterator_distance, None, qdbSwigPyIterator)
qdbSwigPyIterator.equal = new_instancemethod(_qdb.qdbSwigPyIterator_equal, None, qdbSwigPyIterator)
qdbSwigPyIterator.copy = new_instancemethod(_qdb.qdbSwigPyIterator_copy, None, qdbSwigPyIterator)
qdbSwigPyIterator.next = new_instancemethod(_qdb.qdbSwigPyIterator_next, None, qdbSwigPyIterator)
qdbSwigPyIterator.__next__ = new_instancemethod(_qdb.qdbSwigPyIterator___next__, None, qdbSwigPyIterator)
qdbSwigPyIterator.previous = new_instancemethod(_qdb.qdbSwigPyIterator_previous, None, qdbSwigPyIterator)
qdbSwigPyIterator.advance = new_instancemethod(_qdb.qdbSwigPyIterator_advance, None, qdbSwigPyIterator)
qdbSwigPyIterator.__eq__ = new_instancemethod(_qdb.qdbSwigPyIterator___eq__, None, qdbSwigPyIterator)
qdbSwigPyIterator.__ne__ = new_instancemethod(_qdb.qdbSwigPyIterator___ne__, None, qdbSwigPyIterator)
qdbSwigPyIterator.__iadd__ = new_instancemethod(_qdb.qdbSwigPyIterator___iadd__, None, qdbSwigPyIterator)
qdbSwigPyIterator.__isub__ = new_instancemethod(_qdb.qdbSwigPyIterator___isub__, None, qdbSwigPyIterator)
qdbSwigPyIterator.__add__ = new_instancemethod(_qdb.qdbSwigPyIterator___add__, None, qdbSwigPyIterator)
qdbSwigPyIterator.__sub__ = new_instancemethod(_qdb.qdbSwigPyIterator___sub__, None, qdbSwigPyIterator)
qdbSwigPyIterator_swigregister = _qdb.qdbSwigPyIterator_swigregister
qdbSwigPyIterator_swigregister(qdbSwigPyIterator)

SHARED_PTR_DISOWN = _qdb.SHARED_PTR_DISOWN
qdb_l_alias_max_length = _qdb.qdb_l_alias_max_length
error_origin_system_remote = _qdb.error_origin_system_remote
error_origin_system_local = _qdb.error_origin_system_local
error_origin_connection = _qdb.error_origin_connection
error_origin_input = _qdb.error_origin_input
error_origin_operation = _qdb.error_origin_operation
error_origin_protocol = _qdb.error_origin_protocol
error_severity_unrecoverable = _qdb.error_severity_unrecoverable
error_severity_error = _qdb.error_severity_error
error_severity_warning = _qdb.error_severity_warning
error_severity_info = _qdb.error_severity_info
error_ok = _qdb.error_ok
error_uninitialized = _qdb.error_uninitialized
error_alias_not_found = _qdb.error_alias_not_found
error_alias_already_exists = _qdb.error_alias_already_exists
error_out_of_bounds = _qdb.error_out_of_bounds
error_skipped = _qdb.error_skipped
error_incompatible_type = _qdb.error_incompatible_type
error_container_empty = _qdb.error_container_empty
error_container_full = _qdb.error_container_full
error_element_not_found = _qdb.error_element_not_found
error_element_already_exists = _qdb.error_element_already_exists
error_overflow = _qdb.error_overflow
error_underflow = _qdb.error_underflow
error_tag_already_set = _qdb.error_tag_already_set
error_tag_not_set = _qdb.error_tag_not_set
error_timeout = _qdb.error_timeout
error_connection_refused = _qdb.error_connection_refused
error_connection_reset = _qdb.error_connection_reset
error_unstable_cluster = _qdb.error_unstable_cluster
error_try_again = _qdb.error_try_again
error_conflict = _qdb.error_conflict
error_not_connected = _qdb.error_not_connected
error_resource_locked = _qdb.error_resource_locked
error_system_remote = _qdb.error_system_remote
error_system_local = _qdb.error_system_local
error_internal_remote = _qdb.error_internal_remote
error_internal_local = _qdb.error_internal_local
error_no_memory_remote = _qdb.error_no_memory_remote
error_no_memory_local = _qdb.error_no_memory_local
error_invalid_protocol = _qdb.error_invalid_protocol
error_host_not_found = _qdb.error_host_not_found
error_buffer_too_small = _qdb.error_buffer_too_small
error_not_implemented = _qdb.error_not_implemented
error_invalid_version = _qdb.error_invalid_version
error_invalid_argument = _qdb.error_invalid_argument
error_invalid_handle = _qdb.error_invalid_handle
error_reserved_alias = _qdb.error_reserved_alias
error_unmatched_content = _qdb.error_unmatched_content
error_invalid_iterator = _qdb.error_invalid_iterator
error_entry_too_large = _qdb.error_entry_too_large
error_transaction_partial_failure = _qdb.error_transaction_partial_failure
error_operation_disabled = _qdb.error_operation_disabled
error_operation_not_permitted = _qdb.error_operation_not_permitted
error_iterator_end = _qdb.error_iterator_end
error_invalid_reply = _qdb.error_invalid_reply
error_ok_created = _qdb.error_ok_created
error_no_space_left = _qdb.error_no_space_left
error_quota_exceeded = _qdb.error_quota_exceeded
error_alias_too_long = _qdb.error_alias_too_long
error_clock_skew = _qdb.error_clock_skew
error_access_denied = _qdb.error_access_denied
error_login_failed = _qdb.error_login_failed
error_column_not_found = _qdb.error_column_not_found
error_query_too_complex = _qdb.error_query_too_complex
error_invalid_crypto_key = _qdb.error_invalid_crypto_key
error_invalid_query = _qdb.error_invalid_query
error_invalid_regex = _qdb.error_invalid_regex
compression_none = _qdb.compression_none
compression_fast = _qdb.compression_fast
compression_best = _qdb.compression_best
encryption_none = _qdb.encryption_none
encryption_aes_gcm_256 = _qdb.encryption_aes_gcm_256
protocol_tcp = _qdb.protocol_tcp
qdb_entry_uninitialized = _qdb.qdb_entry_uninitialized
qdb_entry_blob = _qdb.qdb_entry_blob
qdb_entry_integer = _qdb.qdb_entry_integer
qdb_entry_hset = _qdb.qdb_entry_hset
qdb_entry_tag = _qdb.qdb_entry_tag
qdb_entry_deque = _qdb.qdb_entry_deque
operation_uninitialized = _qdb.operation_uninitialized
operation_blob_get = _qdb.operation_blob_get
operation_blob_put = _qdb.operation_blob_put
operation_blob_update = _qdb.operation_blob_update
operation_blob_cas = _qdb.operation_blob_cas
operation_blob_get_and_update = _qdb.operation_blob_get_and_update
operation_has_tag = _qdb.operation_has_tag
operation_int_put = _qdb.operation_int_put
operation_int_update = _qdb.operation_int_update
operation_int_get = _qdb.operation_int_get
operation_int_add = _qdb.operation_int_add
qdb_log_detailed = _qdb.qdb_log_detailed
qdb_log_debug = _qdb.qdb_log_debug
qdb_log_info = _qdb.qdb_log_info
qdb_log_warning = _qdb.qdb_log_warning
qdb_log_error = _qdb.qdb_log_error
qdb_log_panic = _qdb.qdb_log_panic
aggregation_first = _qdb.aggregation_first
aggregation_last = _qdb.aggregation_last
aggregation_min = _qdb.aggregation_min
aggregation_max = _qdb.aggregation_max
aggregation_arithmetic_mean = _qdb.aggregation_arithmetic_mean
aggregation_harmonic_mean = _qdb.aggregation_harmonic_mean
aggregation_geometric_mean = _qdb.aggregation_geometric_mean
aggregation_quadratic_mean = _qdb.aggregation_quadratic_mean
aggregation_count = _qdb.aggregation_count
aggregation_sum = _qdb.aggregation_sum
aggregation_sum_of_squares = _qdb.aggregation_sum_of_squares
aggregation_spread = _qdb.aggregation_spread
aggregation_sample_variance = _qdb.aggregation_sample_variance
aggregation_sample_stddev = _qdb.aggregation_sample_stddev
aggregation_population_variance = _qdb.aggregation_population_variance
aggregation_population_stddev = _qdb.aggregation_population_stddev
aggregation_abs_min = _qdb.aggregation_abs_min
aggregation_abs_max = _qdb.aggregation_abs_max
aggregation_product = _qdb.aggregation_product
aggregation_skewness = _qdb.aggregation_skewness
aggregation_kurtosis = _qdb.aggregation_kurtosis
column_uninitialized = _qdb.column_uninitialized
column_double = _qdb.column_double
column_blob = _qdb.column_blob
column_int64 = _qdb.column_int64
column_timestamp = _qdb.column_timestamp
duration_millisecond = _qdb.duration_millisecond
duration_second = _qdb.duration_second
duration_minute = _qdb.duration_minute
duration_hour = _qdb.duration_hour
duration_day = _qdb.duration_day
duration_week = _qdb.duration_week
duration_default_shard_size = _qdb.duration_default_shard_size
class retval(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.retval_swiginit(self, _qdb.new_retval())
    buffer = _swig_property(_qdb.retval_buffer_get, _qdb.retval_buffer_set)
    buffer_size = _swig_property(_qdb.retval_buffer_size_get, _qdb.retval_buffer_size_set)
    __swig_destroy__ = _qdb.delete_retval
retval_swigregister = _qdb.retval_swigregister
retval_swigregister(retval)

class error_carrier(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.error_carrier_swiginit(self, _qdb.new_error_carrier())
    error = _swig_property(_qdb.error_carrier_error_get, _qdb.error_carrier_error_set)
    __swig_destroy__ = _qdb.delete_error_carrier
error_carrier_swigregister = _qdb.error_carrier_swigregister
error_carrier_swigregister(error_carrier)

class results_list(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.results_list_swiginit(self, _qdb.new_results_list())
    error = _swig_property(_qdb.results_list_error_get, _qdb.results_list_error_set)
    results = _swig_property(_qdb.results_list_results_get, _qdb.results_list_results_set)
    __swig_destroy__ = _qdb.delete_results_list
results_list_swigregister = _qdb.results_list_swigregister
results_list_swigregister(results_list)

class wrap_ts_column(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.wrap_ts_column_swiginit(self, _qdb.new_wrap_ts_column(*args))
    name = _swig_property(_qdb.wrap_ts_column_name_get, _qdb.wrap_ts_column_name_set)
    type = _swig_property(_qdb.wrap_ts_column_type_get, _qdb.wrap_ts_column_type_set)
    __swig_destroy__ = _qdb.delete_wrap_ts_column
wrap_ts_column_swigregister = _qdb.wrap_ts_column_swigregister
wrap_ts_column_swigregister(wrap_ts_column)

class wrap_ts_blob_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.wrap_ts_blob_point_swiginit(self, _qdb.new_wrap_ts_blob_point(*args))
    timestamp = _swig_property(_qdb.wrap_ts_blob_point_timestamp_get, _qdb.wrap_ts_blob_point_timestamp_set)
    data = _swig_property(_qdb.wrap_ts_blob_point_data_get, _qdb.wrap_ts_blob_point_data_set)
    __swig_destroy__ = _qdb.delete_wrap_ts_blob_point
wrap_ts_blob_point_swigregister = _qdb.wrap_ts_blob_point_swigregister
wrap_ts_blob_point_swigregister(wrap_ts_blob_point)

class qdb_timespec_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    tv_sec = _swig_property(_qdb.qdb_timespec_t_tv_sec_get, _qdb.qdb_timespec_t_tv_sec_set)
    tv_nsec = _swig_property(_qdb.qdb_timespec_t_tv_nsec_get, _qdb.qdb_timespec_t_tv_nsec_set)

    def __init__(self):
        _qdb.qdb_timespec_t_swiginit(self, _qdb.new_qdb_timespec_t())
    __swig_destroy__ = _qdb.delete_qdb_timespec_t
qdb_timespec_t_swigregister = _qdb.qdb_timespec_t_swigregister
qdb_timespec_t_swigregister(qdb_timespec_t)

class qdb_ts_double_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    timestamp = _swig_property(_qdb.qdb_ts_double_point_timestamp_get, _qdb.qdb_ts_double_point_timestamp_set)
    value = _swig_property(_qdb.qdb_ts_double_point_value_get, _qdb.qdb_ts_double_point_value_set)

    def __init__(self):
        _qdb.qdb_ts_double_point_swiginit(self, _qdb.new_qdb_ts_double_point())
    __swig_destroy__ = _qdb.delete_qdb_ts_double_point
qdb_ts_double_point_swigregister = _qdb.qdb_ts_double_point_swigregister
qdb_ts_double_point_swigregister(qdb_ts_double_point)

class qdb_ts_int64_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    timestamp = _swig_property(_qdb.qdb_ts_int64_point_timestamp_get, _qdb.qdb_ts_int64_point_timestamp_set)
    value = _swig_property(_qdb.qdb_ts_int64_point_value_get, _qdb.qdb_ts_int64_point_value_set)

    def __init__(self):
        _qdb.qdb_ts_int64_point_swiginit(self, _qdb.new_qdb_ts_int64_point())
    __swig_destroy__ = _qdb.delete_qdb_ts_int64_point
qdb_ts_int64_point_swigregister = _qdb.qdb_ts_int64_point_swigregister
qdb_ts_int64_point_swigregister(qdb_ts_int64_point)

class qdb_ts_timestamp_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    timestamp = _swig_property(_qdb.qdb_ts_timestamp_point_timestamp_get, _qdb.qdb_ts_timestamp_point_timestamp_set)
    value = _swig_property(_qdb.qdb_ts_timestamp_point_value_get, _qdb.qdb_ts_timestamp_point_value_set)

    def __init__(self):
        _qdb.qdb_ts_timestamp_point_swiginit(self, _qdb.new_qdb_ts_timestamp_point())
    __swig_destroy__ = _qdb.delete_qdb_ts_timestamp_point
qdb_ts_timestamp_point_swigregister = _qdb.qdb_ts_timestamp_point_swigregister
qdb_ts_timestamp_point_swigregister(qdb_ts_timestamp_point)

class qdb_ts_blob_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    timestamp = _swig_property(_qdb.qdb_ts_blob_point_timestamp_get, _qdb.qdb_ts_blob_point_timestamp_set)
    content = _swig_property(_qdb.qdb_ts_blob_point_content_get, _qdb.qdb_ts_blob_point_content_set)
    content_length = _swig_property(_qdb.qdb_ts_blob_point_content_length_get, _qdb.qdb_ts_blob_point_content_length_set)

    def __init__(self):
        _qdb.qdb_ts_blob_point_swiginit(self, _qdb.new_qdb_ts_blob_point())
    __swig_destroy__ = _qdb.delete_qdb_ts_blob_point
qdb_ts_blob_point_swigregister = _qdb.qdb_ts_blob_point_swigregister
qdb_ts_blob_point_swigregister(qdb_ts_blob_point)

class qdb_ts_range_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    begin = _swig_property(_qdb.qdb_ts_range_t_begin_get, _qdb.qdb_ts_range_t_begin_set)
    end = _swig_property(_qdb.qdb_ts_range_t_end_get, _qdb.qdb_ts_range_t_end_set)

    def __init__(self):
        _qdb.qdb_ts_range_t_swiginit(self, _qdb.new_qdb_ts_range_t())
    __swig_destroy__ = _qdb.delete_qdb_ts_range_t
qdb_ts_range_t_swigregister = _qdb.qdb_ts_range_t_swigregister
qdb_ts_range_t_swigregister(qdb_ts_range_t)

class qdb_ts_blob_aggregation_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    type = _swig_property(_qdb.qdb_ts_blob_aggregation_t_type_get, _qdb.qdb_ts_blob_aggregation_t_type_set)
    range = _swig_property(_qdb.qdb_ts_blob_aggregation_t_range_get, _qdb.qdb_ts_blob_aggregation_t_range_set)
    count = _swig_property(_qdb.qdb_ts_blob_aggregation_t_count_get, _qdb.qdb_ts_blob_aggregation_t_count_set)
    result = _swig_property(_qdb.qdb_ts_blob_aggregation_t_result_get, _qdb.qdb_ts_blob_aggregation_t_result_set)

    def __init__(self):
        _qdb.qdb_ts_blob_aggregation_t_swiginit(self, _qdb.new_qdb_ts_blob_aggregation_t())
    __swig_destroy__ = _qdb.delete_qdb_ts_blob_aggregation_t
qdb_ts_blob_aggregation_t_swigregister = _qdb.qdb_ts_blob_aggregation_t_swigregister
qdb_ts_blob_aggregation_t_swigregister(qdb_ts_blob_aggregation_t)

class qdb_ts_double_aggregation_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    type = _swig_property(_qdb.qdb_ts_double_aggregation_t_type_get, _qdb.qdb_ts_double_aggregation_t_type_set)
    range = _swig_property(_qdb.qdb_ts_double_aggregation_t_range_get, _qdb.qdb_ts_double_aggregation_t_range_set)
    count = _swig_property(_qdb.qdb_ts_double_aggregation_t_count_get, _qdb.qdb_ts_double_aggregation_t_count_set)
    result = _swig_property(_qdb.qdb_ts_double_aggregation_t_result_get, _qdb.qdb_ts_double_aggregation_t_result_set)

    def __init__(self):
        _qdb.qdb_ts_double_aggregation_t_swiginit(self, _qdb.new_qdb_ts_double_aggregation_t())
    __swig_destroy__ = _qdb.delete_qdb_ts_double_aggregation_t
qdb_ts_double_aggregation_t_swigregister = _qdb.qdb_ts_double_aggregation_t_swigregister
qdb_ts_double_aggregation_t_swigregister(qdb_ts_double_aggregation_t)

class qdb_ts_int64_aggregation_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    type = _swig_property(_qdb.qdb_ts_int64_aggregation_t_type_get, _qdb.qdb_ts_int64_aggregation_t_type_set)
    range = _swig_property(_qdb.qdb_ts_int64_aggregation_t_range_get, _qdb.qdb_ts_int64_aggregation_t_range_set)
    count = _swig_property(_qdb.qdb_ts_int64_aggregation_t_count_get, _qdb.qdb_ts_int64_aggregation_t_count_set)
    result = _swig_property(_qdb.qdb_ts_int64_aggregation_t_result_get, _qdb.qdb_ts_int64_aggregation_t_result_set)
    exact_result = _swig_property(_qdb.qdb_ts_int64_aggregation_t_exact_result_get, _qdb.qdb_ts_int64_aggregation_t_exact_result_set)

    def __init__(self):
        _qdb.qdb_ts_int64_aggregation_t_swiginit(self, _qdb.new_qdb_ts_int64_aggregation_t())
    __swig_destroy__ = _qdb.delete_qdb_ts_int64_aggregation_t
qdb_ts_int64_aggregation_t_swigregister = _qdb.qdb_ts_int64_aggregation_t_swigregister
qdb_ts_int64_aggregation_t_swigregister(qdb_ts_int64_aggregation_t)

class qdb_ts_timestamp_aggregation_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    type = _swig_property(_qdb.qdb_ts_timestamp_aggregation_t_type_get, _qdb.qdb_ts_timestamp_aggregation_t_type_set)
    range = _swig_property(_qdb.qdb_ts_timestamp_aggregation_t_range_get, _qdb.qdb_ts_timestamp_aggregation_t_range_set)
    count = _swig_property(_qdb.qdb_ts_timestamp_aggregation_t_count_get, _qdb.qdb_ts_timestamp_aggregation_t_count_set)
    result = _swig_property(_qdb.qdb_ts_timestamp_aggregation_t_result_get, _qdb.qdb_ts_timestamp_aggregation_t_result_set)

    def __init__(self):
        _qdb.qdb_ts_timestamp_aggregation_t_swiginit(self, _qdb.new_qdb_ts_timestamp_aggregation_t())
    __swig_destroy__ = _qdb.delete_qdb_ts_timestamp_aggregation_t
qdb_ts_timestamp_aggregation_t_swigregister = _qdb.qdb_ts_timestamp_aggregation_t_swigregister
qdb_ts_timestamp_aggregation_t_swigregister(qdb_ts_timestamp_aggregation_t)

qdb_query_result_none = _qdb.qdb_query_result_none
qdb_query_result_double = _qdb.qdb_query_result_double
qdb_query_result_blob = _qdb.qdb_query_result_blob
qdb_query_result_int64 = _qdb.qdb_query_result_int64
qdb_query_result_timestamp = _qdb.qdb_query_result_timestamp
class wrap_qdb_table_result_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    table_name = _swig_property(_qdb.wrap_qdb_table_result_t_table_name_get, _qdb.wrap_qdb_table_result_t_table_name_set)
    columns_names = _swig_property(_qdb.wrap_qdb_table_result_t_columns_names_get, _qdb.wrap_qdb_table_result_t_columns_names_set)
    columns_count = _swig_property(_qdb.wrap_qdb_table_result_t_columns_count_get, _qdb.wrap_qdb_table_result_t_columns_count_set)
    rows_count = _swig_property(_qdb.wrap_qdb_table_result_t_rows_count_get, _qdb.wrap_qdb_table_result_t_rows_count_set)

    def __init__(self):
        _qdb.wrap_qdb_table_result_t_swiginit(self, _qdb.new_wrap_qdb_table_result_t())
    __swig_destroy__ = _qdb.delete_wrap_qdb_table_result_t
wrap_qdb_table_result_t.check_out_of_bounds = new_instancemethod(_qdb.wrap_qdb_table_result_t_check_out_of_bounds, None, wrap_qdb_table_result_t)
wrap_qdb_table_result_t.get_type = new_instancemethod(_qdb.wrap_qdb_table_result_t_get_type, None, wrap_qdb_table_result_t)
wrap_qdb_table_result_t.get_payload_blob = new_instancemethod(_qdb.wrap_qdb_table_result_t_get_payload_blob, None, wrap_qdb_table_result_t)
wrap_qdb_table_result_t.get_payload_int64 = new_instancemethod(_qdb.wrap_qdb_table_result_t_get_payload_int64, None, wrap_qdb_table_result_t)
wrap_qdb_table_result_t.get_payload_double = new_instancemethod(_qdb.wrap_qdb_table_result_t_get_payload_double, None, wrap_qdb_table_result_t)
wrap_qdb_table_result_t.get_payload_timestamp = new_instancemethod(_qdb.wrap_qdb_table_result_t_get_payload_timestamp, None, wrap_qdb_table_result_t)
wrap_qdb_table_result_t_swigregister = _qdb.wrap_qdb_table_result_t_swigregister
wrap_qdb_table_result_t_swigregister(wrap_qdb_table_result_t)

class convert_qdb_string_to_std_string(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.convert_qdb_string_to_std_string_swiginit(self, _qdb.new_convert_qdb_string_to_std_string())
    __swig_destroy__ = _qdb.delete_convert_qdb_string_to_std_string
convert_qdb_string_to_std_string.__call__ = new_instancemethod(_qdb.convert_qdb_string_to_std_string___call__, None, convert_qdb_string_to_std_string)
convert_qdb_string_to_std_string_swigregister = _qdb.convert_qdb_string_to_std_string_swigregister
convert_qdb_string_to_std_string_swigregister(convert_qdb_string_to_std_string)

class copy_table(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.copy_table_swiginit(self, _qdb.new_copy_table())
    __swig_destroy__ = _qdb.delete_copy_table
copy_table.__call__ = new_instancemethod(_qdb.copy_table___call__, None, copy_table)
copy_table_swigregister = _qdb.copy_table_swigregister
copy_table_swigregister(copy_table)

class wrap_qdb_query_result_t(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.wrap_qdb_query_result_t_swiginit(self, _qdb.new_wrap_qdb_query_result_t(*args))
    __swig_destroy__ = _qdb.delete_wrap_qdb_query_result_t
    tables_count = _swig_property(_qdb.wrap_qdb_query_result_t_tables_count_get, _qdb.wrap_qdb_query_result_t_tables_count_set)
    scanned_rows_count = _swig_property(_qdb.wrap_qdb_query_result_t_scanned_rows_count_get, _qdb.wrap_qdb_query_result_t_scanned_rows_count_set)
    tables = _swig_property(_qdb.wrap_qdb_query_result_t_tables_get, _qdb.wrap_qdb_query_result_t_tables_set)
wrap_qdb_query_result_t_swigregister = _qdb.wrap_qdb_query_result_t_swigregister
wrap_qdb_query_result_t_swigregister(wrap_qdb_query_result_t)

class StringVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.StringVec_swiginit(self, _qdb.new_StringVec(*args))
    __swig_destroy__ = _qdb.delete_StringVec
StringVec.iterator = new_instancemethod(_qdb.StringVec_iterator, None, StringVec)
StringVec.__nonzero__ = new_instancemethod(_qdb.StringVec___nonzero__, None, StringVec)
StringVec.__bool__ = new_instancemethod(_qdb.StringVec___bool__, None, StringVec)
StringVec.__len__ = new_instancemethod(_qdb.StringVec___len__, None, StringVec)
StringVec.__getslice__ = new_instancemethod(_qdb.StringVec___getslice__, None, StringVec)
StringVec.__setslice__ = new_instancemethod(_qdb.StringVec___setslice__, None, StringVec)
StringVec.__delslice__ = new_instancemethod(_qdb.StringVec___delslice__, None, StringVec)
StringVec.__delitem__ = new_instancemethod(_qdb.StringVec___delitem__, None, StringVec)
StringVec.__getitem__ = new_instancemethod(_qdb.StringVec___getitem__, None, StringVec)
StringVec.__setitem__ = new_instancemethod(_qdb.StringVec___setitem__, None, StringVec)
StringVec.pop = new_instancemethod(_qdb.StringVec_pop, None, StringVec)
StringVec.append = new_instancemethod(_qdb.StringVec_append, None, StringVec)
StringVec.empty = new_instancemethod(_qdb.StringVec_empty, None, StringVec)
StringVec.size = new_instancemethod(_qdb.StringVec_size, None, StringVec)
StringVec.swap = new_instancemethod(_qdb.StringVec_swap, None, StringVec)
StringVec.begin = new_instancemethod(_qdb.StringVec_begin, None, StringVec)
StringVec.end = new_instancemethod(_qdb.StringVec_end, None, StringVec)
StringVec.rbegin = new_instancemethod(_qdb.StringVec_rbegin, None, StringVec)
StringVec.rend = new_instancemethod(_qdb.StringVec_rend, None, StringVec)
StringVec.clear = new_instancemethod(_qdb.StringVec_clear, None, StringVec)
StringVec.get_allocator = new_instancemethod(_qdb.StringVec_get_allocator, None, StringVec)
StringVec.pop_back = new_instancemethod(_qdb.StringVec_pop_back, None, StringVec)
StringVec.erase = new_instancemethod(_qdb.StringVec_erase, None, StringVec)
StringVec.push_back = new_instancemethod(_qdb.StringVec_push_back, None, StringVec)
StringVec.front = new_instancemethod(_qdb.StringVec_front, None, StringVec)
StringVec.back = new_instancemethod(_qdb.StringVec_back, None, StringVec)
StringVec.assign = new_instancemethod(_qdb.StringVec_assign, None, StringVec)
StringVec.resize = new_instancemethod(_qdb.StringVec_resize, None, StringVec)
StringVec.insert = new_instancemethod(_qdb.StringVec_insert, None, StringVec)
StringVec.reserve = new_instancemethod(_qdb.StringVec_reserve, None, StringVec)
StringVec.capacity = new_instancemethod(_qdb.StringVec_capacity, None, StringVec)
StringVec_swigregister = _qdb.StringVec_swigregister
StringVec_swigregister(StringVec)

class RangeVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.RangeVec_swiginit(self, _qdb.new_RangeVec(*args))
    __swig_destroy__ = _qdb.delete_RangeVec
RangeVec.iterator = new_instancemethod(_qdb.RangeVec_iterator, None, RangeVec)
RangeVec.__nonzero__ = new_instancemethod(_qdb.RangeVec___nonzero__, None, RangeVec)
RangeVec.__bool__ = new_instancemethod(_qdb.RangeVec___bool__, None, RangeVec)
RangeVec.__len__ = new_instancemethod(_qdb.RangeVec___len__, None, RangeVec)
RangeVec.__getslice__ = new_instancemethod(_qdb.RangeVec___getslice__, None, RangeVec)
RangeVec.__setslice__ = new_instancemethod(_qdb.RangeVec___setslice__, None, RangeVec)
RangeVec.__delslice__ = new_instancemethod(_qdb.RangeVec___delslice__, None, RangeVec)
RangeVec.__delitem__ = new_instancemethod(_qdb.RangeVec___delitem__, None, RangeVec)
RangeVec.__getitem__ = new_instancemethod(_qdb.RangeVec___getitem__, None, RangeVec)
RangeVec.__setitem__ = new_instancemethod(_qdb.RangeVec___setitem__, None, RangeVec)
RangeVec.pop = new_instancemethod(_qdb.RangeVec_pop, None, RangeVec)
RangeVec.append = new_instancemethod(_qdb.RangeVec_append, None, RangeVec)
RangeVec.empty = new_instancemethod(_qdb.RangeVec_empty, None, RangeVec)
RangeVec.size = new_instancemethod(_qdb.RangeVec_size, None, RangeVec)
RangeVec.swap = new_instancemethod(_qdb.RangeVec_swap, None, RangeVec)
RangeVec.begin = new_instancemethod(_qdb.RangeVec_begin, None, RangeVec)
RangeVec.end = new_instancemethod(_qdb.RangeVec_end, None, RangeVec)
RangeVec.rbegin = new_instancemethod(_qdb.RangeVec_rbegin, None, RangeVec)
RangeVec.rend = new_instancemethod(_qdb.RangeVec_rend, None, RangeVec)
RangeVec.clear = new_instancemethod(_qdb.RangeVec_clear, None, RangeVec)
RangeVec.get_allocator = new_instancemethod(_qdb.RangeVec_get_allocator, None, RangeVec)
RangeVec.pop_back = new_instancemethod(_qdb.RangeVec_pop_back, None, RangeVec)
RangeVec.erase = new_instancemethod(_qdb.RangeVec_erase, None, RangeVec)
RangeVec.push_back = new_instancemethod(_qdb.RangeVec_push_back, None, RangeVec)
RangeVec.front = new_instancemethod(_qdb.RangeVec_front, None, RangeVec)
RangeVec.back = new_instancemethod(_qdb.RangeVec_back, None, RangeVec)
RangeVec.assign = new_instancemethod(_qdb.RangeVec_assign, None, RangeVec)
RangeVec.resize = new_instancemethod(_qdb.RangeVec_resize, None, RangeVec)
RangeVec.insert = new_instancemethod(_qdb.RangeVec_insert, None, RangeVec)
RangeVec.reserve = new_instancemethod(_qdb.RangeVec_reserve, None, RangeVec)
RangeVec.capacity = new_instancemethod(_qdb.RangeVec_capacity, None, RangeVec)
RangeVec_swigregister = _qdb.RangeVec_swigregister
RangeVec_swigregister(RangeVec)

class DoublePointVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.DoublePointVec_swiginit(self, _qdb.new_DoublePointVec(*args))
    __swig_destroy__ = _qdb.delete_DoublePointVec
DoublePointVec.iterator = new_instancemethod(_qdb.DoublePointVec_iterator, None, DoublePointVec)
DoublePointVec.__nonzero__ = new_instancemethod(_qdb.DoublePointVec___nonzero__, None, DoublePointVec)
DoublePointVec.__bool__ = new_instancemethod(_qdb.DoublePointVec___bool__, None, DoublePointVec)
DoublePointVec.__len__ = new_instancemethod(_qdb.DoublePointVec___len__, None, DoublePointVec)
DoublePointVec.__getslice__ = new_instancemethod(_qdb.DoublePointVec___getslice__, None, DoublePointVec)
DoublePointVec.__setslice__ = new_instancemethod(_qdb.DoublePointVec___setslice__, None, DoublePointVec)
DoublePointVec.__delslice__ = new_instancemethod(_qdb.DoublePointVec___delslice__, None, DoublePointVec)
DoublePointVec.__delitem__ = new_instancemethod(_qdb.DoublePointVec___delitem__, None, DoublePointVec)
DoublePointVec.__getitem__ = new_instancemethod(_qdb.DoublePointVec___getitem__, None, DoublePointVec)
DoublePointVec.__setitem__ = new_instancemethod(_qdb.DoublePointVec___setitem__, None, DoublePointVec)
DoublePointVec.pop = new_instancemethod(_qdb.DoublePointVec_pop, None, DoublePointVec)
DoublePointVec.append = new_instancemethod(_qdb.DoublePointVec_append, None, DoublePointVec)
DoublePointVec.empty = new_instancemethod(_qdb.DoublePointVec_empty, None, DoublePointVec)
DoublePointVec.size = new_instancemethod(_qdb.DoublePointVec_size, None, DoublePointVec)
DoublePointVec.swap = new_instancemethod(_qdb.DoublePointVec_swap, None, DoublePointVec)
DoublePointVec.begin = new_instancemethod(_qdb.DoublePointVec_begin, None, DoublePointVec)
DoublePointVec.end = new_instancemethod(_qdb.DoublePointVec_end, None, DoublePointVec)
DoublePointVec.rbegin = new_instancemethod(_qdb.DoublePointVec_rbegin, None, DoublePointVec)
DoublePointVec.rend = new_instancemethod(_qdb.DoublePointVec_rend, None, DoublePointVec)
DoublePointVec.clear = new_instancemethod(_qdb.DoublePointVec_clear, None, DoublePointVec)
DoublePointVec.get_allocator = new_instancemethod(_qdb.DoublePointVec_get_allocator, None, DoublePointVec)
DoublePointVec.pop_back = new_instancemethod(_qdb.DoublePointVec_pop_back, None, DoublePointVec)
DoublePointVec.erase = new_instancemethod(_qdb.DoublePointVec_erase, None, DoublePointVec)
DoublePointVec.push_back = new_instancemethod(_qdb.DoublePointVec_push_back, None, DoublePointVec)
DoublePointVec.front = new_instancemethod(_qdb.DoublePointVec_front, None, DoublePointVec)
DoublePointVec.back = new_instancemethod(_qdb.DoublePointVec_back, None, DoublePointVec)
DoublePointVec.assign = new_instancemethod(_qdb.DoublePointVec_assign, None, DoublePointVec)
DoublePointVec.resize = new_instancemethod(_qdb.DoublePointVec_resize, None, DoublePointVec)
DoublePointVec.insert = new_instancemethod(_qdb.DoublePointVec_insert, None, DoublePointVec)
DoublePointVec.reserve = new_instancemethod(_qdb.DoublePointVec_reserve, None, DoublePointVec)
DoublePointVec.capacity = new_instancemethod(_qdb.DoublePointVec_capacity, None, DoublePointVec)
DoublePointVec_swigregister = _qdb.DoublePointVec_swigregister
DoublePointVec_swigregister(DoublePointVec)

class Int64PointVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.Int64PointVec_swiginit(self, _qdb.new_Int64PointVec(*args))
    __swig_destroy__ = _qdb.delete_Int64PointVec
Int64PointVec.iterator = new_instancemethod(_qdb.Int64PointVec_iterator, None, Int64PointVec)
Int64PointVec.__nonzero__ = new_instancemethod(_qdb.Int64PointVec___nonzero__, None, Int64PointVec)
Int64PointVec.__bool__ = new_instancemethod(_qdb.Int64PointVec___bool__, None, Int64PointVec)
Int64PointVec.__len__ = new_instancemethod(_qdb.Int64PointVec___len__, None, Int64PointVec)
Int64PointVec.__getslice__ = new_instancemethod(_qdb.Int64PointVec___getslice__, None, Int64PointVec)
Int64PointVec.__setslice__ = new_instancemethod(_qdb.Int64PointVec___setslice__, None, Int64PointVec)
Int64PointVec.__delslice__ = new_instancemethod(_qdb.Int64PointVec___delslice__, None, Int64PointVec)
Int64PointVec.__delitem__ = new_instancemethod(_qdb.Int64PointVec___delitem__, None, Int64PointVec)
Int64PointVec.__getitem__ = new_instancemethod(_qdb.Int64PointVec___getitem__, None, Int64PointVec)
Int64PointVec.__setitem__ = new_instancemethod(_qdb.Int64PointVec___setitem__, None, Int64PointVec)
Int64PointVec.pop = new_instancemethod(_qdb.Int64PointVec_pop, None, Int64PointVec)
Int64PointVec.append = new_instancemethod(_qdb.Int64PointVec_append, None, Int64PointVec)
Int64PointVec.empty = new_instancemethod(_qdb.Int64PointVec_empty, None, Int64PointVec)
Int64PointVec.size = new_instancemethod(_qdb.Int64PointVec_size, None, Int64PointVec)
Int64PointVec.swap = new_instancemethod(_qdb.Int64PointVec_swap, None, Int64PointVec)
Int64PointVec.begin = new_instancemethod(_qdb.Int64PointVec_begin, None, Int64PointVec)
Int64PointVec.end = new_instancemethod(_qdb.Int64PointVec_end, None, Int64PointVec)
Int64PointVec.rbegin = new_instancemethod(_qdb.Int64PointVec_rbegin, None, Int64PointVec)
Int64PointVec.rend = new_instancemethod(_qdb.Int64PointVec_rend, None, Int64PointVec)
Int64PointVec.clear = new_instancemethod(_qdb.Int64PointVec_clear, None, Int64PointVec)
Int64PointVec.get_allocator = new_instancemethod(_qdb.Int64PointVec_get_allocator, None, Int64PointVec)
Int64PointVec.pop_back = new_instancemethod(_qdb.Int64PointVec_pop_back, None, Int64PointVec)
Int64PointVec.erase = new_instancemethod(_qdb.Int64PointVec_erase, None, Int64PointVec)
Int64PointVec.push_back = new_instancemethod(_qdb.Int64PointVec_push_back, None, Int64PointVec)
Int64PointVec.front = new_instancemethod(_qdb.Int64PointVec_front, None, Int64PointVec)
Int64PointVec.back = new_instancemethod(_qdb.Int64PointVec_back, None, Int64PointVec)
Int64PointVec.assign = new_instancemethod(_qdb.Int64PointVec_assign, None, Int64PointVec)
Int64PointVec.resize = new_instancemethod(_qdb.Int64PointVec_resize, None, Int64PointVec)
Int64PointVec.insert = new_instancemethod(_qdb.Int64PointVec_insert, None, Int64PointVec)
Int64PointVec.reserve = new_instancemethod(_qdb.Int64PointVec_reserve, None, Int64PointVec)
Int64PointVec.capacity = new_instancemethod(_qdb.Int64PointVec_capacity, None, Int64PointVec)
Int64PointVec_swigregister = _qdb.Int64PointVec_swigregister
Int64PointVec_swigregister(Int64PointVec)

class TimestampPointVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.TimestampPointVec_swiginit(self, _qdb.new_TimestampPointVec(*args))
    __swig_destroy__ = _qdb.delete_TimestampPointVec
TimestampPointVec.iterator = new_instancemethod(_qdb.TimestampPointVec_iterator, None, TimestampPointVec)
TimestampPointVec.__nonzero__ = new_instancemethod(_qdb.TimestampPointVec___nonzero__, None, TimestampPointVec)
TimestampPointVec.__bool__ = new_instancemethod(_qdb.TimestampPointVec___bool__, None, TimestampPointVec)
TimestampPointVec.__len__ = new_instancemethod(_qdb.TimestampPointVec___len__, None, TimestampPointVec)
TimestampPointVec.__getslice__ = new_instancemethod(_qdb.TimestampPointVec___getslice__, None, TimestampPointVec)
TimestampPointVec.__setslice__ = new_instancemethod(_qdb.TimestampPointVec___setslice__, None, TimestampPointVec)
TimestampPointVec.__delslice__ = new_instancemethod(_qdb.TimestampPointVec___delslice__, None, TimestampPointVec)
TimestampPointVec.__delitem__ = new_instancemethod(_qdb.TimestampPointVec___delitem__, None, TimestampPointVec)
TimestampPointVec.__getitem__ = new_instancemethod(_qdb.TimestampPointVec___getitem__, None, TimestampPointVec)
TimestampPointVec.__setitem__ = new_instancemethod(_qdb.TimestampPointVec___setitem__, None, TimestampPointVec)
TimestampPointVec.pop = new_instancemethod(_qdb.TimestampPointVec_pop, None, TimestampPointVec)
TimestampPointVec.append = new_instancemethod(_qdb.TimestampPointVec_append, None, TimestampPointVec)
TimestampPointVec.empty = new_instancemethod(_qdb.TimestampPointVec_empty, None, TimestampPointVec)
TimestampPointVec.size = new_instancemethod(_qdb.TimestampPointVec_size, None, TimestampPointVec)
TimestampPointVec.swap = new_instancemethod(_qdb.TimestampPointVec_swap, None, TimestampPointVec)
TimestampPointVec.begin = new_instancemethod(_qdb.TimestampPointVec_begin, None, TimestampPointVec)
TimestampPointVec.end = new_instancemethod(_qdb.TimestampPointVec_end, None, TimestampPointVec)
TimestampPointVec.rbegin = new_instancemethod(_qdb.TimestampPointVec_rbegin, None, TimestampPointVec)
TimestampPointVec.rend = new_instancemethod(_qdb.TimestampPointVec_rend, None, TimestampPointVec)
TimestampPointVec.clear = new_instancemethod(_qdb.TimestampPointVec_clear, None, TimestampPointVec)
TimestampPointVec.get_allocator = new_instancemethod(_qdb.TimestampPointVec_get_allocator, None, TimestampPointVec)
TimestampPointVec.pop_back = new_instancemethod(_qdb.TimestampPointVec_pop_back, None, TimestampPointVec)
TimestampPointVec.erase = new_instancemethod(_qdb.TimestampPointVec_erase, None, TimestampPointVec)
TimestampPointVec.push_back = new_instancemethod(_qdb.TimestampPointVec_push_back, None, TimestampPointVec)
TimestampPointVec.front = new_instancemethod(_qdb.TimestampPointVec_front, None, TimestampPointVec)
TimestampPointVec.back = new_instancemethod(_qdb.TimestampPointVec_back, None, TimestampPointVec)
TimestampPointVec.assign = new_instancemethod(_qdb.TimestampPointVec_assign, None, TimestampPointVec)
TimestampPointVec.resize = new_instancemethod(_qdb.TimestampPointVec_resize, None, TimestampPointVec)
TimestampPointVec.insert = new_instancemethod(_qdb.TimestampPointVec_insert, None, TimestampPointVec)
TimestampPointVec.reserve = new_instancemethod(_qdb.TimestampPointVec_reserve, None, TimestampPointVec)
TimestampPointVec.capacity = new_instancemethod(_qdb.TimestampPointVec_capacity, None, TimestampPointVec)
TimestampPointVec_swigregister = _qdb.TimestampPointVec_swigregister
TimestampPointVec_swigregister(TimestampPointVec)

class BlobPointVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.BlobPointVec_swiginit(self, _qdb.new_BlobPointVec(*args))
    __swig_destroy__ = _qdb.delete_BlobPointVec
BlobPointVec.iterator = new_instancemethod(_qdb.BlobPointVec_iterator, None, BlobPointVec)
BlobPointVec.__nonzero__ = new_instancemethod(_qdb.BlobPointVec___nonzero__, None, BlobPointVec)
BlobPointVec.__bool__ = new_instancemethod(_qdb.BlobPointVec___bool__, None, BlobPointVec)
BlobPointVec.__len__ = new_instancemethod(_qdb.BlobPointVec___len__, None, BlobPointVec)
BlobPointVec.__getslice__ = new_instancemethod(_qdb.BlobPointVec___getslice__, None, BlobPointVec)
BlobPointVec.__setslice__ = new_instancemethod(_qdb.BlobPointVec___setslice__, None, BlobPointVec)
BlobPointVec.__delslice__ = new_instancemethod(_qdb.BlobPointVec___delslice__, None, BlobPointVec)
BlobPointVec.__delitem__ = new_instancemethod(_qdb.BlobPointVec___delitem__, None, BlobPointVec)
BlobPointVec.__getitem__ = new_instancemethod(_qdb.BlobPointVec___getitem__, None, BlobPointVec)
BlobPointVec.__setitem__ = new_instancemethod(_qdb.BlobPointVec___setitem__, None, BlobPointVec)
BlobPointVec.pop = new_instancemethod(_qdb.BlobPointVec_pop, None, BlobPointVec)
BlobPointVec.append = new_instancemethod(_qdb.BlobPointVec_append, None, BlobPointVec)
BlobPointVec.empty = new_instancemethod(_qdb.BlobPointVec_empty, None, BlobPointVec)
BlobPointVec.size = new_instancemethod(_qdb.BlobPointVec_size, None, BlobPointVec)
BlobPointVec.swap = new_instancemethod(_qdb.BlobPointVec_swap, None, BlobPointVec)
BlobPointVec.begin = new_instancemethod(_qdb.BlobPointVec_begin, None, BlobPointVec)
BlobPointVec.end = new_instancemethod(_qdb.BlobPointVec_end, None, BlobPointVec)
BlobPointVec.rbegin = new_instancemethod(_qdb.BlobPointVec_rbegin, None, BlobPointVec)
BlobPointVec.rend = new_instancemethod(_qdb.BlobPointVec_rend, None, BlobPointVec)
BlobPointVec.clear = new_instancemethod(_qdb.BlobPointVec_clear, None, BlobPointVec)
BlobPointVec.get_allocator = new_instancemethod(_qdb.BlobPointVec_get_allocator, None, BlobPointVec)
BlobPointVec.pop_back = new_instancemethod(_qdb.BlobPointVec_pop_back, None, BlobPointVec)
BlobPointVec.erase = new_instancemethod(_qdb.BlobPointVec_erase, None, BlobPointVec)
BlobPointVec.push_back = new_instancemethod(_qdb.BlobPointVec_push_back, None, BlobPointVec)
BlobPointVec.front = new_instancemethod(_qdb.BlobPointVec_front, None, BlobPointVec)
BlobPointVec.back = new_instancemethod(_qdb.BlobPointVec_back, None, BlobPointVec)
BlobPointVec.assign = new_instancemethod(_qdb.BlobPointVec_assign, None, BlobPointVec)
BlobPointVec.resize = new_instancemethod(_qdb.BlobPointVec_resize, None, BlobPointVec)
BlobPointVec.insert = new_instancemethod(_qdb.BlobPointVec_insert, None, BlobPointVec)
BlobPointVec.reserve = new_instancemethod(_qdb.BlobPointVec_reserve, None, BlobPointVec)
BlobPointVec.capacity = new_instancemethod(_qdb.BlobPointVec_capacity, None, BlobPointVec)
BlobPointVec_swigregister = _qdb.BlobPointVec_swigregister
BlobPointVec_swigregister(BlobPointVec)

class Int64AggVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.Int64AggVec_swiginit(self, _qdb.new_Int64AggVec(*args))
    __swig_destroy__ = _qdb.delete_Int64AggVec
Int64AggVec.iterator = new_instancemethod(_qdb.Int64AggVec_iterator, None, Int64AggVec)
Int64AggVec.__nonzero__ = new_instancemethod(_qdb.Int64AggVec___nonzero__, None, Int64AggVec)
Int64AggVec.__bool__ = new_instancemethod(_qdb.Int64AggVec___bool__, None, Int64AggVec)
Int64AggVec.__len__ = new_instancemethod(_qdb.Int64AggVec___len__, None, Int64AggVec)
Int64AggVec.__getslice__ = new_instancemethod(_qdb.Int64AggVec___getslice__, None, Int64AggVec)
Int64AggVec.__setslice__ = new_instancemethod(_qdb.Int64AggVec___setslice__, None, Int64AggVec)
Int64AggVec.__delslice__ = new_instancemethod(_qdb.Int64AggVec___delslice__, None, Int64AggVec)
Int64AggVec.__delitem__ = new_instancemethod(_qdb.Int64AggVec___delitem__, None, Int64AggVec)
Int64AggVec.__getitem__ = new_instancemethod(_qdb.Int64AggVec___getitem__, None, Int64AggVec)
Int64AggVec.__setitem__ = new_instancemethod(_qdb.Int64AggVec___setitem__, None, Int64AggVec)
Int64AggVec.pop = new_instancemethod(_qdb.Int64AggVec_pop, None, Int64AggVec)
Int64AggVec.append = new_instancemethod(_qdb.Int64AggVec_append, None, Int64AggVec)
Int64AggVec.empty = new_instancemethod(_qdb.Int64AggVec_empty, None, Int64AggVec)
Int64AggVec.size = new_instancemethod(_qdb.Int64AggVec_size, None, Int64AggVec)
Int64AggVec.swap = new_instancemethod(_qdb.Int64AggVec_swap, None, Int64AggVec)
Int64AggVec.begin = new_instancemethod(_qdb.Int64AggVec_begin, None, Int64AggVec)
Int64AggVec.end = new_instancemethod(_qdb.Int64AggVec_end, None, Int64AggVec)
Int64AggVec.rbegin = new_instancemethod(_qdb.Int64AggVec_rbegin, None, Int64AggVec)
Int64AggVec.rend = new_instancemethod(_qdb.Int64AggVec_rend, None, Int64AggVec)
Int64AggVec.clear = new_instancemethod(_qdb.Int64AggVec_clear, None, Int64AggVec)
Int64AggVec.get_allocator = new_instancemethod(_qdb.Int64AggVec_get_allocator, None, Int64AggVec)
Int64AggVec.pop_back = new_instancemethod(_qdb.Int64AggVec_pop_back, None, Int64AggVec)
Int64AggVec.erase = new_instancemethod(_qdb.Int64AggVec_erase, None, Int64AggVec)
Int64AggVec.push_back = new_instancemethod(_qdb.Int64AggVec_push_back, None, Int64AggVec)
Int64AggVec.front = new_instancemethod(_qdb.Int64AggVec_front, None, Int64AggVec)
Int64AggVec.back = new_instancemethod(_qdb.Int64AggVec_back, None, Int64AggVec)
Int64AggVec.assign = new_instancemethod(_qdb.Int64AggVec_assign, None, Int64AggVec)
Int64AggVec.resize = new_instancemethod(_qdb.Int64AggVec_resize, None, Int64AggVec)
Int64AggVec.insert = new_instancemethod(_qdb.Int64AggVec_insert, None, Int64AggVec)
Int64AggVec.reserve = new_instancemethod(_qdb.Int64AggVec_reserve, None, Int64AggVec)
Int64AggVec.capacity = new_instancemethod(_qdb.Int64AggVec_capacity, None, Int64AggVec)
Int64AggVec_swigregister = _qdb.Int64AggVec_swigregister
Int64AggVec_swigregister(Int64AggVec)

class TimestampAggVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.TimestampAggVec_swiginit(self, _qdb.new_TimestampAggVec(*args))
    __swig_destroy__ = _qdb.delete_TimestampAggVec
TimestampAggVec.iterator = new_instancemethod(_qdb.TimestampAggVec_iterator, None, TimestampAggVec)
TimestampAggVec.__nonzero__ = new_instancemethod(_qdb.TimestampAggVec___nonzero__, None, TimestampAggVec)
TimestampAggVec.__bool__ = new_instancemethod(_qdb.TimestampAggVec___bool__, None, TimestampAggVec)
TimestampAggVec.__len__ = new_instancemethod(_qdb.TimestampAggVec___len__, None, TimestampAggVec)
TimestampAggVec.__getslice__ = new_instancemethod(_qdb.TimestampAggVec___getslice__, None, TimestampAggVec)
TimestampAggVec.__setslice__ = new_instancemethod(_qdb.TimestampAggVec___setslice__, None, TimestampAggVec)
TimestampAggVec.__delslice__ = new_instancemethod(_qdb.TimestampAggVec___delslice__, None, TimestampAggVec)
TimestampAggVec.__delitem__ = new_instancemethod(_qdb.TimestampAggVec___delitem__, None, TimestampAggVec)
TimestampAggVec.__getitem__ = new_instancemethod(_qdb.TimestampAggVec___getitem__, None, TimestampAggVec)
TimestampAggVec.__setitem__ = new_instancemethod(_qdb.TimestampAggVec___setitem__, None, TimestampAggVec)
TimestampAggVec.pop = new_instancemethod(_qdb.TimestampAggVec_pop, None, TimestampAggVec)
TimestampAggVec.append = new_instancemethod(_qdb.TimestampAggVec_append, None, TimestampAggVec)
TimestampAggVec.empty = new_instancemethod(_qdb.TimestampAggVec_empty, None, TimestampAggVec)
TimestampAggVec.size = new_instancemethod(_qdb.TimestampAggVec_size, None, TimestampAggVec)
TimestampAggVec.swap = new_instancemethod(_qdb.TimestampAggVec_swap, None, TimestampAggVec)
TimestampAggVec.begin = new_instancemethod(_qdb.TimestampAggVec_begin, None, TimestampAggVec)
TimestampAggVec.end = new_instancemethod(_qdb.TimestampAggVec_end, None, TimestampAggVec)
TimestampAggVec.rbegin = new_instancemethod(_qdb.TimestampAggVec_rbegin, None, TimestampAggVec)
TimestampAggVec.rend = new_instancemethod(_qdb.TimestampAggVec_rend, None, TimestampAggVec)
TimestampAggVec.clear = new_instancemethod(_qdb.TimestampAggVec_clear, None, TimestampAggVec)
TimestampAggVec.get_allocator = new_instancemethod(_qdb.TimestampAggVec_get_allocator, None, TimestampAggVec)
TimestampAggVec.pop_back = new_instancemethod(_qdb.TimestampAggVec_pop_back, None, TimestampAggVec)
TimestampAggVec.erase = new_instancemethod(_qdb.TimestampAggVec_erase, None, TimestampAggVec)
TimestampAggVec.push_back = new_instancemethod(_qdb.TimestampAggVec_push_back, None, TimestampAggVec)
TimestampAggVec.front = new_instancemethod(_qdb.TimestampAggVec_front, None, TimestampAggVec)
TimestampAggVec.back = new_instancemethod(_qdb.TimestampAggVec_back, None, TimestampAggVec)
TimestampAggVec.assign = new_instancemethod(_qdb.TimestampAggVec_assign, None, TimestampAggVec)
TimestampAggVec.resize = new_instancemethod(_qdb.TimestampAggVec_resize, None, TimestampAggVec)
TimestampAggVec.insert = new_instancemethod(_qdb.TimestampAggVec_insert, None, TimestampAggVec)
TimestampAggVec.reserve = new_instancemethod(_qdb.TimestampAggVec_reserve, None, TimestampAggVec)
TimestampAggVec.capacity = new_instancemethod(_qdb.TimestampAggVec_capacity, None, TimestampAggVec)
TimestampAggVec_swigregister = _qdb.TimestampAggVec_swigregister
TimestampAggVec_swigregister(TimestampAggVec)

class BlobAggVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.BlobAggVec_swiginit(self, _qdb.new_BlobAggVec(*args))
    __swig_destroy__ = _qdb.delete_BlobAggVec
BlobAggVec.iterator = new_instancemethod(_qdb.BlobAggVec_iterator, None, BlobAggVec)
BlobAggVec.__nonzero__ = new_instancemethod(_qdb.BlobAggVec___nonzero__, None, BlobAggVec)
BlobAggVec.__bool__ = new_instancemethod(_qdb.BlobAggVec___bool__, None, BlobAggVec)
BlobAggVec.__len__ = new_instancemethod(_qdb.BlobAggVec___len__, None, BlobAggVec)
BlobAggVec.__getslice__ = new_instancemethod(_qdb.BlobAggVec___getslice__, None, BlobAggVec)
BlobAggVec.__setslice__ = new_instancemethod(_qdb.BlobAggVec___setslice__, None, BlobAggVec)
BlobAggVec.__delslice__ = new_instancemethod(_qdb.BlobAggVec___delslice__, None, BlobAggVec)
BlobAggVec.__delitem__ = new_instancemethod(_qdb.BlobAggVec___delitem__, None, BlobAggVec)
BlobAggVec.__getitem__ = new_instancemethod(_qdb.BlobAggVec___getitem__, None, BlobAggVec)
BlobAggVec.__setitem__ = new_instancemethod(_qdb.BlobAggVec___setitem__, None, BlobAggVec)
BlobAggVec.pop = new_instancemethod(_qdb.BlobAggVec_pop, None, BlobAggVec)
BlobAggVec.append = new_instancemethod(_qdb.BlobAggVec_append, None, BlobAggVec)
BlobAggVec.empty = new_instancemethod(_qdb.BlobAggVec_empty, None, BlobAggVec)
BlobAggVec.size = new_instancemethod(_qdb.BlobAggVec_size, None, BlobAggVec)
BlobAggVec.swap = new_instancemethod(_qdb.BlobAggVec_swap, None, BlobAggVec)
BlobAggVec.begin = new_instancemethod(_qdb.BlobAggVec_begin, None, BlobAggVec)
BlobAggVec.end = new_instancemethod(_qdb.BlobAggVec_end, None, BlobAggVec)
BlobAggVec.rbegin = new_instancemethod(_qdb.BlobAggVec_rbegin, None, BlobAggVec)
BlobAggVec.rend = new_instancemethod(_qdb.BlobAggVec_rend, None, BlobAggVec)
BlobAggVec.clear = new_instancemethod(_qdb.BlobAggVec_clear, None, BlobAggVec)
BlobAggVec.get_allocator = new_instancemethod(_qdb.BlobAggVec_get_allocator, None, BlobAggVec)
BlobAggVec.pop_back = new_instancemethod(_qdb.BlobAggVec_pop_back, None, BlobAggVec)
BlobAggVec.erase = new_instancemethod(_qdb.BlobAggVec_erase, None, BlobAggVec)
BlobAggVec.push_back = new_instancemethod(_qdb.BlobAggVec_push_back, None, BlobAggVec)
BlobAggVec.front = new_instancemethod(_qdb.BlobAggVec_front, None, BlobAggVec)
BlobAggVec.back = new_instancemethod(_qdb.BlobAggVec_back, None, BlobAggVec)
BlobAggVec.assign = new_instancemethod(_qdb.BlobAggVec_assign, None, BlobAggVec)
BlobAggVec.resize = new_instancemethod(_qdb.BlobAggVec_resize, None, BlobAggVec)
BlobAggVec.insert = new_instancemethod(_qdb.BlobAggVec_insert, None, BlobAggVec)
BlobAggVec.reserve = new_instancemethod(_qdb.BlobAggVec_reserve, None, BlobAggVec)
BlobAggVec.capacity = new_instancemethod(_qdb.BlobAggVec_capacity, None, BlobAggVec)
BlobAggVec_swigregister = _qdb.BlobAggVec_swigregister
BlobAggVec_swigregister(BlobAggVec)

class DoubleAggVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.DoubleAggVec_swiginit(self, _qdb.new_DoubleAggVec(*args))
    __swig_destroy__ = _qdb.delete_DoubleAggVec
DoubleAggVec.iterator = new_instancemethod(_qdb.DoubleAggVec_iterator, None, DoubleAggVec)
DoubleAggVec.__nonzero__ = new_instancemethod(_qdb.DoubleAggVec___nonzero__, None, DoubleAggVec)
DoubleAggVec.__bool__ = new_instancemethod(_qdb.DoubleAggVec___bool__, None, DoubleAggVec)
DoubleAggVec.__len__ = new_instancemethod(_qdb.DoubleAggVec___len__, None, DoubleAggVec)
DoubleAggVec.__getslice__ = new_instancemethod(_qdb.DoubleAggVec___getslice__, None, DoubleAggVec)
DoubleAggVec.__setslice__ = new_instancemethod(_qdb.DoubleAggVec___setslice__, None, DoubleAggVec)
DoubleAggVec.__delslice__ = new_instancemethod(_qdb.DoubleAggVec___delslice__, None, DoubleAggVec)
DoubleAggVec.__delitem__ = new_instancemethod(_qdb.DoubleAggVec___delitem__, None, DoubleAggVec)
DoubleAggVec.__getitem__ = new_instancemethod(_qdb.DoubleAggVec___getitem__, None, DoubleAggVec)
DoubleAggVec.__setitem__ = new_instancemethod(_qdb.DoubleAggVec___setitem__, None, DoubleAggVec)
DoubleAggVec.pop = new_instancemethod(_qdb.DoubleAggVec_pop, None, DoubleAggVec)
DoubleAggVec.append = new_instancemethod(_qdb.DoubleAggVec_append, None, DoubleAggVec)
DoubleAggVec.empty = new_instancemethod(_qdb.DoubleAggVec_empty, None, DoubleAggVec)
DoubleAggVec.size = new_instancemethod(_qdb.DoubleAggVec_size, None, DoubleAggVec)
DoubleAggVec.swap = new_instancemethod(_qdb.DoubleAggVec_swap, None, DoubleAggVec)
DoubleAggVec.begin = new_instancemethod(_qdb.DoubleAggVec_begin, None, DoubleAggVec)
DoubleAggVec.end = new_instancemethod(_qdb.DoubleAggVec_end, None, DoubleAggVec)
DoubleAggVec.rbegin = new_instancemethod(_qdb.DoubleAggVec_rbegin, None, DoubleAggVec)
DoubleAggVec.rend = new_instancemethod(_qdb.DoubleAggVec_rend, None, DoubleAggVec)
DoubleAggVec.clear = new_instancemethod(_qdb.DoubleAggVec_clear, None, DoubleAggVec)
DoubleAggVec.get_allocator = new_instancemethod(_qdb.DoubleAggVec_get_allocator, None, DoubleAggVec)
DoubleAggVec.pop_back = new_instancemethod(_qdb.DoubleAggVec_pop_back, None, DoubleAggVec)
DoubleAggVec.erase = new_instancemethod(_qdb.DoubleAggVec_erase, None, DoubleAggVec)
DoubleAggVec.push_back = new_instancemethod(_qdb.DoubleAggVec_push_back, None, DoubleAggVec)
DoubleAggVec.front = new_instancemethod(_qdb.DoubleAggVec_front, None, DoubleAggVec)
DoubleAggVec.back = new_instancemethod(_qdb.DoubleAggVec_back, None, DoubleAggVec)
DoubleAggVec.assign = new_instancemethod(_qdb.DoubleAggVec_assign, None, DoubleAggVec)
DoubleAggVec.resize = new_instancemethod(_qdb.DoubleAggVec_resize, None, DoubleAggVec)
DoubleAggVec.insert = new_instancemethod(_qdb.DoubleAggVec_insert, None, DoubleAggVec)
DoubleAggVec.reserve = new_instancemethod(_qdb.DoubleAggVec_reserve, None, DoubleAggVec)
DoubleAggVec.capacity = new_instancemethod(_qdb.DoubleAggVec_capacity, None, DoubleAggVec)
DoubleAggVec_swigregister = _qdb.DoubleAggVec_swigregister
DoubleAggVec_swigregister(DoubleAggVec)

class TSColsVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.TSColsVec_swiginit(self, _qdb.new_TSColsVec(*args))
    __swig_destroy__ = _qdb.delete_TSColsVec
TSColsVec.iterator = new_instancemethod(_qdb.TSColsVec_iterator, None, TSColsVec)
TSColsVec.__nonzero__ = new_instancemethod(_qdb.TSColsVec___nonzero__, None, TSColsVec)
TSColsVec.__bool__ = new_instancemethod(_qdb.TSColsVec___bool__, None, TSColsVec)
TSColsVec.__len__ = new_instancemethod(_qdb.TSColsVec___len__, None, TSColsVec)
TSColsVec.__getslice__ = new_instancemethod(_qdb.TSColsVec___getslice__, None, TSColsVec)
TSColsVec.__setslice__ = new_instancemethod(_qdb.TSColsVec___setslice__, None, TSColsVec)
TSColsVec.__delslice__ = new_instancemethod(_qdb.TSColsVec___delslice__, None, TSColsVec)
TSColsVec.__delitem__ = new_instancemethod(_qdb.TSColsVec___delitem__, None, TSColsVec)
TSColsVec.__getitem__ = new_instancemethod(_qdb.TSColsVec___getitem__, None, TSColsVec)
TSColsVec.__setitem__ = new_instancemethod(_qdb.TSColsVec___setitem__, None, TSColsVec)
TSColsVec.pop = new_instancemethod(_qdb.TSColsVec_pop, None, TSColsVec)
TSColsVec.append = new_instancemethod(_qdb.TSColsVec_append, None, TSColsVec)
TSColsVec.empty = new_instancemethod(_qdb.TSColsVec_empty, None, TSColsVec)
TSColsVec.size = new_instancemethod(_qdb.TSColsVec_size, None, TSColsVec)
TSColsVec.swap = new_instancemethod(_qdb.TSColsVec_swap, None, TSColsVec)
TSColsVec.begin = new_instancemethod(_qdb.TSColsVec_begin, None, TSColsVec)
TSColsVec.end = new_instancemethod(_qdb.TSColsVec_end, None, TSColsVec)
TSColsVec.rbegin = new_instancemethod(_qdb.TSColsVec_rbegin, None, TSColsVec)
TSColsVec.rend = new_instancemethod(_qdb.TSColsVec_rend, None, TSColsVec)
TSColsVec.clear = new_instancemethod(_qdb.TSColsVec_clear, None, TSColsVec)
TSColsVec.get_allocator = new_instancemethod(_qdb.TSColsVec_get_allocator, None, TSColsVec)
TSColsVec.pop_back = new_instancemethod(_qdb.TSColsVec_pop_back, None, TSColsVec)
TSColsVec.erase = new_instancemethod(_qdb.TSColsVec_erase, None, TSColsVec)
TSColsVec.push_back = new_instancemethod(_qdb.TSColsVec_push_back, None, TSColsVec)
TSColsVec.front = new_instancemethod(_qdb.TSColsVec_front, None, TSColsVec)
TSColsVec.back = new_instancemethod(_qdb.TSColsVec_back, None, TSColsVec)
TSColsVec.assign = new_instancemethod(_qdb.TSColsVec_assign, None, TSColsVec)
TSColsVec.resize = new_instancemethod(_qdb.TSColsVec_resize, None, TSColsVec)
TSColsVec.insert = new_instancemethod(_qdb.TSColsVec_insert, None, TSColsVec)
TSColsVec.reserve = new_instancemethod(_qdb.TSColsVec_reserve, None, TSColsVec)
TSColsVec.capacity = new_instancemethod(_qdb.TSColsVec_capacity, None, TSColsVec)
TSColsVec_swigregister = _qdb.TSColsVec_swigregister
TSColsVec_swigregister(TSColsVec)

class TableResultVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.TableResultVec_swiginit(self, _qdb.new_TableResultVec(*args))
    __swig_destroy__ = _qdb.delete_TableResultVec
TableResultVec.iterator = new_instancemethod(_qdb.TableResultVec_iterator, None, TableResultVec)
TableResultVec.__nonzero__ = new_instancemethod(_qdb.TableResultVec___nonzero__, None, TableResultVec)
TableResultVec.__bool__ = new_instancemethod(_qdb.TableResultVec___bool__, None, TableResultVec)
TableResultVec.__len__ = new_instancemethod(_qdb.TableResultVec___len__, None, TableResultVec)
TableResultVec.__getslice__ = new_instancemethod(_qdb.TableResultVec___getslice__, None, TableResultVec)
TableResultVec.__setslice__ = new_instancemethod(_qdb.TableResultVec___setslice__, None, TableResultVec)
TableResultVec.__delslice__ = new_instancemethod(_qdb.TableResultVec___delslice__, None, TableResultVec)
TableResultVec.__delitem__ = new_instancemethod(_qdb.TableResultVec___delitem__, None, TableResultVec)
TableResultVec.__getitem__ = new_instancemethod(_qdb.TableResultVec___getitem__, None, TableResultVec)
TableResultVec.__setitem__ = new_instancemethod(_qdb.TableResultVec___setitem__, None, TableResultVec)
TableResultVec.pop = new_instancemethod(_qdb.TableResultVec_pop, None, TableResultVec)
TableResultVec.append = new_instancemethod(_qdb.TableResultVec_append, None, TableResultVec)
TableResultVec.empty = new_instancemethod(_qdb.TableResultVec_empty, None, TableResultVec)
TableResultVec.size = new_instancemethod(_qdb.TableResultVec_size, None, TableResultVec)
TableResultVec.swap = new_instancemethod(_qdb.TableResultVec_swap, None, TableResultVec)
TableResultVec.begin = new_instancemethod(_qdb.TableResultVec_begin, None, TableResultVec)
TableResultVec.end = new_instancemethod(_qdb.TableResultVec_end, None, TableResultVec)
TableResultVec.rbegin = new_instancemethod(_qdb.TableResultVec_rbegin, None, TableResultVec)
TableResultVec.rend = new_instancemethod(_qdb.TableResultVec_rend, None, TableResultVec)
TableResultVec.clear = new_instancemethod(_qdb.TableResultVec_clear, None, TableResultVec)
TableResultVec.get_allocator = new_instancemethod(_qdb.TableResultVec_get_allocator, None, TableResultVec)
TableResultVec.pop_back = new_instancemethod(_qdb.TableResultVec_pop_back, None, TableResultVec)
TableResultVec.erase = new_instancemethod(_qdb.TableResultVec_erase, None, TableResultVec)
TableResultVec.push_back = new_instancemethod(_qdb.TableResultVec_push_back, None, TableResultVec)
TableResultVec.front = new_instancemethod(_qdb.TableResultVec_front, None, TableResultVec)
TableResultVec.back = new_instancemethod(_qdb.TableResultVec_back, None, TableResultVec)
TableResultVec.assign = new_instancemethod(_qdb.TableResultVec_assign, None, TableResultVec)
TableResultVec.resize = new_instancemethod(_qdb.TableResultVec_resize, None, TableResultVec)
TableResultVec.insert = new_instancemethod(_qdb.TableResultVec_insert, None, TableResultVec)
TableResultVec.reserve = new_instancemethod(_qdb.TableResultVec_reserve, None, TableResultVec)
TableResultVec.capacity = new_instancemethod(_qdb.TableResultVec_capacity, None, TableResultVec)
TableResultVec_swigregister = _qdb.TableResultVec_swigregister
TableResultVec_swigregister(TableResultVec)

class QueryPointResultVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.QueryPointResultVec_swiginit(self, _qdb.new_QueryPointResultVec(*args))
    __swig_destroy__ = _qdb.delete_QueryPointResultVec
QueryPointResultVec.iterator = new_instancemethod(_qdb.QueryPointResultVec_iterator, None, QueryPointResultVec)
QueryPointResultVec.__nonzero__ = new_instancemethod(_qdb.QueryPointResultVec___nonzero__, None, QueryPointResultVec)
QueryPointResultVec.__bool__ = new_instancemethod(_qdb.QueryPointResultVec___bool__, None, QueryPointResultVec)
QueryPointResultVec.__len__ = new_instancemethod(_qdb.QueryPointResultVec___len__, None, QueryPointResultVec)
QueryPointResultVec.__getslice__ = new_instancemethod(_qdb.QueryPointResultVec___getslice__, None, QueryPointResultVec)
QueryPointResultVec.__setslice__ = new_instancemethod(_qdb.QueryPointResultVec___setslice__, None, QueryPointResultVec)
QueryPointResultVec.__delslice__ = new_instancemethod(_qdb.QueryPointResultVec___delslice__, None, QueryPointResultVec)
QueryPointResultVec.__delitem__ = new_instancemethod(_qdb.QueryPointResultVec___delitem__, None, QueryPointResultVec)
QueryPointResultVec.__getitem__ = new_instancemethod(_qdb.QueryPointResultVec___getitem__, None, QueryPointResultVec)
QueryPointResultVec.__setitem__ = new_instancemethod(_qdb.QueryPointResultVec___setitem__, None, QueryPointResultVec)
QueryPointResultVec.pop = new_instancemethod(_qdb.QueryPointResultVec_pop, None, QueryPointResultVec)
QueryPointResultVec.append = new_instancemethod(_qdb.QueryPointResultVec_append, None, QueryPointResultVec)
QueryPointResultVec.empty = new_instancemethod(_qdb.QueryPointResultVec_empty, None, QueryPointResultVec)
QueryPointResultVec.size = new_instancemethod(_qdb.QueryPointResultVec_size, None, QueryPointResultVec)
QueryPointResultVec.swap = new_instancemethod(_qdb.QueryPointResultVec_swap, None, QueryPointResultVec)
QueryPointResultVec.begin = new_instancemethod(_qdb.QueryPointResultVec_begin, None, QueryPointResultVec)
QueryPointResultVec.end = new_instancemethod(_qdb.QueryPointResultVec_end, None, QueryPointResultVec)
QueryPointResultVec.rbegin = new_instancemethod(_qdb.QueryPointResultVec_rbegin, None, QueryPointResultVec)
QueryPointResultVec.rend = new_instancemethod(_qdb.QueryPointResultVec_rend, None, QueryPointResultVec)
QueryPointResultVec.clear = new_instancemethod(_qdb.QueryPointResultVec_clear, None, QueryPointResultVec)
QueryPointResultVec.get_allocator = new_instancemethod(_qdb.QueryPointResultVec_get_allocator, None, QueryPointResultVec)
QueryPointResultVec.pop_back = new_instancemethod(_qdb.QueryPointResultVec_pop_back, None, QueryPointResultVec)
QueryPointResultVec.erase = new_instancemethod(_qdb.QueryPointResultVec_erase, None, QueryPointResultVec)
QueryPointResultVec.push_back = new_instancemethod(_qdb.QueryPointResultVec_push_back, None, QueryPointResultVec)
QueryPointResultVec.front = new_instancemethod(_qdb.QueryPointResultVec_front, None, QueryPointResultVec)
QueryPointResultVec.back = new_instancemethod(_qdb.QueryPointResultVec_back, None, QueryPointResultVec)
QueryPointResultVec.assign = new_instancemethod(_qdb.QueryPointResultVec_assign, None, QueryPointResultVec)
QueryPointResultVec.resize = new_instancemethod(_qdb.QueryPointResultVec_resize, None, QueryPointResultVec)
QueryPointResultVec.insert = new_instancemethod(_qdb.QueryPointResultVec_insert, None, QueryPointResultVec)
QueryPointResultVec.reserve = new_instancemethod(_qdb.QueryPointResultVec_reserve, None, QueryPointResultVec)
QueryPointResultVec.capacity = new_instancemethod(_qdb.QueryPointResultVec_capacity, None, QueryPointResultVec)
QueryPointResultVec_swigregister = _qdb.QueryPointResultVec_swigregister
QueryPointResultVec_swigregister(QueryPointResultVec)

class QueryPointResultVecofVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _qdb.QueryPointResultVecofVec_swiginit(self, _qdb.new_QueryPointResultVecofVec(*args))
    __swig_destroy__ = _qdb.delete_QueryPointResultVecofVec
QueryPointResultVecofVec.iterator = new_instancemethod(_qdb.QueryPointResultVecofVec_iterator, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__nonzero__ = new_instancemethod(_qdb.QueryPointResultVecofVec___nonzero__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__bool__ = new_instancemethod(_qdb.QueryPointResultVecofVec___bool__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__len__ = new_instancemethod(_qdb.QueryPointResultVecofVec___len__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__getslice__ = new_instancemethod(_qdb.QueryPointResultVecofVec___getslice__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__setslice__ = new_instancemethod(_qdb.QueryPointResultVecofVec___setslice__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__delslice__ = new_instancemethod(_qdb.QueryPointResultVecofVec___delslice__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__delitem__ = new_instancemethod(_qdb.QueryPointResultVecofVec___delitem__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__getitem__ = new_instancemethod(_qdb.QueryPointResultVecofVec___getitem__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.__setitem__ = new_instancemethod(_qdb.QueryPointResultVecofVec___setitem__, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.pop = new_instancemethod(_qdb.QueryPointResultVecofVec_pop, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.append = new_instancemethod(_qdb.QueryPointResultVecofVec_append, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.empty = new_instancemethod(_qdb.QueryPointResultVecofVec_empty, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.size = new_instancemethod(_qdb.QueryPointResultVecofVec_size, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.swap = new_instancemethod(_qdb.QueryPointResultVecofVec_swap, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.begin = new_instancemethod(_qdb.QueryPointResultVecofVec_begin, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.end = new_instancemethod(_qdb.QueryPointResultVecofVec_end, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.rbegin = new_instancemethod(_qdb.QueryPointResultVecofVec_rbegin, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.rend = new_instancemethod(_qdb.QueryPointResultVecofVec_rend, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.clear = new_instancemethod(_qdb.QueryPointResultVecofVec_clear, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.get_allocator = new_instancemethod(_qdb.QueryPointResultVecofVec_get_allocator, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.pop_back = new_instancemethod(_qdb.QueryPointResultVecofVec_pop_back, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.erase = new_instancemethod(_qdb.QueryPointResultVecofVec_erase, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.push_back = new_instancemethod(_qdb.QueryPointResultVecofVec_push_back, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.front = new_instancemethod(_qdb.QueryPointResultVecofVec_front, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.back = new_instancemethod(_qdb.QueryPointResultVecofVec_back, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.assign = new_instancemethod(_qdb.QueryPointResultVecofVec_assign, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.resize = new_instancemethod(_qdb.QueryPointResultVecofVec_resize, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.insert = new_instancemethod(_qdb.QueryPointResultVecofVec_insert, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.reserve = new_instancemethod(_qdb.QueryPointResultVecofVec_reserve, None, QueryPointResultVecofVec)
QueryPointResultVecofVec.capacity = new_instancemethod(_qdb.QueryPointResultVecofVec_capacity, None, QueryPointResultVecofVec)
QueryPointResultVecofVec_swigregister = _qdb.QueryPointResultVecofVec_swigregister
QueryPointResultVecofVec_swigregister(QueryPointResultVecofVec)

class PairErrorResultType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.PairErrorResultType_swiginit(self, _qdb.new_PairErrorResultType(*args))
    first = _swig_property(_qdb.PairErrorResultType_first_get, _qdb.PairErrorResultType_first_set)
    second = _swig_property(_qdb.PairErrorResultType_second_get, _qdb.PairErrorResultType_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _qdb.delete_PairErrorResultType
PairErrorResultType_swigregister = _qdb.PairErrorResultType_swigregister
PairErrorResultType_swigregister(PairErrorResultType)

class PairErrorString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.PairErrorString_swiginit(self, _qdb.new_PairErrorString(*args))
    first = _swig_property(_qdb.PairErrorString_first_get, _qdb.PairErrorString_first_set)
    second = _swig_property(_qdb.PairErrorString_second_get, _qdb.PairErrorString_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _qdb.delete_PairErrorString
PairErrorString_swigregister = _qdb.PairErrorString_swigregister
PairErrorString_swigregister(PairErrorString)

class PairErrorInt64(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.PairErrorInt64_swiginit(self, _qdb.new_PairErrorInt64(*args))
    first = _swig_property(_qdb.PairErrorInt64_first_get, _qdb.PairErrorInt64_first_set)
    second = _swig_property(_qdb.PairErrorInt64_second_get, _qdb.PairErrorInt64_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _qdb.delete_PairErrorInt64
PairErrorInt64_swigregister = _qdb.PairErrorInt64_swigregister
PairErrorInt64_swigregister(PairErrorInt64)

class PairErrorDouble(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.PairErrorDouble_swiginit(self, _qdb.new_PairErrorDouble(*args))
    first = _swig_property(_qdb.PairErrorDouble_first_get, _qdb.PairErrorDouble_first_set)
    second = _swig_property(_qdb.PairErrorDouble_second_get, _qdb.PairErrorDouble_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _qdb.delete_PairErrorDouble
PairErrorDouble_swigregister = _qdb.PairErrorDouble_swigregister
PairErrorDouble_swigregister(PairErrorDouble)

class PairErrorTimespec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _qdb.PairErrorTimespec_swiginit(self, _qdb.new_PairErrorTimespec(*args))
    first = _swig_property(_qdb.PairErrorTimespec_first_get, _qdb.PairErrorTimespec_first_set)
    second = _swig_property(_qdb.PairErrorTimespec_second_get, _qdb.PairErrorTimespec_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _qdb.delete_PairErrorTimespec
PairErrorTimespec_swigregister = _qdb.PairErrorTimespec_swigregister
PairErrorTimespec_swigregister(PairErrorTimespec)


def version():
    return _qdb.version()
version = _qdb.version

def build():
    return _qdb.build()
build = _qdb.build

def ts_row_set_double(table, col_index, value):
    return _qdb.ts_row_set_double(table, col_index, value)
ts_row_set_double = _qdb.ts_row_set_double

def ts_row_set_blob(table, col_index, content):
    return _qdb.ts_row_set_blob(table, col_index, content)
ts_row_set_blob = _qdb.ts_row_set_blob

def ts_row_set_int64(table, col_index, value):
    return _qdb.ts_row_set_int64(table, col_index, value)
ts_row_set_int64 = _qdb.ts_row_set_int64

def ts_row_set_timestamp(table, col_index, value):
    return _qdb.ts_row_set_timestamp(table, col_index, value)
ts_row_set_timestamp = _qdb.ts_row_set_timestamp

def ts_push(table):
    return _qdb.ts_push(table)
ts_push = _qdb.ts_push

def make_error_string(error):
    return _qdb.make_error_string(error)
make_error_string = _qdb.make_error_string
class api_buffer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, h, data, length):
        _qdb.api_buffer_swiginit(self, _qdb.new_api_buffer(h, data, length))
    __swig_destroy__ = _qdb.delete_api_buffer
api_buffer.__eq__ = new_instancemethod(_qdb.api_buffer___eq__, None, api_buffer)
api_buffer.__ne__ = new_instancemethod(_qdb.api_buffer___ne__, None, api_buffer)
api_buffer.data = new_instancemethod(_qdb.api_buffer_data, None, api_buffer)
api_buffer.size = new_instancemethod(_qdb.api_buffer_size, None, api_buffer)
api_buffer_swigregister = _qdb.api_buffer_swigregister
api_buffer_swigregister(api_buffer)

class handle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.handle_swiginit(self, _qdb.new_handle())
    __swig_destroy__ = _qdb.delete_handle
handle.close = new_instancemethod(_qdb.handle_close, None, handle)
handle.connected = new_instancemethod(_qdb.handle_connected, None, handle)
handle.connect = new_instancemethod(_qdb.handle_connect, None, handle)
handle.set_timeout = new_instancemethod(_qdb.handle_set_timeout, None, handle)
handle.set_compression = new_instancemethod(_qdb.handle_set_compression, None, handle)
handle.set_encryption = new_instancemethod(_qdb.handle_set_encryption, None, handle)
handle.set_max_cardinality = new_instancemethod(_qdb.handle_set_max_cardinality, None, handle)
handle.set_user_credentials = new_instancemethod(_qdb.handle_set_user_credentials, None, handle)
handle.set_cluster_public_key = new_instancemethod(_qdb.handle_set_cluster_public_key, None, handle)
handle.blob_put = new_instancemethod(_qdb.handle_blob_put, None, handle)
handle.blob_update = new_instancemethod(_qdb.handle_blob_update, None, handle)
handle.blob_get = new_instancemethod(_qdb.handle_blob_get, None, handle)
handle.blob_get_and_remove = new_instancemethod(_qdb.handle_blob_get_and_remove, None, handle)
handle.blob_get_and_update = new_instancemethod(_qdb.handle_blob_get_and_update, None, handle)
handle.blob_compare_and_swap = new_instancemethod(_qdb.handle_blob_compare_and_swap, None, handle)
handle.node_status = new_instancemethod(_qdb.handle_node_status, None, handle)
handle.node_config = new_instancemethod(_qdb.handle_node_config, None, handle)
handle.node_topology = new_instancemethod(_qdb.handle_node_topology, None, handle)
handle.node_stop = new_instancemethod(_qdb.handle_node_stop, None, handle)
handle.remove = new_instancemethod(_qdb.handle_remove, None, handle)
handle.blob_remove_if = new_instancemethod(_qdb.handle_blob_remove_if, None, handle)
handle.purge_all = new_instancemethod(_qdb.handle_purge_all, None, handle)
handle.trim_all = new_instancemethod(_qdb.handle_trim_all, None, handle)
handle.expires_at = new_instancemethod(_qdb.handle_expires_at, None, handle)
handle.expires_from_now = new_instancemethod(_qdb.handle_expires_from_now, None, handle)
handle.get_expiry_time = new_instancemethod(_qdb.handle_get_expiry_time, None, handle)
handle.attach_tag = new_instancemethod(_qdb.handle_attach_tag, None, handle)
handle.has_tag = new_instancemethod(_qdb.handle_has_tag, None, handle)
handle.detach_tag = new_instancemethod(_qdb.handle_detach_tag, None, handle)
handle.get_tagged = new_instancemethod(_qdb.handle_get_tagged, None, handle)
handle.get_tags = new_instancemethod(_qdb.handle_get_tags, None, handle)
handle.get_tagged_count = new_instancemethod(_qdb.handle_get_tagged_count, None, handle)
handle.int_get = new_instancemethod(_qdb.handle_int_get, None, handle)
handle.int_put = new_instancemethod(_qdb.handle_int_put, None, handle)
handle.int_update = new_instancemethod(_qdb.handle_int_update, None, handle)
handle.int_add = new_instancemethod(_qdb.handle_int_add, None, handle)
handle.deque_push_front = new_instancemethod(_qdb.handle_deque_push_front, None, handle)
handle.deque_push_back = new_instancemethod(_qdb.handle_deque_push_back, None, handle)
handle.deque_pop_front = new_instancemethod(_qdb.handle_deque_pop_front, None, handle)
handle.deque_pop_back = new_instancemethod(_qdb.handle_deque_pop_back, None, handle)
handle.deque_front = new_instancemethod(_qdb.handle_deque_front, None, handle)
handle.deque_back = new_instancemethod(_qdb.handle_deque_back, None, handle)
handle.deque_size = new_instancemethod(_qdb.handle_deque_size, None, handle)
handle.blob_scan = new_instancemethod(_qdb.handle_blob_scan, None, handle)
handle.blob_scan_regex = new_instancemethod(_qdb.handle_blob_scan_regex, None, handle)
handle_swigregister = _qdb.handle_swigregister
handle_swigregister(handle)


def error_origin(err):
    return _qdb.error_origin(err)
error_origin = _qdb.error_origin

def error_severity(err):
    return _qdb.error_severity(err)
error_severity = _qdb.error_severity

def make_api_buffer_ptr_from_string(h, content):
    return _qdb.make_api_buffer_ptr_from_string(h, content)
make_api_buffer_ptr_from_string = _qdb.make_api_buffer_ptr_from_string

def api_content_as_string(*args):
    return _qdb.api_content_as_string(*args)
api_content_as_string = _qdb.api_content_as_string

def api_buffer_ptr_as_string(buf):
    return _qdb.api_buffer_ptr_as_string(buf)
api_buffer_ptr_as_string = _qdb.api_buffer_ptr_as_string

def blob_get(h, alias, error):
    return _qdb.blob_get(h, alias, error)
blob_get = _qdb.blob_get

def blob_get_and_remove(h, alias, error):
    return _qdb.blob_get_and_remove(h, alias, error)
blob_get_and_remove = _qdb.blob_get_and_remove

def blob_get_and_update(h, alias, update_content, expiry_time, error):
    return _qdb.blob_get_and_update(h, alias, update_content, expiry_time, error)
blob_get_and_update = _qdb.blob_get_and_update

def blob_compare_and_swap(h, alias, new_value, comparand, expiry_time, error):
    return _qdb.blob_compare_and_swap(h, alias, new_value, comparand, expiry_time, error)
blob_compare_and_swap = _qdb.blob_compare_and_swap

def node_status(h, uri, error):
    return _qdb.node_status(h, uri, error)
node_status = _qdb.node_status

def node_config(h, uri, error):
    return _qdb.node_config(h, uri, error)
node_config = _qdb.node_config

def node_topology(h, uri, error):
    return _qdb.node_topology(h, uri, error)
node_topology = _qdb.node_topology

def create_handle():
    return _qdb.create_handle()
create_handle = _qdb.create_handle

def connect(h, uri, timeout_ms):
    return _qdb.connect(h, uri, timeout_ms)
connect = _qdb.connect

def get_expiry_time_wrapper(h, alias, error):
    return _qdb.get_expiry_time_wrapper(h, alias, error)
get_expiry_time_wrapper = _qdb.get_expiry_time_wrapper

def int_get(h, alias, error):
    return _qdb.int_get(h, alias, error)
int_get = _qdb.int_get

def int_add(h, alias, addend, error):
    return _qdb.int_add(h, alias, addend, error)
int_add = _qdb.int_add

def deque_size(h, alias, error):
    return _qdb.deque_size(h, alias, error)
deque_size = _qdb.deque_size

def deque_pop_front(h, alias, error):
    return _qdb.deque_pop_front(h, alias, error)
deque_pop_front = _qdb.deque_pop_front

def deque_pop_back(h, alias, error):
    return _qdb.deque_pop_back(h, alias, error)
deque_pop_back = _qdb.deque_pop_back

def deque_front(h, alias, error):
    return _qdb.deque_front(h, alias, error)
deque_front = _qdb.deque_front

def deque_back(h, alias, error):
    return _qdb.deque_back(h, alias, error)
deque_back = _qdb.deque_back

def get_tags(h, alias, error):
    return _qdb.get_tags(h, alias, error)
get_tags = _qdb.get_tags

def get_tagged(h, tag, error):
    return _qdb.get_tagged(h, tag, error)
get_tagged = _qdb.get_tagged

def get_tagged_count(h, tag, error):
    return _qdb.get_tagged_count(h, tag, error)
get_tagged_count = _qdb.get_tagged_count

def blob_scan(h, pattern, max_count, error):
    return _qdb.blob_scan(h, pattern, max_count, error)
blob_scan = _qdb.blob_scan

def blob_scan_regex(h, pattern, max_count, error):
    return _qdb.blob_scan_regex(h, pattern, max_count, error)
blob_scan_regex = _qdb.blob_scan_regex
class result_as_string(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.result_as_string_swiginit(self, _qdb.new_result_as_string())
    __swig_destroy__ = _qdb.delete_result_as_string
result_as_string.__call__ = new_instancemethod(_qdb.result_as_string___call__, None, result_as_string)
result_as_string_swigregister = _qdb.result_as_string_swigregister
result_as_string_swigregister(result_as_string)


def run_query_find(h, q, error):
    return _qdb.run_query_find(h, q, error)
run_query_find = _qdb.run_query_find

def run_query_exp(h, q, error):
    return _qdb.run_query_exp(h, q, error)
run_query_exp = _qdb.run_query_exp

def delete_wrap_qdb_query_result(p):
    return _qdb.delete_wrap_qdb_query_result(p)
delete_wrap_qdb_query_result = _qdb.delete_wrap_qdb_query_result

def prefix_get(h, prefix, max_count, error):
    return _qdb.prefix_get(h, prefix, max_count, error)
prefix_get = _qdb.prefix_get

def prefix_count(h, prefix, error):
    return _qdb.prefix_count(h, prefix, error)
prefix_count = _qdb.prefix_count

def suffix_get(h, suffix, max_count, error):
    return _qdb.suffix_get(h, suffix, max_count, error)
suffix_get = _qdb.suffix_get

def suffix_count(h, suffix, error):
    return _qdb.suffix_count(h, suffix, error)
suffix_count = _qdb.suffix_count
class transform_to_col_info(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.transform_to_col_info_swiginit(self, _qdb.new_transform_to_col_info())
    __swig_destroy__ = _qdb.delete_transform_to_col_info
transform_to_col_info.__call__ = new_instancemethod(_qdb.transform_to_col_info___call__, None, transform_to_col_info)
transform_to_col_info_swigregister = _qdb.transform_to_col_info_swigregister
transform_to_col_info_swigregister(transform_to_col_info)


def ts_create(h, alias, columns, shard_size):
    return _qdb.ts_create(h, alias, columns, shard_size)
ts_create = _qdb.ts_create
class column_creator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.column_creator_swiginit(self, _qdb.new_column_creator())
    __swig_destroy__ = _qdb.delete_column_creator
column_creator.__call__ = new_instancemethod(_qdb.column_creator___call__, None, column_creator)
column_creator_swigregister = _qdb.column_creator_swigregister
column_creator_swigregister(column_creator)


def ts_list_columns(h, alias, error):
    return _qdb.ts_list_columns(h, alias, error)
ts_list_columns = _qdb.ts_list_columns

def ts_double_insert(h, alias, column, values):
    return _qdb.ts_double_insert(h, alias, column, values)
ts_double_insert = _qdb.ts_double_insert

def ts_int64_insert(h, alias, column, values):
    return _qdb.ts_int64_insert(h, alias, column, values)
ts_int64_insert = _qdb.ts_int64_insert

def ts_timestamp_insert(h, alias, column, values):
    return _qdb.ts_timestamp_insert(h, alias, column, values)
ts_timestamp_insert = _qdb.ts_timestamp_insert
class to_qdb_ts_blob_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.to_qdb_ts_blob_point_swiginit(self, _qdb.new_to_qdb_ts_blob_point())
    __swig_destroy__ = _qdb.delete_to_qdb_ts_blob_point
to_qdb_ts_blob_point.__call__ = new_instancemethod(_qdb.to_qdb_ts_blob_point___call__, None, to_qdb_ts_blob_point)
to_qdb_ts_blob_point_swigregister = _qdb.to_qdb_ts_blob_point_swigregister
to_qdb_ts_blob_point_swigregister(to_qdb_ts_blob_point)


def ts_blob_insert(h, alias, column, values):
    return _qdb.ts_blob_insert(h, alias, column, values)
ts_blob_insert = _qdb.ts_blob_insert

def ts_double_get_ranges(h, alias, column, ranges, error):
    return _qdb.ts_double_get_ranges(h, alias, column, ranges, error)
ts_double_get_ranges = _qdb.ts_double_get_ranges

def ts_int64_get_ranges(h, alias, column, ranges, error):
    return _qdb.ts_int64_get_ranges(h, alias, column, ranges, error)
ts_int64_get_ranges = _qdb.ts_int64_get_ranges

def ts_timestamp_get_ranges(h, alias, column, ranges, error):
    return _qdb.ts_timestamp_get_ranges(h, alias, column, ranges, error)
ts_timestamp_get_ranges = _qdb.ts_timestamp_get_ranges
class to_ts_blob_point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.to_ts_blob_point_swiginit(self, _qdb.new_to_ts_blob_point())
    __swig_destroy__ = _qdb.delete_to_ts_blob_point
to_ts_blob_point.__call__ = new_instancemethod(_qdb.to_ts_blob_point___call__, None, to_ts_blob_point)
to_ts_blob_point_swigregister = _qdb.to_ts_blob_point_swigregister
to_ts_blob_point_swigregister(to_ts_blob_point)


def ts_blob_get_ranges(h, alias, column, ranges, error):
    return _qdb.ts_blob_get_ranges(h, alias, column, ranges, error)
ts_blob_get_ranges = _qdb.ts_blob_get_ranges
class range_to_blob_agg(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.range_to_blob_agg_swiginit(self, _qdb.new_range_to_blob_agg())
    __swig_destroy__ = _qdb.delete_range_to_blob_agg
range_to_blob_agg.__call__ = new_instancemethod(_qdb.range_to_blob_agg___call__, None, range_to_blob_agg)
range_to_blob_agg_swigregister = _qdb.range_to_blob_agg_swigregister
range_to_blob_agg_swigregister(range_to_blob_agg)

class range_to_double_agg(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _qdb.range_to_double_agg_swiginit(self, _qdb.new_range_to_double_agg())
    __swig_destroy__ = _qdb.delete_range_to_double_agg
range_to_double_agg.__call__ = new_instancemethod(_qdb.range_to_double_agg___call__, None, range_to_double_agg)
range_to_double_agg_swigregister = _qdb.range_to_double_agg_swigregister
range_to_double_agg_swigregister(range_to_double_agg)


def ts_blob_aggregation(h, alias, column, ranges, error):
    return _qdb.ts_blob_aggregation(h, alias, column, ranges, error)
ts_blob_aggregation = _qdb.ts_blob_aggregation

def ts_double_aggregation(h, alias, column, ranges, error):
    return _qdb.ts_double_aggregation(h, alias, column, ranges, error)
ts_double_aggregation = _qdb.ts_double_aggregation

def ts_erase_ranges(h, alias, column, ranges, error):
    return _qdb.ts_erase_ranges(h, alias, column, ranges, error)
ts_erase_ranges = _qdb.ts_erase_ranges

def ts_make_local_table(h, alias, error):
    return _qdb.ts_make_local_table(h, alias, error)
ts_make_local_table = _qdb.ts_make_local_table

def ts_make_local_table_with_columns(h, alias, columns, error):
    return _qdb.ts_make_local_table_with_columns(h, alias, columns, error)
ts_make_local_table_with_columns = _qdb.ts_make_local_table_with_columns

def ts_table_row_append(table, timestamp, error):
    return _qdb.ts_table_row_append(table, timestamp, error)
ts_table_row_append = _qdb.ts_table_row_append

def ts_release_local_table(h, table):
    return _qdb.ts_release_local_table(h, table)
ts_release_local_table = _qdb.ts_release_local_table

def get_timeout_wrapper(h, error):
    return _qdb.get_timeout_wrapper(h, error)
get_timeout_wrapper = _qdb.get_timeout_wrapper


