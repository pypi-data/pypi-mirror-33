# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-21 17:14
from __future__ import unicode_literals

import codenerix.fields
import codenerix.lib.helpers
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(blank=True, max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('type_value', models.CharField(choices=[(b'F', 'Sin validacion'), (b'B', 'Boolean'), (b'O', 'Lista de opciones')], default=b'F', max_length=2, verbose_name='Type value')),
                ('price', models.FloatField(default=0, verbose_name='Price')),
                ('type_price', models.CharField(choices=[(b'P', 'Porcentaje sobre el precio del producto'), (b'I', 'Incremento sobre el precio del producto'), (b'F', 'Precio final')], default=b'P', max_length=2, verbose_name='Type price')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='codenerix_products.Attribute', verbose_name='Attribute')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('attribute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.Attribute')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('attribute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.Attribute')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(blank=True, max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('outstanding', models.BooleanField(default=True, verbose_name='Outstanding')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Order')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Code')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('show_menu', models.BooleanField(default=True, verbose_name='Show menu')),
                ('show_only_product_stock', models.BooleanField(default=True, verbose_name='Show only products in stock')),
                ('image', codenerix.fields.ImageAngularField(blank=True, help_text='Se aconseja un tama\xf1o comprendido entre 1200px y 2000px', max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('icon', codenerix.fields.ImageAngularField(blank=True, help_text='Se aconseja que sea una imagen superior a 200px transparente y en formato png o svg', max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Icon')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('description', codenerix.fields.WysiwygAngularField(verbose_name='Description')),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('description', codenerix.fields.WysiwygAngularField(verbose_name='Description')),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(blank=True, max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('code', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Code')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('show_menu', models.BooleanField(default=True, verbose_name='Show menu')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('description', codenerix.fields.WysiwygAngularField(verbose_name='Description')),
                ('family', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.Family')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('description', codenerix.fields.WysiwygAngularField(verbose_name='Description')),
                ('family', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.Family')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(blank=True, max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('type_value', models.CharField(choices=[(b'F', 'Sin validacion'), (b'B', 'Boolean'), (b'O', 'Lista de opciones')], default=b'F', max_length=2, verbose_name='Type value')),
                ('price', models.FloatField(default=0, verbose_name='Price')),
                ('type_price', models.CharField(choices=[(b'P', 'Porcentaje sobre el precio del producto'), (b'I', 'Incremento sobre el precio del producto'), (b'F', 'Precio final')], default=b'P', max_length=2, verbose_name='Type price')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='codenerix_products.Category', verbose_name='Category')),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='codenerix_products.Family', verbose_name='Family')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSpecial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(blank=True, max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('type_value', models.CharField(choices=[(b'F', 'Sin validacion'), (b'B', 'Boolean'), (b'O', 'Lista de opciones')], default=b'F', max_length=2, verbose_name='Type value')),
                ('price', models.FloatField(default=0, verbose_name='Price')),
                ('type_price', models.CharField(choices=[(b'P', 'Porcentaje sobre el precio del producto'), (b'I', 'Incremento sobre el precio del producto'), (b'F', 'Precio final')], default=b'P', max_length=2, verbose_name='Type price')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('unique', models.BooleanField(default=True, verbose_name='The value must unique')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feature_specials', to='codenerix_products.Category', verbose_name='Category')),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feature_specials', to='codenerix_products.Family', verbose_name='Family')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSpecialTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('feature_special', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.FeatureSpecial')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureSpecialTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('feature_special', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.FeatureSpecial')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('feature', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('feature', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlagshipProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('view_video', models.BooleanField(default=False, verbose_name='View video')),
                ('orientazion', models.CharField(choices=[(b'R', 'Right'), (b'L', 'Left')], default=b'R', max_length=2, verbose_name='Orientazion')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlagshipProductTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('title', models.CharField(max_length=250, verbose_name='Text alternavive image')),
                ('description', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.FlagshipProduct')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlagshipProductTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('title', models.CharField(max_length=250, verbose_name='Text alternavive image')),
                ('description', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.FlagshipProduct')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Name')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OptionValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options_value', to='codenerix_products.GroupValue', verbose_name='Options value')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OptionValueTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('option_value', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.OptionValue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OptionValueTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('option_value', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.OptionValue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('model', models.CharField(blank=True, max_length=250, null=True, verbose_name='Model')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('code', models.CharField(max_length=250, unique=True, verbose_name='Code')),
                ('price_base', models.FloatField(default=0, verbose_name='Price base')),
                ('of_sales', models.BooleanField(default=True, verbose_name='Sales')),
                ('of_purchase', models.BooleanField(default=True, verbose_name='Purchase')),
                ('force_stock', models.BooleanField(default=True, verbose_name='Force stock')),
                ('url_video', models.CharField(blank=True, max_length=250, null=True, verbose_name='Url Video')),
                ('packing_cost', models.FloatField(default=0, verbose_name='Packing cost')),
                ('weight', models.FloatField(default=0, verbose_name='Weight')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.Brand', verbose_name='Brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.Category', verbose_name='Category')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.Family', verbose_name='Family')),
                ('feature_special', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.FeatureSpecial', verbose_name='Feature special')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('doc_path', codenerix.fields.FileAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Doc Path')),
                ('name_file', models.CharField(max_length=254, verbose_name='Name')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_document', to='codenerix_products.Product', verbose_name='Product')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDocumentTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('product_document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.ProductDocument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDocumentTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('product_document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.ProductDocument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('value', models.CharField(max_length=80, verbose_name='Value')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_features', to='codenerix_products.Feature', verbose_name='Feature')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_features', to='codenerix_products.Product', verbose_name='Product')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFinal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('offer', models.BooleanField(default=False, verbose_name='Offer')),
                ('outstanding', models.BooleanField(default=False, verbose_name='Outstanding')),
                ('most_sold', models.BooleanField(default=False, verbose_name='Most sold')),
                ('stock_real', models.FloatField(default=0, editable=False, verbose_name='Stock real')),
                ('stock_lock', models.FloatField(default=0, editable=False, verbose_name='Stock lock')),
                ('price', models.FloatField(default=0, editable=False, verbose_name='Price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_final', to='codenerix_products.Product', verbose_name='Product')),
                ('related', models.ManyToManyField(blank=True, related_name='productsrelated', to='codenerix_products.ProductFinal')),
                ('related_accesory', models.ManyToManyField(blank=True, related_name='productsrelatedaccesory', to='codenerix_products.ProductFinal')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFinalAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('value', models.CharField(max_length=80, verbose_name='Value')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products_final_attr', to='codenerix_products.Attribute', verbose_name='Attributes')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_final_attr', to='codenerix_products.ProductFinal', verbose_name='Product')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFinalTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('meta_title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Description')),
                ('description_short', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description short')),
                ('description_long', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description long')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.ProductFinal')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFinalTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('meta_title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Description')),
                ('description_short', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description short')),
                ('description_long', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description long')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.ProductFinal')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', codenerix.fields.ImageAngularField(max_length=200, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('principal', models.BooleanField(default=False, verbose_name='Principal')),
                ('flagship_product', models.BooleanField(default=False, verbose_name='Flagship product')),
                ('outstanding', models.BooleanField(default=False, verbose_name='Outstanding')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_image', to='codenerix_products.Product', verbose_name='Product')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImageTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('product_image', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.ProductImage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImageTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('product_image', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.ProductImage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductRelationSold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('hits', models.SmallIntegerField(blank=True, null=True, verbose_name='Hits')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_related', to='codenerix_products.Product', verbose_name='Product')),
                ('related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_related_sold', to='codenerix_products.Product', verbose_name='Products related')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTextTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('meta_title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Description')),
                ('description_short', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description short')),
                ('description_long', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description long')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTextTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('meta_title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Description')),
                ('description_short', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description short')),
                ('description_long', codenerix.fields.WysiwygAngularField(blank=True, null=True, verbose_name='Description long')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductUnique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('value', models.CharField(blank=True, max_length=80, null=True, verbose_name='Value')),
                ('stock_real', models.FloatField(default=0, verbose_name='Stock real')),
                ('product_final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_unique', to='codenerix_products.ProductFinal', verbose_name='Product final')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('code', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Code')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('show_menu', models.BooleanField(default=True, verbose_name='Show menu')),
                ('outstanding', models.BooleanField(default=False, verbose_name='Outstanding')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('image', codenerix.fields.ImageAngularField(blank=True, help_text='Se aconseja un tama\xf1o comprendido entre 1200px y 2000px', max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Image')),
                ('icon', codenerix.fields.ImageAngularField(blank=True, help_text='Se aconseja que sea una imagen superior a 200px transparente y en formato png o svg', max_length=200, null=True, upload_to=codenerix.lib.helpers.upload_path, verbose_name='Icon')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategory', to='codenerix_products.Category', verbose_name='Category')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubcategoryTextEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('description', codenerix.fields.WysiwygAngularField(verbose_name='Description')),
                ('subcategory', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='en', to='codenerix_products.Subcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubcategoryTextES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('description', codenerix.fields.WysiwygAngularField(verbose_name='Description')),
                ('subcategory', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='es', to='codenerix_products.Subcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeRecargoEquivalencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('recargo_equivalencia', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Recargo de equivalencia (%)')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('tax', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tax (%)')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='typerecargoequivalencia',
            name='type_tax',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_recargo_equivalencia', to='codenerix_products.TypeTax', verbose_name='Tax'),
        ),
        migrations.AddField(
            model_name='product',
            name='recargo_equivalencia',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.TypeRecargoEquivalencia', verbose_name='Recargo Equivalencia (%)'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.Subcategory', verbose_name='Subcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='codenerix_products.TypeTax', verbose_name='Tax (%)'),
        ),
        migrations.AddField(
            model_name='flagshipproduct',
            name='product_final',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flagship_products', to='codenerix_products.ProductFinal', verbose_name='Flagship product'),
        ),
        migrations.AddField(
            model_name='featurespecial',
            name='list_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feature_specials', to='codenerix_products.GroupValue', verbose_name='List value'),
        ),
        migrations.AddField(
            model_name='feature',
            name='list_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='codenerix_products.GroupValue', verbose_name='List value'),
        ),
        migrations.AddField(
            model_name='category',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='codenerix_products.Family', verbose_name='Family'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='codenerix_products.Category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='family',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='codenerix_products.Family', verbose_name='Family'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='list_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='codenerix_products.GroupValue', verbose_name='List value'),
        ),
        migrations.AlterUniqueTogether(
            name='productunique',
            unique_together=set([('product_final', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='productrelationsold',
            unique_together=set([('product', 'related')]),
        ),
    ]
