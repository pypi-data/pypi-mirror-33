Metadata-Version: 2.1
Name: decorate-all-methods
Version: 0.0.2
Summary: a class decorator that applies to all methods
Home-page: https://github.com/davegallant/decorate_all_methods
Author: Dave Gallant
Author-email: davegallant@gmail.com
License: Apache License, Version 2.0
Description: # decorate-all-methods
        
        Decorator that applies a decorator to all methods of a class.
        
        ## Installing
        
        ```bash
        pip install decorate-all-methods
        ```
        
        ## Example Usage
        
        ```python
        from decorate_all_methods import decorate_all_methods
        from tenacity import retry, stop_after_attempt, wait_fixed
        
        
        @decorate_all_methods(retry(stop=stop_after_attempt(3), wait=wait_fixed(1)), exclude=['__init__'])
        class MyClass(object):
        
            def __init__(self, object):
                """Will not be retried."""
                pass
        
            def force_error(self):
                """Will be retried 3 times."""
                assert False
        
            def force_another_error(self):
                """Will also be retried 3 times."""
                assert False
        ```
        
        _Note: It is not necessary to exclude any methods._
        
        ## Versioning
        
        We use [SemVer](http://semver.org/) for versioning.
        
        ## License
        
        This project is licensed under the Apache License, Version 2.0.
        
        ## Acknowledgments
        
        * https://stackoverflow.com/a/6307868/1191286
        
Keywords: methods,decorator
Platform: UNKNOWN
Description-Content-Type: text/markdown
