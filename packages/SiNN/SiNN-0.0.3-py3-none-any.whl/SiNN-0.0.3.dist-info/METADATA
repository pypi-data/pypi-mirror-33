Metadata-Version: 2.1
Name: SiNN
Version: 0.0.3
Summary: A simple way to make neural nets: Machine learning without linear algebra
Home-page: https://github.com/pithonmath/neuralnet
Author: SiCNN Author
Author-email: lincolnauster@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown

# Simple Neural Net Module

Install requirement:

<code>pip install numpy</code>

Install module:

<code>pip install SiNN</code> or download <code>module.py</code> from GitHub.

# Quick-Start Guide
Import SiNN: <code>import SiNN</code>

Initialize the neural net:
<code>neuralnet = SiNN.NeuralNetwork(3) # 3 is the number of inputs</code>

Create a variable with training set inputs:

<code>ins = array([[1a, 1b, 1c], [2a, 2b, 2c], [3a, 3b, 3c]])</code>

Set the expected outcomes (training set outs):

<code>outs = array([[1,1,0]]).T # don't worry about the .T</code>

Train with <code>neuralnet.train(ins, outs, iters)</code>, where iters is the amount of training cycles. A number around 1000 is normally good for simple uses.

Then, see if it works with <code>neuralnet.think([a,b,c])</code>.

Present it with a new situation with neuralnet.think(newsit)

Note: use python 3 with this.


