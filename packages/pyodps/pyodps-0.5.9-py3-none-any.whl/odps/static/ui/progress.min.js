Date.prototype.format=function(a){var b={"M+":this.getMonth()+1,"d+":this.getDate(),"h+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),"S":this.getMilliseconds()};if(/(y+)/.test(a))a=a.replace(RegExp.$1,(this.getFullYear()+"").substr(4-RegExp.$1.length));for(var c in b)if(new RegExp("("+c+")").test(a))a=a.replace(RegExp.$1,(RegExp.$1.length==1)?b[c]:(("00"+b[c]).substr((""+b[c]).length)));return a;};require(['pyodps'],function(a){a.define_widget('pyodps/progress',["jquery","widgets"],function(a,b){var c='<div class="modal fade" id="pyodps-progress-viewer" role="dialog">'+'  <div class="modal-dialog modal-sm">'+'    <div class="modal-content">'+'      <div class="modal-header">'+'        <button type="button" class="close pull-right" data-dismiss="modal">&times;</button>'+'        <span class="generated-time pull-right"></span>'+'        <h4 class="modal-title">Modal Header</h4>'+'      </div>'+'      <div class="modal-body">'+'        <div class="instances-holder"></div>'+'      </div>'+'      <div class="modal-footer">'+'        <span class="pull-left progress-legend-panel">'+'          <span class="progress progress-bar progress-legend" role="progressbar"></span><span>Finished</span>'+'          <span class="progress progress-bar progress-bar-success progress-bar-striped progress-legend" role="progressbar"></span><span>Submitted</span>'+'          <span class="progress progress-legend"></span><span>Waiting</span>'+'        </span>'+'        <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>'+'      </div>'+'    </div>'+'  </div>'+'</div>';var d='<div class="panel-group">'+'  <div class="panel panel-default">'+'    <div class="panel-heading">'+'      <h4 class="panel-title">'+'        <a class="instance_id" data-toggle="collapse" href="#inst_panel_{INSTANCE_ID}"></a> &nbsp; '+'      </h4>'+'    </div>'+'    <div id="inst_panel_{INSTANCE_ID}" class="panel-collapse in">'+'      <ul class="list-group tasks">'+'      </ul>'+'      <div class="panel-footer"><a class="logview" href="javascript: void(0)">Logview</a></div>'+'    </div>'+'  </div>'+'</div>';var e='<li class="list-group-item">'+'  <div class="task-name"></div>'+'  <div class="stages"></div>'+'</li>';var f='<div class="stage">'+'  <div class="stage-name"></div>'+'  <div class="stage-progress">'+'    <div class="progress">'+'      <div class="terminated progress-bar" role="progressbar"></div>'+'      <div class="running progress-bar progress-bar-success progress-bar-striped active" role="progressbar"></div>'+'    </div>'+'  </div>'+'</div>';var g;var h=b.DOMWidgetView.extend({initialize:function(b){var d=this;g=a('#pyodps-progress-viewer');if(g.length==0){g=a(c);a('body').append(g);}d.groupMsgs={};d.groupOrder=[];d.listenTo(d.model,'msg:custom',d._handle_route_msg,d);d.model.on('change:prefix',d._prefix_changed,d);d.model.on('change:suffix',d._suffix_changed,d);},render:function(){var b=this;b.prefixElement=a('<span style="padding-right: 5px"></span>');b.groupsElement=a('<span></span>');b.suffixElement=a('<span style="padding-left: 5px"></span>');var c=a('<div></div>').append(b.prefixElement).append(b.groupsElement).append(b.suffixElement);b.setElement(c);},update:function(a){var b=this;if(a===undefined||a.updated_view!=b){b.prefixElement.text(b.model.get('prefix'));b.suffixElement.text(b.model.get('suffix'));b._build_link();}return h.__super__.update.apply(b);},_prefix_changed:function(){var a=this;a.prefixElement.text(a.model.get('prefix'));},_suffix_changed:function(){var a=this;a.suffixElement.text(a.model.get('suffix'));},_build_link:function(){var b=this;b.groupsElement.empty();a.each(b.groupOrder,function(c,d){var e=a('<a class="pyodps-progress-launcher" href="javascript: void(0)"></a>').data('group',d).text(b.groupMsgs[d].name);e.click(function(c){var d=this;var e=a(d).data('group');b._build_modal(e);b._show_modal();c.stopPropagation();});b.groupsElement.append(e);});},_build_modal:function(b){var c=this;var h=c.groupMsgs[b];g.data('group_key',b);a('.modal-title',g).text('Progress of "'+h.name+'"');a('.generated-time',g).text('Generate time: '+new Date(h.gen_time).format('yyyy-MM-dd hh:mm:ss'));var i=a('.instances-holder',g);i.empty();if(!h.instances)return;a.each(h.instances,function(b,c){var g=a(d.replace(/\{INSTANCE_ID\}/g,c.id));var h=a('.tasks',g);a('.instance_id',g).text('Instance '+b+': '+c.status);a('.logview',g).attr('href',c.logview).attr('target','_blank');if(!c.tasks)return;a.each(c.tasks,function(b,c){var d=a(e);a('.task-name',d).text(c.name+': '+c.status);var g=a('.stages',d);if(!c.stages)g.text('No stage information available.');else a.each(c.stages,function(b,c){var d=a(f);a('.stage-name',d).text(c.name);if(c.total_workers==0)c.total_workers=1;var e=(c.terminated_workers*100/c.total_workers).toFixed(2)+'%';a('.terminated',d).width(e).text(e);var h=(c.running_workers*100/c.total_workers).toFixed(2)+'%';a('.running',d).width(h).text(h);g.append(d);});h.append(d);});i.append(g);});},_show_modal:function(){g.modal();},_handle_route_msg:function(b){var c=this;if(b){var d=a.parseJSON(b);var e=d.action;var f=[];if(d.content)f=d.content;if(e=='update'){a.each(f,function(b,d){d=a.parseJSON(d);if(!c.groupMsgs[d.key])c.groupOrder.push(d.key);c.groupMsgs[d.key]=d;if(g.data('group_key')==d.key)c._build_modal(d.key);});}else if(d.action=='delete'){a.each(f,function(a,b){if(!c.groupMsgs[b])return;delete c.groupMsgs[b];var d=c.groupOrder.indexOf(b);if(d>=0)c.groupOrder.splice(d,1);});}else if(d.action=='clear'){c.groupMsgs={};c.groupOrder=[];}}c.update();}});return{InstancesProgress:h};});});