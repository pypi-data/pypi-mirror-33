Metadata-Version: 1.1
Name: django-tagify
Version: 0.20
Summary: django tag input field
Home-page: https://github.com/purecs/django-tagify/
Author: PureCS
Author-email: purecs@hotmail.com
License: MIT
Description-Content-Type: UNKNOWN
Description: django-tagify
        ----------------
        
        A django tag input field using Tagify_ built for Django 2.0.
        The tags are stored as a comma-delimited (unless if changed) ``String``.
        
        .. _Tagify: https://github.com/yairEO/tagify/
        
        Usage
        ===============
        
        1. Models: Use ``TagsField`` to represent a tags field.
        2. Forms: Make sure you display ``form.media`` in the html template, for the widget to render correctly.
        3. Widget settings: Pass the settings dictionary as follows ``TagsField(widget_settings={...}``.
        
         * You can specify if 'duplicates' are allowed (boolean).
         * You can specify 'autocomplete' (boolean) - this matches from the whitelist.
         * You can specify 'enforceWhitelist' (boolean).
         * You can specify 'maxTags' (int).
         * You can specify the 'whitelist' (list containing strings).
         * You can specify the 'blacklist' (list containing strings).
         * You can specify the 'delimiter' (string).
         * You can specify the RegEx 'pattern' to validate the input (string).
        
        If you want to allow blank inputs for tags make sure you set ``blank=True`` on ``TagsField``.
        If blank inputs are allowed, they will not be filtered by the whitelist.
        
        Note: If you use ``TagsField`` in a Form, then `Form.is_valid()` will automatically verify that its values
        conform to those specify in its settings, to prevent malicious behaviour from end users.
        
        Installation
        ===============
        
        1. Install the module
        
          .. code-block::
        
              pip install django-tagify
        
        2. Add ``django_tagify`` to your ``INSTALLED_APPS`` setting in the Django ``settings.py``.
        
            Example:
        
            .. code-block:: python
        
                INSTALLED_APPS = (
                    # ...other installed apps
                    'django_tagify',
                )
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.0
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
