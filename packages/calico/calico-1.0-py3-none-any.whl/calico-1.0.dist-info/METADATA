Metadata-Version: 2.1
Name: calico
Version: 1.0
Summary: I/O checker for command-line programs.
Home-page: https://github.com/itublg/calico
Author: H. Turgut Uyar
Author-email: uyar@itu.edu.tr
License: GPL
Keywords: cli testing
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Education :: Testing
Classifier: Topic :: Utilities
Provides-Extra: doc
Provides-Extra: test
Provides-Extra: dev
Requires-Dist: pexpect
Requires-Dist: ruamel.yaml
Provides-Extra: dev
Requires-Dist: black; extra == 'dev'
Requires-Dist: flake8; extra == 'dev'
Requires-Dist: flake8-isort; extra == 'dev'
Requires-Dist: flake8-docstrings; extra == 'dev'
Requires-Dist: pygenstub; extra == 'dev'
Requires-Dist: readme-renderer; extra == 'dev'
Requires-Dist: wheel; extra == 'dev'
Requires-Dist: twine; extra == 'dev'
Provides-Extra: doc
Requires-Dist: sphinx; extra == 'doc'
Requires-Dist: sphinx-rtd-theme; extra == 'doc'
Requires-Dist: pygenstub; extra == 'doc'
Provides-Extra: test
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'

Copyright (C) 2016-2018 H. Turgut Uyar <uyar@itu.edu.tr>

Calico is a utility for checking command-line programs in terms of their
input and output. It checks whether a program generates the correct output
when given some inputs. It was developed to evaluate simple programming
assignments in an introductory programming course.

:PyPI: https://pypi.python.org/pypi/calico/
:Repository: https://github.com/itublg/calico
:Documentation: https://calico.readthedocs.io/

Calico has been tested with Python 3.6+. You can install the latest version
from PyPI::

   pip install calico

Calico uses `pexpect`_ for interacting with the program it is checking.
The file that specifies the inputs and outputs for the checks
is in `YAML`_ format.

.. _pexpect: https://pexpect.readthedocs.io/
.. _YAML: http://www.yaml.org/


