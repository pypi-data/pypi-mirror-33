Metadata-Version: 2.1
Name: nti.contentfragments
Version: 1.1.1
Summary: NTI ContentFragments
Home-page: https://github.com/NextThought/nti.contentfragments
Author: Jason Madden
Author-email: jason@nextthought.com
License: Apache
Keywords: Content fragments semantic typing interfaces classes sanitize censor
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Provides-Extra: test
Requires-Dist: setuptools
Requires-Dist: html5lib
Requires-Dist: lxml
Requires-Dist: repoze.lru (>=0.6)
Requires-Dist: zope.component (>=4.4.1)
Requires-Dist: zope.event (>=4.3.0)
Requires-Dist: zope.interface (>=4.5.0)
Requires-Dist: zope.mimetype (>=2.1.0)
Requires-Dist: zope.security (>=4.0.3)
Requires-Dist: zope.cachedescriptors (>=4.3.1)
Requires-Dist: nti.schema (>=1.3.2)
Requires-Dist: datrie; platform_python_implementation == 'CPython'
Provides-Extra: test
Requires-Dist: pyhamcrest; extra == 'test'
Requires-Dist: zope.testing; extra == 'test'
Requires-Dist: nti.testing; extra == 'test'
Requires-Dist: zope.testrunner; extra == 'test'

======================
 nti.contentfragments
======================

.. image:: https://travis-ci.org/NextThought/nti.contentfragments.svg?branch=master
    :target: https://travis-ci.org/NextThought/nti.contentfragments

.. image:: https://coveralls.io/repos/github/NextThought/nti.contentfragments/badge.svg?branch=master
    :target: https://coveralls.io/github/NextThought/nti.contentfragments?branch=master



Support for working with string-based content in a Zope3/ZTK
environment.

Overview
========

In a client/server environment dealing with various types of content
from users, it's important to know what not just the Python type of a
particular string is, but also what the *semantic* type of the string
is: HTML, plain text, LaTeX, etc.

This package defines interfaces and classes to be able to record this
information. It also features a framework for transforming between the
various supported semantic types (e.g., HTML to plain text).

Other features:

- Support for making arbitrary incoming HTML safe (sanitizing it).
- Support for very configurable (optionally) event-based profanity
  censoring that integrates with nti.schema/zope.schema.

See `the documentation <http://nticontentfragments.readthedocs.io/en/latest/>`_ for more details.


