{"version":3,"sources":["webpack:///webpack/bootstrap 4c48343bd1d426ed68cd","webpack:///external \"React\"","webpack:///external \"Sentry\"","webpack:///./components/settings.jsx","webpack:///./hipchat_ac.jsx"],"names":["Settings","props","onTest","bind","fetchData","Object","assign","state","tenants","tenantsLoading","tenantsError","api","request","getPluginEndpoint","success","data","setState","error","loadingIndicator","add","t","method","testResults","message","complete","remove","url","metadata","length","onPremise","descriptor","isTestable","plugin","fontSize","map","tenant","id","room","name","owner","authUser","username","organization","slug","project","renderLink","renderTenants","BasePlugin","DefaultSettings","Hipchat","displayName"],"mappings":"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","file":"hipchat-ac.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c48343bd1d426ed68cd","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 0\n// module chunks = 0","module.exports = Sentry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Sentry\"\n// module id = 1\n// module chunks = 0","import React from 'react';\nimport {i18n, IndicatorStore, LoadingError, LoadingIndicator, plugins} from 'sentry';\n\nclass Settings extends plugins.BasePlugin.DefaultSettings {\n  constructor(props) {\n    super(props);\n\n    this.onTest = this.onTest.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n\n    Object.assign(this.state, {\n      tenants: null,\n      tenantsLoading: true,\n      tenantsError: false,\n    });\n  }\n\n  fetchData() {\n    super.fetchData();\n\n    this.api.request(`${this.getPluginEndpoint()}tenants/`, {\n      success: (data) => {\n        this.setState({\n          tenants: data,\n          tenantsLoading: false,\n          tenantsError: false,\n        });\n      },\n      error: (error) => {\n        this.setState({\n          tenantsLoading: false,\n          tenantsError: true,\n        });\n      }\n    });\n  }\n\n  // TODO(dcramer): move this to Sentry core\n  onTest() {\n    let loadingIndicator = IndicatorStore.add(i18n.t('Saving changes..'));\n    this.api.request(`${this.getPluginEndpoint()}test-config/`, {\n      method: 'POST',\n      success: (data) => {\n        this.setState({\n          testResults: data,\n        });\n      },\n      error: (error) => {\n        this.setState({\n          testResults: {\n            error: true,\n            message: 'An unknown error occurred while testing this integration.',\n          },\n        });\n      },\n      complete: () => {\n        IndicatorStore.remove(loadingIndicator);\n      }\n    });\n  }\n  renderLink(url, metadata) {\n    let tenants = this.state.tenants;\n    if (!tenants || !tenants.length) {\n      if (metadata.onPremise) {\n        return (\n          <div>\n            <p>\n              Installing this integration will allow you to receive notifications\n              for and assign team members to new Sentry errors within HipChat rooms.\n              To install the integration, click the button below.\n            </p>\n            <p>\n              <a href={url}\n                 className=\"btn btn-primary\"\n                 target=\"_blank\">Enable Integration</a>\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <p>\n              To add the Sentry integration to\n              HipChat click on \"Install an integration from a descriptor URL\"\n              on your room in HipChat and add the following descriptor URL:\n            </p>\n            <pre>{metadata.descriptor}</pre>\n          </div>\n        );\n      }\n    }\n  }\n\n  renderTenants(url) {\n    let tenants = this.state.tenants;\n    if (this.state.tenantsLoading)\n      return <LoadingIndicator />;\n    else if (this.state.tenantsError)\n      return <LoadingError onRetry={this.fetchData} />;\n    if (!tenants.length)\n      return null;\n\n    let isTestable = this.props.plugin.isTestable;\n    return (\n      <div>\n      <h4>Active Rooms</h4>\n        <table className=\"table\" style={{fontSize: 14}}>\n          <thead>\n            <tr>\n              <th>Room</th>\n              <th>By</th>\n              {isTestable &&\n                <th>Test</th>\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {tenants.map((tenant) => {\n              return (\n                <tr key={tenant.id}>\n                  <td>\n                    <strong>{tenant.room.name}</strong><br />\n                    <small>(id: {tenant.room.id}; owner: {tenant.room.owner.name})</small>\n                  </td>\n                  <td>{tenant.authUser && tenant.authUser.username || '(unknown)'}</td>\n                  {isTestable &&\n                    <td>\n                      <a className=\"btn btn-default btn-sm\"\n                         onClick={this.onTest}>Test</a>\n                    </td>\n                  }\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <p>\n          To manage HipChat notifications or the rooms in which Sentry errors appear, visit the\n          <a href={url} target=\"_blank\"> integration configuration page</a>.\n        </p>\n        <p>\n          <b>Disabling the plugin here will delete all associations\n            and will disable notifications to all HipChat Rooms</b>\n        </p>\n      </div>\n    );\n  }\n\n  render() {\n    let metadata = this.props.plugin.metadata;\n\n    let url = ('/plugins/hipchat-ac/start/' + this.props.organization.slug +\n               '/' + this.props.project.slug)\n    return (\n      <div className=\"ref-hipchat-settings\">\n        {this.state.testResults &&\n          <div className=\"ref-hipchat-test-results\">\n            <h4>Test Results</h4>\n            {this.state.testResults.error ?\n              <div className=\"alert alert-block alert-error\">{this.state.testResults.message}</div>\n            :\n              <div className=\"alert alert-block alert-success\">{this.state.testResults.message}</div>\n            }\n          </div>\n        }\n        {this.renderLink(url, metadata)}\n        {this.renderTenants(url)}\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n\n\n\n// WEBPACK FOOTER //\n// ./components/settings.jsx","import React from 'react';\nimport {plugins} from 'sentry';\n\nimport Settings from './components/settings';\n\nclass Hipchat extends plugins.BasePlugin {\n    renderSettings(props) {\n        return <Settings plugin={this} {...props} />;\n    }\n}\n\nHipchat.displayName = 'Hipchat';\n\nplugins.add('hipchat-ac', Hipchat);\n\nexport default Hipchat;\n\n\n\n// WEBPACK FOOTER //\n// ./hipchat_ac.jsx"],"sourceRoot":""}