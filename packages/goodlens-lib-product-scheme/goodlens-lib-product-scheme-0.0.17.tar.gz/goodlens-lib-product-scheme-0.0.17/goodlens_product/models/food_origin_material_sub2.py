# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from goodlens_product.models.base_model_ import Model
from goodlens_product.models.food_origin_material_item import FoodOriginMaterialItem  # noqa: F401,E501
from goodlens_product.models.food_origin_material_sub3 import FoodOriginMaterialSub3  # noqa: F401,E501
from goodlens_product import util


class FoodOriginMaterialSub2(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, info: FoodOriginMaterialItem=None, child: List[FoodOriginMaterialSub3]=None):  # noqa: E501
        """FoodOriginMaterialSub2 - a model defined in Swagger

        :param info: The info of this FoodOriginMaterialSub2.  # noqa: E501
        :type info: FoodOriginMaterialItem
        :param child: The child of this FoodOriginMaterialSub2.  # noqa: E501
        :type child: List[FoodOriginMaterialSub3]
        """
        self.swagger_types = {
            'info': FoodOriginMaterialItem,
            'child': List[FoodOriginMaterialSub3]
        }

        self.attribute_map = {
            'info': 'info',
            'child': 'child'
        }

        self._info = info
        self._child = child

    @classmethod
    def from_dict(cls, dikt) -> 'FoodOriginMaterialSub2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FoodOriginMaterialSub2 of this FoodOriginMaterialSub2.  # noqa: E501
        :rtype: FoodOriginMaterialSub2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def info(self) -> FoodOriginMaterialItem:
        """Gets the info of this FoodOriginMaterialSub2.


        :return: The info of this FoodOriginMaterialSub2.
        :rtype: FoodOriginMaterialItem
        """
        return self._info

    @info.setter
    def info(self, info: FoodOriginMaterialItem):
        """Sets the info of this FoodOriginMaterialSub2.


        :param info: The info of this FoodOriginMaterialSub2.
        :type info: FoodOriginMaterialItem
        """

        self._info = info

    @property
    def child(self) -> List[FoodOriginMaterialSub3]:
        """Gets the child of this FoodOriginMaterialSub2.


        :return: The child of this FoodOriginMaterialSub2.
        :rtype: List[FoodOriginMaterialSub3]
        """
        return self._child

    @child.setter
    def child(self, child: List[FoodOriginMaterialSub3]):
        """Sets the child of this FoodOriginMaterialSub2.


        :param child: The child of this FoodOriginMaterialSub2.
        :type child: List[FoodOriginMaterialSub3]
        """

        self._child = child
