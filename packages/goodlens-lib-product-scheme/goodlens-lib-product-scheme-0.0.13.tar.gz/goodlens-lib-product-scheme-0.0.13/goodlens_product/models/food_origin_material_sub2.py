# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from goodlens_product.models.base_model_ import Model
from goodlens_product.models.food_origin_material_sub3 import FoodOriginMaterialSub3  # noqa: F401,E501
from goodlens_product import util


class FoodOriginMaterialSub2(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, origin_place: List[str]=None, rate: str=None, rate_unit: str=None, raw_text: str=None, child: List[FoodOriginMaterialSub3]=None):  # noqa: E501
        """FoodOriginMaterialSub2 - a model defined in Swagger

        :param name: The name of this FoodOriginMaterialSub2.  # noqa: E501
        :type name: str
        :param origin_place: The origin_place of this FoodOriginMaterialSub2.  # noqa: E501
        :type origin_place: List[str]
        :param rate: The rate of this FoodOriginMaterialSub2.  # noqa: E501
        :type rate: str
        :param rate_unit: The rate_unit of this FoodOriginMaterialSub2.  # noqa: E501
        :type rate_unit: str
        :param raw_text: The raw_text of this FoodOriginMaterialSub2.  # noqa: E501
        :type raw_text: str
        :param child: The child of this FoodOriginMaterialSub2.  # noqa: E501
        :type child: List[FoodOriginMaterialSub3]
        """
        self.swagger_types = {
            'name': str,
            'origin_place': List[str],
            'rate': str,
            'rate_unit': str,
            'raw_text': str,
            'child': List[FoodOriginMaterialSub3]
        }

        self.attribute_map = {
            'name': 'name',
            'origin_place': 'origin_place',
            'rate': 'rate',
            'rate_unit': 'rate_unit',
            'raw_text': 'raw_text',
            'child': 'child'
        }

        self._name = name
        self._origin_place = origin_place
        self._rate = rate
        self._rate_unit = rate_unit
        self._raw_text = raw_text
        self._child = child

    @classmethod
    def from_dict(cls, dikt) -> 'FoodOriginMaterialSub2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FoodOriginMaterialSub2 of this FoodOriginMaterialSub2.  # noqa: E501
        :rtype: FoodOriginMaterialSub2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this FoodOriginMaterialSub2.

        원재료명  # noqa: E501

        :return: The name of this FoodOriginMaterialSub2.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this FoodOriginMaterialSub2.

        원재료명  # noqa: E501

        :param name: The name of this FoodOriginMaterialSub2.
        :type name: str
        """

        self._name = name

    @property
    def origin_place(self) -> List[str]:
        """Gets the origin_place of this FoodOriginMaterialSub2.

        원산지  # noqa: E501

        :return: The origin_place of this FoodOriginMaterialSub2.
        :rtype: List[str]
        """
        return self._origin_place

    @origin_place.setter
    def origin_place(self, origin_place: List[str]):
        """Sets the origin_place of this FoodOriginMaterialSub2.

        원산지  # noqa: E501

        :param origin_place: The origin_place of this FoodOriginMaterialSub2.
        :type origin_place: List[str]
        """

        self._origin_place = origin_place

    @property
    def rate(self) -> str:
        """Gets the rate of this FoodOriginMaterialSub2.

        비중  # noqa: E501

        :return: The rate of this FoodOriginMaterialSub2.
        :rtype: str
        """
        return self._rate

    @rate.setter
    def rate(self, rate: str):
        """Sets the rate of this FoodOriginMaterialSub2.

        비중  # noqa: E501

        :param rate: The rate of this FoodOriginMaterialSub2.
        :type rate: str
        """

        self._rate = rate

    @property
    def rate_unit(self) -> str:
        """Gets the rate_unit of this FoodOriginMaterialSub2.

        비중 단위(%, mg/g, ...)  # noqa: E501

        :return: The rate_unit of this FoodOriginMaterialSub2.
        :rtype: str
        """
        return self._rate_unit

    @rate_unit.setter
    def rate_unit(self, rate_unit: str):
        """Sets the rate_unit of this FoodOriginMaterialSub2.

        비중 단위(%, mg/g, ...)  # noqa: E501

        :param rate_unit: The rate_unit of this FoodOriginMaterialSub2.
        :type rate_unit: str
        """

        self._rate_unit = rate_unit

    @property
    def raw_text(self) -> str:
        """Gets the raw_text of this FoodOriginMaterialSub2.

        원재료명/함량 원본 Text  # noqa: E501

        :return: The raw_text of this FoodOriginMaterialSub2.
        :rtype: str
        """
        return self._raw_text

    @raw_text.setter
    def raw_text(self, raw_text: str):
        """Sets the raw_text of this FoodOriginMaterialSub2.

        원재료명/함량 원본 Text  # noqa: E501

        :param raw_text: The raw_text of this FoodOriginMaterialSub2.
        :type raw_text: str
        """

        self._raw_text = raw_text

    @property
    def child(self) -> List[FoodOriginMaterialSub3]:
        """Gets the child of this FoodOriginMaterialSub2.


        :return: The child of this FoodOriginMaterialSub2.
        :rtype: List[FoodOriginMaterialSub3]
        """
        return self._child

    @child.setter
    def child(self, child: List[FoodOriginMaterialSub3]):
        """Sets the child of this FoodOriginMaterialSub2.


        :param child: The child of this FoodOriginMaterialSub2.
        :type child: List[FoodOriginMaterialSub3]
        """

        self._child = child
