# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from goodlens_product.models.base_model_ import Model
from goodlens_product.models.nutrient_item import NutrientItem  # noqa: F401,E501
from goodlens_product import util


class Nutrient(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, total_capacity: str=None, total_capacity_unit: str=None, nutrients: List[NutrientItem]=None):  # noqa: E501
        """Nutrient - a model defined in Swagger

        :param total_capacity: The total_capacity of this Nutrient.  # noqa: E501
        :type total_capacity: str
        :param total_capacity_unit: The total_capacity_unit of this Nutrient.  # noqa: E501
        :type total_capacity_unit: str
        :param nutrients: The nutrients of this Nutrient.  # noqa: E501
        :type nutrients: List[NutrientItem]
        """
        self.swagger_types = {
            'total_capacity': str,
            'total_capacity_unit': str,
            'nutrients': List[NutrientItem]
        }

        self.attribute_map = {
            'total_capacity': 'total_capacity',
            'total_capacity_unit': 'total_capacity_unit',
            'nutrients': 'nutrients'
        }

        self._total_capacity = total_capacity
        self._total_capacity_unit = total_capacity_unit
        self._nutrients = nutrients

    @classmethod
    def from_dict(cls, dikt) -> 'Nutrient':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Nutrient of this Nutrient.  # noqa: E501
        :rtype: Nutrient
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_capacity(self) -> str:
        """Gets the total_capacity of this Nutrient.

        영양성분 총내용량  # noqa: E501

        :return: The total_capacity of this Nutrient.
        :rtype: str
        """
        return self._total_capacity

    @total_capacity.setter
    def total_capacity(self, total_capacity: str):
        """Sets the total_capacity of this Nutrient.

        영양성분 총내용량  # noqa: E501

        :param total_capacity: The total_capacity of this Nutrient.
        :type total_capacity: str
        """

        self._total_capacity = total_capacity

    @property
    def total_capacity_unit(self) -> str:
        """Gets the total_capacity_unit of this Nutrient.

        총내용량 단위  # noqa: E501

        :return: The total_capacity_unit of this Nutrient.
        :rtype: str
        """
        return self._total_capacity_unit

    @total_capacity_unit.setter
    def total_capacity_unit(self, total_capacity_unit: str):
        """Sets the total_capacity_unit of this Nutrient.

        총내용량 단위  # noqa: E501

        :param total_capacity_unit: The total_capacity_unit of this Nutrient.
        :type total_capacity_unit: str
        """

        self._total_capacity_unit = total_capacity_unit

    @property
    def nutrients(self) -> List[NutrientItem]:
        """Gets the nutrients of this Nutrient.


        :return: The nutrients of this Nutrient.
        :rtype: List[NutrientItem]
        """
        return self._nutrients

    @nutrients.setter
    def nutrients(self, nutrients: List[NutrientItem]):
        """Sets the nutrients of this Nutrient.


        :param nutrients: The nutrients of this Nutrient.
        :type nutrients: List[NutrientItem]
        """

        self._nutrients = nutrients
