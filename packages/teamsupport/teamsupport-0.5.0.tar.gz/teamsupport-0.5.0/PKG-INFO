Metadata-Version: 1.1
Name: teamsupport
Version: 0.5.0
Summary: Python library for interfacing with the TeamSupport API
Home-page: https://github.com/yola/teamsupport-python
Author: Yola Engineers
Author-email: engineers@yola.com
License: MIT
Description: Python TeamSupport Client
        =========================
        
        
        |Build Status| |Latest Version|
        
        Python library for interfacing with the TeamSupport XML API, using `demands <https://github.com/yola/demands>`__.
        
        Free software: MIT license
        
        Features
        --------
        
        -  Client methods parse response content in order to return LXML Element
           objects
        -  Converting Python dictionaries into XML for POST and PUT calls
        -  Simple models for Tickets and Actions.
        
        Usage
        -----
        
        ::
        
            from teamsupport import Ticket, init
        
            init(<org_id>, <auth_key>[, default_ticket_type=<>, default_ticket_status=<>])
        
            # Get ticket with given ID/Number.
            ticket = Ticket(<ticket_number_or_ticket_id>)
        
            # Create new ticket.
            ticket = Ticket.create(
                contact_email, contact_first_name, contact_last_name,
                ticket_name, ticket_text)
        
            # Get Ticket description.
            descr = ticket.get_description()
        
            # Update ticket description.
            ticket.set_decription('New description')
        
            To run integration tests please set correct values in `teamsupport/config.py`
            and run: `nosetests integration_tests`
        
        .. |Build Status| image:: https://img.shields.io/travis/yola/teamsupport-python.svg?style=flat-square
           :target: https://travis-ci.org/yola/teamsupport-python
        .. |Latest Version| image:: https://img.shields.io/pypi/v/teamsupport.svg?style=flat-square
           :target: https://warehouse.python.org/project/teamsupport
        
        
        Running Tests
        -------------
        
        Set correct data in teamsupport/config.py
        
        ::
        
            nosetests
        
        
        Changelog
        =========
        
        0.5.0 (2018-07-05)
        ------------------
        
        - Switched to JSON API.
        - Set correct ticket status when creating a ticket
        - Added ability to modify default ticket type and status when calling
          teamsupport.init()
        
        
        0.4.1 (2018-02-08)
        ------------------
        
        - Convert input data to str when composing XML.
        
        0.4.0 (2016-10-21)
        ----------------
        
        - Switched to Demands == 4.0.0
        
        0.3.0 (2015-12-01)
        ------------------
        
        - Automatically convert DateTime fields to datetime type for Ticket model.
        
        0.2.2 (2015-11-27)
        ------------------
        
        - Add Ticket.search() and Ticket.update() methods.
        
        0.2.1 (2015-11-27)
        ------------------
        
        - Fix README.rst formatting.
        
        0.2.0 (2015-11-26)
        ------------------
        
        -  Add `create` class method to the Ticket model; Add `Contact` model;
        -  Remove User model.
        -  Change models constructors to not require `client` param.
        
        0.1.3 (2015-09-13)
        ------------------
        
        -  Fix bug in `update_ticket` method
        
        0.1.2 (2015-09-12)
        ------------------
        
        -  Bump version to fix PyPI upload issue
        
        0.1.1 (2015-09-12)
        ------------------
        
        -  Add `User` model and `TeamSupportService.get_user` method.
        
        0.1.0 (2015-09-10)
        ------------------
        
        -  First release on PyPI.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries
