.TH monkeysign 1
.SH SYNOPSIS
 \fBmonkeysign\fR [-h] [--version] [-d] [-v] [-n] [--test] [-u USER [USER ...]]
           [--certlevel CERTLEVEL] [-l] [-k KEYSERVER] [--tor]
           [--socks HOST[:PORT]] [-s SMTPSERVER] [--tls] [--smtpuser SMTPUSER]
           [--smtppass SMTPPASS] [--mta MTA] [--mua [MUA]] [--nomail] [-t TO]
           [--save]
           [pattern [pattern ...]]


.SH DESCRIPTION

.br
monkeysign is a tool to overhaul the OpenPGP keysigning experience and
.br
bring it closer to something that most primates can understand.
.br

.br
The project makes use of cheap digital cameras and the type of bar
.br
code known as a QRcode to provide a human\-friendly yet still\-secure
.br
keysigning experience.
.br

.br
No more reciting tedious strings of hexadecimal characters.  And, you
.br
can build a little rogue's gallery of the people that you have met and
.br
exchanged keys with!
.br

.SH OPTIONS
  pattern               pattern of the key to sign (fingerprint, user id, etc)

  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -d, --debug           request debugging information from GPG engine (lots of
                        garbage)
  -v, --verbose         explain what we do along the way
  -n, --dry-run         do not actually do anything
  --test                run test suite, exit with the number of failing tests
  -u USER [USER ...], --user USER [USER ...]
                        user id to sign the key with (equivalent to GPG's
                        --local-user option)
  --certlevel CERTLEVEL, --cert-level CERTLEVEL
                        certification level to sign the key with (equivalent
                        to GPG's --default-cert-level)
  -l, --local           import in normal keyring a local certification
  -k KEYSERVER, --keyserver KEYSERVER
                        keyserver to fetch keys from
  --tor                 use Tor to get keys and send email
  --socks HOST[:PORT]   connect to SOCKS proxy
  -s SMTPSERVER, --smtpserver SMTPSERVER, --smtp SMTPSERVER
                        SMTP server to use, use a colon to specify the port
                        number if non-default (25). willl attempt to use
                        STARTTLS to secure the connexion and fail if
                        unsupported (default: deliver using the --mta command)
  --tls                 use a complete TLS connexion instead of using STARTTLS
                        to upgrade the connexion. will change the default SMTP
                        port to 465
  --smtpuser SMTPUSER   username for the SMTP server (default: no user)
  --smtppass SMTPPASS   password for the SMTP server (default: prompted, if
                        --smtpuser is specified)
  --mta MTA             command to use to send mail, recipient is passed on
                        the commandline in the "%(to)s" field, or the command
                        must parse the "To:" header (default:
                        /usr/sbin/sendmail -t)
  --mua [MUA]           Mail User Agent to use to send mail. all parameters
                        are passed on the commandline,overrides --mta.
                        (default: xdg-email --utf8 --to '%(to)s' --subject
                        '%(subject)s' --body '%(body)s' --attach '%(attach)s'
                        when specified)
  --nomail, --no-mail   do not send email at all
  -t TO, --to TO        override destination email for testing (default: send
                        individually encrypted email to each uid chosen)
  --save                save the given commandline parameters to the config
                        file

an arbitrary configuration file may also be supplied on the
commandline with a @ prefix (e.g. @foo.conf). the following
configuration files are parsed by default: ~/.config/monkeysign.conf or /etc/monkeysign.conf
.SH DISTRIBUTION
 The latest version of monkeysign may be downloaded from http://web.monkeysphere.info/monkeysign
.SH AUTHORS
 ('Antoine Beaupr\xc3\xa9', 'anarcat@debian.org')