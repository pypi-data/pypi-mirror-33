{"version":3,"sources":["webpack:///./src/panels/experimental-ui/hui-entities-card.js","webpack:///./src/panels/experimental-ui/hui-entity-filter-card.js","webpack:///./src/panels/experimental-ui/hui-view.js","webpack:///./src/panels/experimental-ui/ha-panel-experimental-ui.js"],"names":["customElements","define","polymer_element","a","template","html_tag","properties","hass","type","Object","observer","config","constructor","super","this","_elements","getCardSize","entities","length","_computeTitle","title","_configChanged","root","$","states","lastChild","removeChild","i","entityId","stateObj","tag","attributes","custom_ui_state_card","state_card_type","element","document","createElement","push","appendChild","_hassChanged","_getEntities","filter","filters","domain","compute_state_domain","state","values","every","filterFunc","map","entity_id","_computeCardConfig","assign","card_config","VALID_TYPES","columns","Number","_getElements","cards","elements","cardConfig","includes","startsWith","substr","console","error","columnEntityCount","forEach","el","size","minIndex","val","column","columnEl","classList","add","apply_themes_on_element","themes","theme","narrow","Boolean","value","showMenu","_columns","_config","_curView","ready","_fetchConfig","_handleWindowChange","bind","mqls","width","mql","matchMedia","addListener","matchColumns","reduce","cols","matches","Math","max","connection","sendMessagePromise","then","conf","result","views"],"mappings":"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","file":"e9debc10beb4545d967f.chunk.js","sourcesContent":["import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport stateCardType from '../../common/entity/state_card_type.js';\n\nimport '../../components/ha-card.js';\n\n// just importing this now as shortcut to import correct state-card-*\nimport '../../state-summary/state-card-content.js';\n\n// Support for overriding type from attributes should be removed\n// Instead, it should be coded inside entity config.\n// stateCardType requires `hass` because we check if a service exists.\n// This should also be determined during runtime.\nfunction stateElement(hass, entityId, stateObj) {\n  if (!stateObj) {\n    return 'state-card-display';\n  } else if (stateObj.attributes && 'custom_ui_state_card' in stateObj.attributes) {\n    return stateObj.attributes.custom_ui_state_card;\n  }\n  return 'state-card-' + stateCardType(hass, stateObj);\n}\n\nclass HuiEntitiesCard extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      ha-card {\n        padding: 16px;\n      }\n      .state {\n        padding: 4px 0;\n      }\n      .header {\n        @apply --paper-font-headline;\n        /* overwriting line-height +8 because entity-toggle can be 40px height,\n           compensating this with reduced padding */\n        line-height: 40px;\n        color: var(--primary-text-color);\n        padding: 4px 0 12px;\n      }\n      .header .name {\n        @apply --paper-font-common-nowrap;\n      }\n    </style>\n\n    <ha-card>\n      <div class='header'>\n        <div class=\"name\">[[_computeTitle(config)]]</div>\n      </div>\n      <div id=\"states\"></div>\n    </ha-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      config: {\n        type: Object,\n        observer: '_configChanged',\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this._elements = [];\n  }\n\n  getCardSize() {\n    // +1 for the header\n    return 1 + (this.config ? this.config.entities.length : 0);\n  }\n\n  _computeTitle(config) {\n    return config.title;\n  }\n\n  _configChanged(config) {\n    const root = this.$.states;\n\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n\n    this._elements = [];\n\n    for (let i = 0; i < config.entities.length; i++) {\n      const entityId = config.entities[i];\n      const stateObj = this.hass.states[entityId];\n      const tag = stateElement(this.hass, entityId, stateObj);\n      const element = document.createElement(tag);\n      element.stateObj = stateObj;\n      element.hass = this.hass;\n      this._elements.push({ entityId, element });\n      root.appendChild(element);\n    }\n  }\n\n  _hassChanged(hass) {\n    for (let i = 0; i < this._elements.length; i++) {\n      const { entityId, element } = this._elements[i];\n      const stateObj = hass.states[entityId];\n      element.stateObj = stateObj;\n      element.hass = hass;\n    }\n  }\n}\ncustomElements.define('hui-entities-card', HuiEntitiesCard);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './hui-entities-card.js';\n\nimport computeStateDomain from '../../common/entity/compute_state_domain.js';\n\nclass HuiEntitiesCard extends PolymerElement {\n  static get template() {\n    return html`\n    <hui-entities-card\n      hass='[[hass]]'\n      config='[[_computeCardConfig(hass, config)]]'\n    ></hui-entities-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      config: Object,\n    };\n  }\n\n  getCardSize() {\n    // +1 for the header\n    return 1 + this._getEntities(this.hass, this.config.filter).length;\n  }\n\n  // Return a list of entities based on a filter.\n  _getEntities(hass, filter) {\n    const filters = [];\n\n    if (filter.domain) {\n      const domain = filter.domain;\n      filters.push(stateObj => computeStateDomain(stateObj) === domain);\n    }\n\n    if (filter.state) {\n      const state = filter.state;\n      filters.push(stateObj => stateObj.state === state);\n    }\n\n    return Object.values(hass.states)\n      .filter(stateObj => filters.every(filterFunc => filterFunc(stateObj)))\n      .map(stateObj => stateObj.entity_id);\n  }\n\n  _computeCardConfig(hass, config) {\n    return Object.assign({}, config.card_config || {}, {\n      entities: this._getEntities(hass, config.filter),\n    });\n  }\n}\ncustomElements.define('hui-entity-filter-card', HuiEntitiesCard);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './hui-entities-card.js';\nimport './hui-entity-filter-card.js';\n\nimport applyThemesOnElement from '../../common/dom/apply_themes_on_element.js';\n\nconst VALID_TYPES = ['entities', 'entity-filter'];\nconst CUSTOM_TYPE_PREFIX = 'custom:';\n\nfunction cardElement(type) {\n  if (VALID_TYPES.includes(type)) {\n    return `hui-${type}-card`;\n  } else if (type.startsWith(CUSTOM_TYPE_PREFIX)) {\n    return type.substr(CUSTOM_TYPE_PREFIX.length);\n  }\n  return null;\n}\n\nclass HaView extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n      :host {\n        display: block;\n        padding-top: 8px;\n        padding-right: 8px;\n        transform: translateZ(0);\n        position: relative;\n      }\n\n      #columns {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n      }\n\n      .column {\n        flex-basis: 0;\n        flex-grow: 1;\n        max-width: 500px;\n        overflow-x: hidden;\n      }\n\n      .column > * {\n        display: block;\n        margin-left: 8px;\n        margin-bottom: 8px;\n      }\n\n      @media (max-width: 500px) {\n        :host {\n          padding-right: 0;\n        }\n\n        .column > * {\n          margin-left: 0;\n        }\n      }\n\n      @media (max-width: 599px) {\n        .column {\n          max-width: 600px;\n        }\n      }\n      </style>\n      <div id='columns'></div>\n    `;\n  }\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n\n      columns: {\n        type: Number,\n        observer: '_configChanged',\n      },\n\n      config: {\n        type: Object,\n        observer: '_configChanged',\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this._elements = [];\n  }\n\n  _getElements(cards) {\n    const elements = [];\n\n    for (let i = 0; i < cards.length; i++) {\n      const cardConfig = cards[i];\n      const tag = cardElement(cardConfig.type);\n      if (!tag) {\n        // eslint-disable-next-line\n        console.error('Unknown type encountered:', cardConfig.type);\n        continue;\n      }\n      const element = document.createElement(tag);\n      element.config = cardConfig;\n      element.hass = this.hass;\n      elements.push(element);\n    }\n\n    return elements;\n  }\n\n  _configChanged() {\n    const root = this.$.columns;\n    const config = this.config;\n\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n\n    if (!config) {\n      this._elements = [];\n      return;\n    }\n\n    const elements = this._getElements(config.cards);\n\n    let columns = [];\n    const columnEntityCount = [];\n    for (let i = 0; i < this.columns; i++) {\n      columns.push([]);\n      columnEntityCount.push(0);\n    }\n\n    // Find column with < 5 entities, else column with lowest count\n    function getColumnIndex(size) {\n      let minIndex = 0;\n      for (let i = 0; i < columnEntityCount.length; i++) {\n        if (columnEntityCount[i] < 5) {\n          minIndex = i;\n          break;\n        }\n        if (columnEntityCount[i] < columnEntityCount[minIndex]) {\n          minIndex = i;\n        }\n      }\n\n      columnEntityCount[minIndex] += size;\n\n      return minIndex;\n    }\n\n    elements.forEach(el =>\n      columns[getColumnIndex(el.getCardSize())].push(el));\n\n    // Remove empty columns\n    columns = columns.filter(val => val.length > 0);\n\n    columns.forEach((column) => {\n      const columnEl = document.createElement('div');\n      columnEl.classList.add('column');\n      column.forEach(el => columnEl.appendChild(el));\n      root.appendChild(columnEl);\n    });\n\n    this._elements = elements;\n\n    if ('theme' in config) {\n      applyThemesOnElement(root, this.hass.themes, config.theme);\n    }\n  }\n\n  _hassChanged(hass) {\n    for (let i = 0; i < this._elements.length; i++) {\n      this._elements[i].hass = hass;\n    }\n  }\n}\n\ncustomElements.define('hui-view', HaView);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './hui-view.js';\n\nclass ExperimentalUI extends PolymerElement {\n  static get template() {\n    return html`\n    <style include='ha-style'>\n      app-header-layout {\n        height: 100%;\n      }\n    </style>\n    <app-header-layout>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>Experimental UI</div>\n          <paper-icon-button icon='hass:refresh' on-click='_fetchConfig'></paper-icon-button>\n        </app-toolbar>\n      </app-header>\n\n      <hui-view\n        hass='[[hass]]'\n        config='[[_curView]]'\n        columns='[[_columns]]'\n      ></hui-view>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      _columns: {\n        type: Number,\n        value: 1,\n      },\n\n      _config: {\n        type: Object,\n        value: null,\n        observer: '_configChanged',\n      },\n\n      _curView: Object\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._fetchConfig();\n    this._handleWindowChange = this._handleWindowChange.bind(this);\n    this.mqls = [300, 600, 900, 1200].map((width) => {\n      const mql = matchMedia(`(min-width: ${width}px)`);\n      mql.addListener(this._handleWindowChange);\n      return mql;\n    });\n    this._handleWindowChange();\n  }\n\n  _handleWindowChange() {\n    const matchColumns = this.mqls.reduce((cols, mql) => cols + mql.matches, 0);\n    // Do -1 column if the menu is docked and open\n    this._columns = Math.max(1, matchColumns - (!this.narrow && this.showMenu));\n  }\n\n  _fetchConfig() {\n    this.hass.connection.sendMessagePromise({ type: 'frontend/experimental_ui' })\n      .then((conf) => { this._config = conf.result; });\n  }\n\n  _configChanged(config) {\n    if (!config) return;\n    // Currently hardcode to first view.\n    this._curView = config.views[0];\n  }\n}\n\ncustomElements.define('ha-panel-experimental-ui', ExperimentalUI);\n"],"sourceRoot":""}