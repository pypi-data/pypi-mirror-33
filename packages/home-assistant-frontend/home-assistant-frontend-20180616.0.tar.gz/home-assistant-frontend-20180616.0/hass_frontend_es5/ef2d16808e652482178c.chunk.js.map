{"version":3,"sources":["webpack:///./src/panels/experimental-ui/hui-entities-card.js","webpack:///./src/panels/experimental-ui/hui-entity-filter-card.js","webpack:///./src/panels/experimental-ui/hui-view.js","webpack:///./src/panels/experimental-ui/ha-panel-experimental-ui.js"],"names":["stateElement","hass","entityId","stateObj","attributes","custom_ui_state_card","Object","state_card_type","a","hui_entities_card_HuiEntitiesCard","HuiEntitiesCard","this","_this","__proto__","getPrototypeOf","call","_elements","polymer_element","_createClass","key","get","html_tag","_templateObject","type","observer","config","value","entities","length","title","root","$","states","lastChild","removeChild","i","tag","element","document","createElement","push","appendChild","_elements$i","customElements","define","hui_entity_filter_card_HuiEntitiesCard","hui_entity_filter_card_createClass","_getEntities","filter","filters","domain","compute_state_domain","state","values","every","filterFunc","map","entity_id","assign","card_config","hui_entity_filter_card_templateObject","VALID_TYPES","hui_view_HaView","HaView","hui_view_createClass","hui_view_templateObject","columns","Number","cards","elements","cardConfig","includes","startsWith","substr","console","error","_getElements","columnEntityCount","forEach","el","size","minIndex","getCardSize","val","column","columnEl","classList","add","apply_themes_on_element","themes","theme","ha_panel_experimental_ui_ExperimentalUI","ha_panel_experimental_ui_createClass","ExperimentalUI","_this2","prototype","_fetchConfig","_handleWindowChange","bind","mqls","width","mql","matchMedia","addListener","matchColumns","reduce","cols","matches","_columns","Math","max","narrow","showMenu","_this3","connection","sendMessagePromise","then","conf","_config","result","_curView","views","ha_panel_experimental_ui_templateObject","Boolean"],"mappings":"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","file":"ef2d16808e652482178c.chunk.js","sourcesContent":["import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport stateCardType from '../../common/entity/state_card_type.js';\n\nimport '../../components/ha-card.js';\n\n// just importing this now as shortcut to import correct state-card-*\nimport '../../state-summary/state-card-content.js';\n\n// Support for overriding type from attributes should be removed\n// Instead, it should be coded inside entity config.\n// stateCardType requires `hass` because we check if a service exists.\n// This should also be determined during runtime.\nfunction stateElement(hass, entityId, stateObj) {\n  if (!stateObj) {\n    return 'state-card-display';\n  } else if (stateObj.attributes && 'custom_ui_state_card' in stateObj.attributes) {\n    return stateObj.attributes.custom_ui_state_card;\n  }\n  return 'state-card-' + stateCardType(hass, stateObj);\n}\n\nclass HuiEntitiesCard extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      ha-card {\n        padding: 16px;\n      }\n      .state {\n        padding: 4px 0;\n      }\n      .header {\n        @apply --paper-font-headline;\n        /* overwriting line-height +8 because entity-toggle can be 40px height,\n           compensating this with reduced padding */\n        line-height: 40px;\n        color: var(--primary-text-color);\n        padding: 4px 0 12px;\n      }\n      .header .name {\n        @apply --paper-font-common-nowrap;\n      }\n    </style>\n\n    <ha-card>\n      <div class='header'>\n        <div class=\"name\">[[_computeTitle(config)]]</div>\n      </div>\n      <div id=\"states\"></div>\n    </ha-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      config: {\n        type: Object,\n        observer: '_configChanged',\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this._elements = [];\n  }\n\n  getCardSize() {\n    // +1 for the header\n    return 1 + (this.config ? this.config.entities.length : 0);\n  }\n\n  _computeTitle(config) {\n    return config.title;\n  }\n\n  _configChanged(config) {\n    const root = this.$.states;\n\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n\n    this._elements = [];\n\n    for (let i = 0; i < config.entities.length; i++) {\n      const entityId = config.entities[i];\n      const stateObj = this.hass.states[entityId];\n      const tag = stateElement(this.hass, entityId, stateObj);\n      const element = document.createElement(tag);\n      element.stateObj = stateObj;\n      element.hass = this.hass;\n      this._elements.push({ entityId, element });\n      root.appendChild(element);\n    }\n  }\n\n  _hassChanged(hass) {\n    for (let i = 0; i < this._elements.length; i++) {\n      const { entityId, element } = this._elements[i];\n      const stateObj = hass.states[entityId];\n      element.stateObj = stateObj;\n      element.hass = hass;\n    }\n  }\n}\ncustomElements.define('hui-entities-card', HuiEntitiesCard);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './hui-entities-card.js';\n\nimport computeStateDomain from '../../common/entity/compute_state_domain.js';\n\nclass HuiEntitiesCard extends PolymerElement {\n  static get template() {\n    return html`\n    <hui-entities-card\n      hass='[[hass]]'\n      config='[[_computeCardConfig(hass, config)]]'\n    ></hui-entities-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      config: Object,\n    };\n  }\n\n  getCardSize() {\n    // +1 for the header\n    return 1 + this._getEntities(this.hass, this.config.filter).length;\n  }\n\n  // Return a list of entities based on a filter.\n  _getEntities(hass, filter) {\n    const filters = [];\n\n    if (filter.domain) {\n      const domain = filter.domain;\n      filters.push(stateObj => computeStateDomain(stateObj) === domain);\n    }\n\n    if (filter.state) {\n      const state = filter.state;\n      filters.push(stateObj => stateObj.state === state);\n    }\n\n    return Object.values(hass.states)\n      .filter(stateObj => filters.every(filterFunc => filterFunc(stateObj)))\n      .map(stateObj => stateObj.entity_id);\n  }\n\n  _computeCardConfig(hass, config) {\n    return Object.assign({}, config.card_config || {}, {\n      entities: this._getEntities(hass, config.filter),\n    });\n  }\n}\ncustomElements.define('hui-entity-filter-card', HuiEntitiesCard);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './hui-entities-card.js';\nimport './hui-entity-filter-card.js';\n\nimport applyThemesOnElement from '../../common/dom/apply_themes_on_element.js';\n\nconst VALID_TYPES = ['entities', 'entity-filter'];\nconst CUSTOM_TYPE_PREFIX = 'custom:';\n\nfunction cardElement(type) {\n  if (VALID_TYPES.includes(type)) {\n    return `hui-${type}-card`;\n  } else if (type.startsWith(CUSTOM_TYPE_PREFIX)) {\n    return type.substr(CUSTOM_TYPE_PREFIX.length);\n  }\n  return null;\n}\n\nclass HaView extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n      :host {\n        display: block;\n        padding-top: 8px;\n        padding-right: 8px;\n        transform: translateZ(0);\n        position: relative;\n      }\n\n      #columns {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n      }\n\n      .column {\n        flex-basis: 0;\n        flex-grow: 1;\n        max-width: 500px;\n        overflow-x: hidden;\n      }\n\n      .column > * {\n        display: block;\n        margin-left: 8px;\n        margin-bottom: 8px;\n      }\n\n      @media (max-width: 500px) {\n        :host {\n          padding-right: 0;\n        }\n\n        .column > * {\n          margin-left: 0;\n        }\n      }\n\n      @media (max-width: 599px) {\n        .column {\n          max-width: 600px;\n        }\n      }\n      </style>\n      <div id='columns'></div>\n    `;\n  }\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n\n      columns: {\n        type: Number,\n        observer: '_configChanged',\n      },\n\n      config: {\n        type: Object,\n        observer: '_configChanged',\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this._elements = [];\n  }\n\n  _getElements(cards) {\n    const elements = [];\n\n    for (let i = 0; i < cards.length; i++) {\n      const cardConfig = cards[i];\n      const tag = cardElement(cardConfig.type);\n      if (!tag) {\n        // eslint-disable-next-line\n        console.error('Unknown type encountered:', cardConfig.type);\n        continue;\n      }\n      const element = document.createElement(tag);\n      element.config = cardConfig;\n      element.hass = this.hass;\n      elements.push(element);\n    }\n\n    return elements;\n  }\n\n  _configChanged() {\n    const root = this.$.columns;\n    const config = this.config;\n\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n\n    if (!config) {\n      this._elements = [];\n      return;\n    }\n\n    const elements = this._getElements(config.cards);\n\n    let columns = [];\n    const columnEntityCount = [];\n    for (let i = 0; i < this.columns; i++) {\n      columns.push([]);\n      columnEntityCount.push(0);\n    }\n\n    // Find column with < 5 entities, else column with lowest count\n    function getColumnIndex(size) {\n      let minIndex = 0;\n      for (let i = 0; i < columnEntityCount.length; i++) {\n        if (columnEntityCount[i] < 5) {\n          minIndex = i;\n          break;\n        }\n        if (columnEntityCount[i] < columnEntityCount[minIndex]) {\n          minIndex = i;\n        }\n      }\n\n      columnEntityCount[minIndex] += size;\n\n      return minIndex;\n    }\n\n    elements.forEach(el =>\n      columns[getColumnIndex(el.getCardSize())].push(el));\n\n    // Remove empty columns\n    columns = columns.filter(val => val.length > 0);\n\n    columns.forEach((column) => {\n      const columnEl = document.createElement('div');\n      columnEl.classList.add('column');\n      column.forEach(el => columnEl.appendChild(el));\n      root.appendChild(columnEl);\n    });\n\n    this._elements = elements;\n\n    if ('theme' in config) {\n      applyThemesOnElement(root, this.hass.themes, config.theme);\n    }\n  }\n\n  _hassChanged(hass) {\n    for (let i = 0; i < this._elements.length; i++) {\n      this._elements[i].hass = hass;\n    }\n  }\n}\n\ncustomElements.define('hui-view', HaView);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './hui-view.js';\n\nclass ExperimentalUI extends PolymerElement {\n  static get template() {\n    return html`\n    <style include='ha-style'>\n      app-header-layout {\n        height: 100%;\n      }\n    </style>\n    <app-header-layout>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>Experimental UI</div>\n          <paper-icon-button icon='hass:refresh' on-click='_fetchConfig'></paper-icon-button>\n        </app-toolbar>\n      </app-header>\n\n      <hui-view\n        hass='[[hass]]'\n        config='[[_curView]]'\n        columns='[[_columns]]'\n      ></hui-view>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      _columns: {\n        type: Number,\n        value: 1,\n      },\n\n      _config: {\n        type: Object,\n        value: null,\n        observer: '_configChanged',\n      },\n\n      _curView: Object\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._fetchConfig();\n    this._handleWindowChange = this._handleWindowChange.bind(this);\n    this.mqls = [300, 600, 900, 1200].map((width) => {\n      const mql = matchMedia(`(min-width: ${width}px)`);\n      mql.addListener(this._handleWindowChange);\n      return mql;\n    });\n    this._handleWindowChange();\n  }\n\n  _handleWindowChange() {\n    const matchColumns = this.mqls.reduce((cols, mql) => cols + mql.matches, 0);\n    // Do -1 column if the menu is docked and open\n    this._columns = Math.max(1, matchColumns - (!this.narrow && this.showMenu));\n  }\n\n  _fetchConfig() {\n    this.hass.connection.sendMessagePromise({ type: 'frontend/experimental_ui' })\n      .then((conf) => { this._config = conf.result; });\n  }\n\n  _configChanged(config) {\n    if (!config) return;\n    // Currently hardcode to first view.\n    this._curView = config.views[0];\n  }\n}\n\ncustomElements.define('ha-panel-experimental-ui', ExperimentalUI);\n"],"sourceRoot":""}