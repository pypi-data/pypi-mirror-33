{"version":3,"sources":["api/plotting.ts"],"names":[],"mappings":"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","file":"plotting.js","sourcesContent":["import {sprintf} from \"sprintf-js\"\nimport {Document} from \"../document\"\nimport * as embed from \"../embed\"\nimport {BOKEH_ROOT} from \"../embed\"\nimport * as models from \"./models\"\nimport {HasProps} from \"../core/has_props\"\nimport {Value, Field} from \"../core/vectorization\"\nimport {div} from \"../core/dom\"\nimport {Class} from \"../core/class\"\nimport {Location} from \"../core/enums\"\nimport {StringSpec} from \"../core/vectorization\"\nimport {startsWith} from \"../core/util/string\"\nimport {isEqual} from \"../core/util/eq\"\nimport {any, all, includes} from \"../core/util/array\"\nimport {extend, clone} from \"../core/util/object\"\nimport {isNumber, isString, isArray} from \"../core/util/types\"\n\nimport {Glyph, GlyphRenderer, Axis, Grid, Range, Scale, Tool, Plot, ColumnarDataSource} from \"./models\"\nimport {DOMView} from \"../core/dom_view\"\n\nimport {LayoutDOM} from \"models/layouts/layout_dom\"\nimport {Renderer} from \"models/renderers/renderer\"\nimport {Legend} from \"models/annotations/legend\"\n\nexport {gridplot} from \"./gridplot\"\n\nconst _default_tooltips: [string, string][] = [\n  [\"index\",         \"$index\"    ],\n  [\"data (x, y)\",   \"($x, $y)\"  ],\n  [\"screen (x, y)\", \"($sx, $sy)\"],\n]\n\nexport type ToolName =\n  \"pan\" | \"xpan\" | \"ypan\" |\n  \"xwheel_pan\" | \"ywheel_pan\" | \"wheel_zoom\" |\n  \"xwheel_zoom\" | \"ywheel_zoom\" |\n  \"zoom_in\" | \"xzoom_in\" | \"yzoom_in\" |\n  \"zoom_out\" | \"xzoom_out\" | \"yzoom_out\" |\n  \"click\" | \"tap\" |\n  \"box_select\" | \"xbox_select\" | \"ybox_select\" |\n  \"poly_select\" | \"lasso_select\" |\n  \"box_zoom\" | \"xbox_zoom\" | \"ybox_zoom\" |\n  \"crosshair\" | \"hover\" |\n  \"save\" |\n  \"undo\" | \"redo\" | \"reset\" |\n  \"help\"\n\nconst _default_tools: ToolName[] = [\"pan\", \"wheel_zoom\", \"box_zoom\", \"save\", \"reset\", \"help\"]\n\nconst _known_tools: {[key in ToolName]: () => Tool} = {\n  pan:          () => new models.PanTool({dimensions: 'both'}),\n  xpan:         () => new models.PanTool({dimensions: 'width'}),\n  ypan:         () => new models.PanTool({dimensions: 'height'}),\n  xwheel_pan:   () => new models.WheelPanTool({dimension: \"width\"}),\n  ywheel_pan:   () => new models.WheelPanTool({dimension: \"height\"}),\n  wheel_zoom:   () => new models.WheelZoomTool({dimensions: 'both'}),\n  xwheel_zoom:  () => new models.WheelZoomTool({dimensions: 'width'}),\n  ywheel_zoom:  () => new models.WheelZoomTool({dimensions: 'height'}),\n  zoom_in:      () => new models.ZoomInTool({dimensions: 'both'}),\n  xzoom_in:     () => new models.ZoomInTool({dimensions: 'width'}),\n  yzoom_in:     () => new models.ZoomInTool({dimensions: 'height'}),\n  zoom_out:     () => new models.ZoomOutTool({dimensions: 'both'}),\n  xzoom_out:    () => new models.ZoomOutTool({dimensions: 'width'}),\n  yzoom_out:    () => new models.ZoomOutTool({dimensions: 'height'}),\n  click:        () => new models.TapTool({behavior: \"inspect\"}),\n  tap:          () => new models.TapTool(),\n  crosshair:    () => new models.CrosshairTool(),\n  box_select:   () => new models.BoxSelectTool(),\n  xbox_select:  () => new models.BoxSelectTool({dimensions: 'width'}),\n  ybox_select:  () => new models.BoxSelectTool({dimensions: 'height'}),\n  poly_select:  () => new models.PolySelectTool(),\n  lasso_select: () => new models.LassoSelectTool(),\n  box_zoom:     () => new models.BoxZoomTool({dimensions: 'both'}),\n  xbox_zoom:    () => new models.BoxZoomTool({dimensions: 'width'}),\n  ybox_zoom:    () => new models.BoxZoomTool({dimensions: 'height'}),\n  hover:        () => new models.HoverTool({tooltips: _default_tooltips}),\n  save:         () => new models.SaveTool(),\n  undo:         () => new models.UndoTool(),\n  redo:         () => new models.RedoTool(),\n  reset:        () => new models.ResetTool(),\n  help:         () => new models.HelpTool(),\n}\n\nconst _default_color = \"#1f77b4\"\n\nconst _default_alpha = 1.0\n\nfunction _with_default<T>(value: T | undefined, default_value: T): T {\n  return value === undefined ? default_value : value\n}\n\nexport type AxisType = \"auto\" | \"linear\" | \"datetime\" | \"log\" | null\n\nexport interface FigureAttrs {\n  width?: number\n  height?: number\n  x_range?: Range | [number, number] | string[]\n  y_range?: Range | [number, number] | string[]\n  x_axis_type?: AxisType\n  y_axis_type?: AxisType\n  x_axis_label?: string\n  y_axis_label?: string\n  x_minor_ticks?: number | \"auto\"\n  y_minor_ticks?: number | \"auto\"\n  tools?: (Tool | ToolName)[] | string\n}\n\nexport class Figure extends Plot {\n\n  get xgrid(): Grid {\n    return this.renderers.filter((r: Renderer): r is Grid => r instanceof Grid && r.dimension === 0)[0] // TODO\n  }\n  get ygrid(): Grid {\n    return this.renderers.filter((r: Renderer): r is Grid => r instanceof Grid && r.dimension === 1)[0] // TODO\n  }\n\n  get xaxis(): Axis {\n    return this.below.concat(this.above).filter((r: Renderer): r is Axis => r instanceof Axis)[0] // TODO\n  }\n  get yaxis(): Axis {\n    return this.left.concat(this.right).filter((r: Renderer): r is Axis => r instanceof Axis)[0] // TODO\n  }\n\n  protected _legend: Legend\n\n  constructor(attributes: any = {}) {\n    const attrs = clone(attributes)\n\n    const tools = _with_default(attrs.tools, _default_tools)\n    delete attrs.tools\n\n    attrs.x_range = Figure._get_range(attrs.x_range)\n    attrs.y_range = Figure._get_range(attrs.y_range)\n\n    const x_axis_type = _with_default(attrs.x_axis_type, \"auto\")\n    const y_axis_type = _with_default(attrs.y_axis_type, \"auto\")\n    delete attrs.x_axis_type\n    delete attrs.y_axis_type\n\n    attrs.x_scale = Figure._get_scale(attrs.x_range, x_axis_type)\n    attrs.y_scale = Figure._get_scale(attrs.y_range, y_axis_type)\n\n    const x_minor_ticks = attrs.x_minor_ticks != null ? attrs.x_minor_ticks : \"auto\"\n    const y_minor_ticks = attrs.y_minor_ticks != null ? attrs.y_minor_ticks : \"auto\"\n    delete attrs.x_minor_ticks\n    delete attrs.y_minor_ticks\n\n    const x_axis_location = attrs.x_axis_location != null ? attrs.x_axis_location : \"below\"\n    const y_axis_location = attrs.y_axis_location != null ? attrs.y_axis_location : \"left\"\n    delete attrs.x_axis_location\n    delete attrs.y_axis_location\n\n    const x_axis_label = attrs.x_axis_label != null ? attrs.x_axis_label : \"\"\n    const y_axis_label = attrs.y_axis_label != null ? attrs.y_axis_label : \"\"\n    delete attrs.x_axis_label\n    delete attrs.y_axis_label\n\n    if (attrs.width !== undefined) {\n      if (attrs.plot_width === undefined) {\n        attrs.plot_width = attrs.width\n      } else {\n        throw new Error(\"both 'width' and 'plot_width' can't be given at the same time\")\n      }\n      delete attrs.width\n    }\n\n    if (attrs.height !== undefined) {\n      if (attrs.plot_height === undefined) {\n        attrs.plot_height = attrs.height\n      } else {\n        throw new Error(\"both 'height' and 'plot_height' can't be given at the same time\")\n      }\n      delete attrs.height\n    }\n\n    super(attrs)\n\n    this._process_axis_and_grid(x_axis_type, x_axis_location, x_minor_ticks, x_axis_label, attrs.x_range, 0)\n    this._process_axis_and_grid(y_axis_type, y_axis_location, y_minor_ticks, y_axis_label, attrs.y_range, 1)\n\n    this.add_tools(...this._process_tools(tools))\n\n    this._legend = new Legend({plot: this, items: []})\n    this.add_renderers(this._legend)\n  }\n\n  annular_wedge(...args: any[]): GlyphRenderer     { return this._glyph(models.AnnularWedge, \"x,y,inner_radius,outer_radius,start_angle,end_angle\", args); }\n  annulus(...args: any[]): GlyphRenderer           { return this._glyph(models.Annulus,      \"x,y,inner_radius,outer_radius\",                       args); }\n  arc(...args: any[]): GlyphRenderer               { return this._glyph(models.Arc,          \"x,y,radius,start_angle,end_angle\",                    args); }\n  bezier(...args: any[]): GlyphRenderer            { return this._glyph(models.Bezier,       \"x0,y0,x1,y1,cx0,cy0,cx1,cy1\",                         args); }\n  circle(...args: any[]): GlyphRenderer            { return this._glyph(models.Circle,       \"x,y\",                                                 args); }\n  ellipse(...args: any[]): GlyphRenderer           { return this._glyph(models.Ellipse,      \"x,y,width,height\",                                    args); }\n  image(...args: any[]): GlyphRenderer             { return this._glyph(models.Image,        \"color_mapper,image,rows,cols,x,y,dw,dh\",              args); }\n  image_rgba(...args: any[]): GlyphRenderer        { return this._glyph(models.ImageRGBA,    \"image,rows,cols,x,y,dw,dh\",                           args); }\n  image_url(...args: any[]): GlyphRenderer         { return this._glyph(models.ImageURL,     \"url,x,y,w,h\",                                         args); }\n  line(...args: any[]): GlyphRenderer              { return this._glyph(models.Line,         \"x,y\",                                                 args); }\n  multi_line(...args: any[]): GlyphRenderer        { return this._glyph(models.MultiLine,    \"xs,ys\",                                               args); }\n  oval(...args: any[]): GlyphRenderer              { return this._glyph(models.Oval,         \"x,y,width,height\",                                    args); }\n  patch(...args: any[]): GlyphRenderer             { return this._glyph(models.Patch,        \"x,y\",                                                 args); }\n  patches(...args: any[]): GlyphRenderer           { return this._glyph(models.Patches,      \"xs,ys\",                                               args); }\n  quad(...args: any[]): GlyphRenderer              { return this._glyph(models.Quad,         \"left,right,bottom,top\",                               args); }\n  quadratic(...args: any[]): GlyphRenderer         { return this._glyph(models.Quadratic,    \"x0,y0,x1,y1,cx,cy\",                                   args); }\n  ray(...args: any[]): GlyphRenderer               { return this._glyph(models.Ray,          \"x,y,length\",                                          args); }\n  rect(...args: any[]): GlyphRenderer              { return this._glyph(models.Rect,         \"x,y,width,height\",                                    args); }\n  segment(...args: any[]): GlyphRenderer           { return this._glyph(models.Segment,      \"x0,y0,x1,y1\",                                         args); }\n  text(...args: any[]): GlyphRenderer              { return this._glyph(models.Text,         \"x,y,text\",                                            args); }\n  wedge(...args: any[]): GlyphRenderer             { return this._glyph(models.Wedge,        \"x,y,radius,start_angle,end_angle\",                    args); }\n\n  asterisk(...args: any[]): GlyphRenderer          { return this._marker(models.Asterisk,         args); }\n  circle_cross(...args: any[]): GlyphRenderer      { return this._marker(models.CircleCross,      args); }\n  circle_x(...args: any[]): GlyphRenderer          { return this._marker(models.CircleX,          args); }\n  cross(...args: any[]): GlyphRenderer             { return this._marker(models.Cross,            args); }\n  diamond(...args: any[]): GlyphRenderer           { return this._marker(models.Diamond,          args); }\n  diamond_cross(...args: any[]): GlyphRenderer     { return this._marker(models.DiamondCross,     args); }\n  inverted_triangle(...args: any[]): GlyphRenderer { return this._marker(models.InvertedTriangle, args); }\n  square(...args: any[]): GlyphRenderer            { return this._marker(models.Square,           args); }\n  square_cross(...args: any[]): GlyphRenderer      { return this._marker(models.SquareCross,      args); }\n  square_x(...args: any[]): GlyphRenderer          { return this._marker(models.SquareX,          args); }\n  triangle(...args: any[]): GlyphRenderer          { return this._marker(models.Triangle,         args); }\n  x(...args: any[]): GlyphRenderer                 { return this._marker(models.X,                args); }\n\n  _pop_colors_and_alpha(cls: Class<HasProps>, attrs: {[key: string]: any}, prefix: string = \"\",\n                        default_color: string = _default_color, default_alpha: number = _default_alpha): {[key: string]: any} {\n    const result: {[key: string]: any} = {}\n\n    const color = _with_default(attrs[prefix + \"color\"], default_color)\n    const alpha = _with_default(attrs[prefix + \"alpha\"], default_alpha)\n\n    delete attrs[prefix + \"color\"]\n    delete attrs[prefix + \"alpha\"]\n\n    const _update_with = function(name: string, default_value: any): void {\n      if (cls.prototype.props[name] != null) {\n        result[name] = _with_default(attrs[prefix + name], default_value)\n        delete attrs[prefix + name]\n      }\n    }\n\n    _update_with(\"fill_color\", color)\n    _update_with(\"line_color\", color)\n    _update_with(\"text_color\", \"black\")\n\n    _update_with(\"fill_alpha\", alpha)\n    _update_with(\"line_alpha\", alpha)\n    _update_with(\"text_alpha\", alpha)\n\n    return result\n  }\n\n  _find_uniq_name(data: {[key: string]: any[]}, name: string): string {\n    let i = 1\n    while (true) {\n      const new_name = `${name}__${i}`\n      if (data[new_name] != null) {\n        i += 1\n      } else {\n        return new_name\n      }\n    }\n  }\n\n  _fixup_values(cls: Class<HasProps>, data: {[key: string]: any}, attrs: {[key: string]: any}): void {\n    for (const name in attrs) {\n      const value = attrs[name]\n      const prop = cls.prototype.props[name]\n\n      if (prop != null) {\n        if (prop.type.prototype.dataspec) {\n          if (value != null) {\n            if (isArray(value)) {\n              let field\n              if (data[name] != null) {\n                if (data[name] !== value) {\n                  field = this._find_uniq_name(data, name)\n                  data[field] = value\n                } else {\n                  field = name\n                }\n              } else {\n                field = name\n                data[field] = value\n              }\n\n              attrs[name] = { field }\n            } else if (isNumber(value) || isString(value)) { // or Date?\n              attrs[name] = { value }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _glyph(cls: Class<Glyph>, params_string: string, args: any): GlyphRenderer {\n    const params = params_string.split(\",\")\n\n    let attrs\n    if (args.length === 1) {\n      [attrs] = args\n      attrs = clone(attrs)\n    } else {\n      attrs = clone(args[args.length - 1])\n\n      for (let i = 0; i < params.length; i++) {\n        const param = params[i]\n        attrs[param] = args[i]\n      }\n    }\n\n    const legend = this._process_legend(attrs.legend, attrs.source)\n    delete attrs.legend\n\n    const has_sglyph = any(Object.keys(attrs), key => startsWith(key, \"selection_\"))\n    const has_hglyph = any(Object.keys(attrs), key => startsWith(key, \"hover_\"))\n\n    const glyph_ca   = this._pop_colors_and_alpha(cls, attrs)\n    const nsglyph_ca = this._pop_colors_and_alpha(cls, attrs, \"nonselection_\", undefined, 0.1)\n    const sglyph_ca  = has_sglyph ? this._pop_colors_and_alpha(cls, attrs, \"selection_\") : {}\n    const hglyph_ca  = has_hglyph ? this._pop_colors_and_alpha(cls, attrs, \"hover_\") : {}\n\n    const source = attrs.source != null ? attrs.source : new models.ColumnDataSource()\n    const data = clone(source.data)\n    delete attrs.source\n\n    this._fixup_values(cls, data,   glyph_ca)\n    this._fixup_values(cls, data, nsglyph_ca)\n    this._fixup_values(cls, data,  sglyph_ca)\n    this._fixup_values(cls, data,  hglyph_ca)\n\n    this._fixup_values(cls, data, attrs)\n\n    source.data = data\n\n    const _make_glyph = (cls: Class<Glyph>, attrs: any, extra_attrs: any) => {\n      return new cls(extend({}, attrs, extra_attrs))\n    }\n\n    const glyph   = _make_glyph(cls, attrs,   glyph_ca)\n    const nsglyph = _make_glyph(cls, attrs, nsglyph_ca)\n    const sglyph  = has_sglyph ? _make_glyph(cls, attrs, sglyph_ca) : undefined\n    const hglyph  = has_hglyph ? _make_glyph(cls, attrs, hglyph_ca) : undefined\n\n    const glyph_renderer = new GlyphRenderer({\n      data_source:        source,\n      glyph:              glyph,\n      nonselection_glyph: nsglyph,\n      selection_glyph:    sglyph,\n      hover_glyph:        hglyph,\n    })\n\n    if (legend != null) {\n      this._update_legend(legend, glyph_renderer)\n    }\n\n    this.add_renderers(glyph_renderer)\n    return glyph_renderer\n  }\n\n  _marker(cls: Class<Glyph>, args: any): GlyphRenderer {\n    return this._glyph(cls, \"x,y\", args)\n  }\n\n  static _get_range(range?: Range | [number, number] | string[]): Range {\n    if (range == null) {\n      return new models.DataRange1d()\n    }\n    if (range instanceof models.Range) {\n      return range\n    }\n    if (isArray(range)) {\n      if (all(range, isString)) {\n        const factors = range as string[]\n        return new models.FactorRange({factors: factors})\n      }\n      if (range.length == 2) {\n        const [start, end] = range as [number, number]\n        return new models.Range1d({start, end})\n      }\n    }\n    throw new Error(`unable to determine proper range for: '${range}'`)\n  }\n\n  static _get_scale(range_input: Range, axis_type: AxisType): Scale {\n    if (range_input instanceof models.DataRange1d ||\n        range_input instanceof models.Range1d) {\n      switch (axis_type) {\n        case null:\n        case \"auto\":\n        case \"linear\":\n        case \"datetime\":\n          return new models.LinearScale()\n        case \"log\":\n          return new models.LogScale()\n      }\n    }\n\n    if (range_input instanceof models.FactorRange) {\n      return new models.CategoricalScale()\n    }\n\n    throw new Error(`unable to determine proper scale for: '${range_input}'`)\n  }\n\n  _process_axis_and_grid(axis_type: AxisType, axis_location: Location,\n                         minor_ticks: number | \"auto\" | undefined, axis_label: string, rng: Range, dim: 0 | 1): void {\n    const axiscls = this._get_axis_class(axis_type, rng)\n    if (axiscls != null) {\n      if (axiscls === models.LogAxis) {\n        if (dim === 0) {\n          this.x_scale = new models.LogScale()\n        } else {\n          this.y_scale = new models.LogScale()\n        }\n      }\n\n      const axis = new axiscls()\n\n      if (axis.ticker instanceof models.ContinuousTicker) {\n        axis.ticker.num_minor_ticks = this._get_num_minor_ticks(axiscls, minor_ticks)\n      }\n      if (axis_label.length !== 0) {\n        axis.axis_label = axis_label\n      }\n\n      const grid = new models.Grid({dimension: dim, ticker: axis.ticker})\n\n      if (axis_location !== null) {\n        this.add_layout(axis, axis_location)\n      }\n      this.add_layout(grid)\n    }\n  }\n\n  _get_axis_class(axis_type: AxisType, range: Range): Class<Axis> | null {\n    switch (axis_type) {\n      case null:\n        return null\n      case \"linear\":\n        return models.LinearAxis\n      case \"log\":\n        return models.LogAxis\n      case \"datetime\":\n        return models.DatetimeAxis\n      case \"auto\":\n        if (range instanceof models.FactorRange)\n          return models.CategoricalAxis\n        else\n          return models.LinearAxis // TODO: return models.DatetimeAxis (Date type)\n      default:\n        throw new Error(\"shouldn't have happened\")\n    }\n  }\n\n  _get_num_minor_ticks(axis_class: Class<Axis>, num_minor_ticks?: number | \"auto\"): number {\n    if (isNumber(num_minor_ticks)) {\n      if (num_minor_ticks <= 1) {\n        throw new Error(\"num_minor_ticks must be > 1\")\n      }\n      return num_minor_ticks\n    }\n    if (num_minor_ticks == null) {\n      return 0\n    }\n    if (num_minor_ticks === 'auto') {\n      if (axis_class === models.LogAxis) {\n        return 10\n      }\n      return 5\n    }\n    throw new Error(\"shouldn't have happened\")\n  }\n\n  _process_tools(tools: (Tool | string)[] | string): Tool[] {\n    if (isString(tools))\n      tools = tools.split(/\\s*,\\s*/).filter((tool) => tool.length > 0)\n\n    function isToolName(tool: string): tool is ToolName {\n      return _known_tools.hasOwnProperty(tool)\n    }\n\n    const objs = (() => {\n      const result = []\n      for (const tool of tools) {\n        if (isString(tool)) {\n          if (isToolName(tool))\n            result.push(_known_tools[tool]())\n          else\n            throw new Error(`unknown tool type: ${tool}`)\n        } else\n          result.push(tool)\n      }\n      return result\n    })()\n\n    return objs\n  }\n\n  _process_legend(legend: string | StringSpec | undefined, source: ColumnarDataSource): StringSpec | null {\n    let legend_item_label = null\n    if (legend != null) {\n      if (isString(legend)) {\n        legend_item_label = { value: legend }\n        if ((source != null) && (source.column_names != null)) {\n          if (includes(source.column_names, legend)) {\n            legend_item_label = { field: legend }\n          }\n        }\n      } else {\n        legend_item_label = legend\n      }\n    }\n    return legend_item_label\n  }\n\n  _update_legend(legend_item_label: StringSpec, glyph_renderer: GlyphRenderer): void {\n    let added = false\n    for (const item of this._legend.items) {\n      if (item.label != null && isEqual(item.label, legend_item_label)) {\n        // XXX: remove this when vectorable properties are refined\n        const label = item.label as Value<string> | Field\n        if (\"value\" in label) {\n          item.renderers.push(glyph_renderer)\n          added = true\n          break\n        }\n        if (\"field\" in label && glyph_renderer.data_source == item.renderers[0].data_source) {\n          item.renderers.push(glyph_renderer)\n          added = true\n          break\n        }\n      }\n    }\n    if (!added) {\n      const new_item = new models.LegendItem({ label: legend_item_label, renderers: [glyph_renderer] })\n      this._legend.items.push(new_item)\n    }\n  }\n}\n\nexport function figure(attributes: any = {}) {\n  return new Figure(attributes)\n}\n\ndeclare var $: any\n\nexport const show = function(obj: LayoutDOM | LayoutDOM[], target?: HTMLElement | string): {[key: string]: DOMView} {\n  const doc = new Document()\n\n  for (const item of isArray(obj) ? obj : [obj])\n    doc.add_root(item)\n\n  let element: HTMLElement\n  if (target == null) {\n    element = document.body\n  } else if (isString(target)) {\n    const found = document.querySelector(target)\n    if (found != null && found instanceof HTMLElement)\n      element = found\n    else\n      throw new Error(`'${target}' selector didn't match any elements`)\n  } else if (target instanceof HTMLElement) {\n    element = target\n  } else if (typeof $ !== 'undefined' && (target as any) instanceof $) {\n    element = (target as any)[0]\n  } else {\n    throw new Error(\"target should be HTMLElement, string selector, $ or null\")\n  }\n\n  const root = div({class: BOKEH_ROOT})\n  element.appendChild(root)\n\n  return embed.add_document_standalone(doc, root)\n}\n\nexport function color(r: number, g: number, b: number): string {\n  return sprintf(\"#%02x%02x%02x\", r, g, b)\n}\n"]}