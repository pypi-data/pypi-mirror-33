{"version":3,"sources":["models/widgets/pretext.ts"],"names":[],"mappings":";;;AAAA,mCAA2C;AAC3C,gCAA4B;AAE5B;IAAiC,uCAAU;IAA3C;;IAQA,CAAC;IALC,4BAAM,GAAN;QACE,iBAAM,MAAM,WAAE,CAAA;QACd,IAAM,OAAO,GAAG,SAAG,CAAC,EAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,EAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QACjE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;IACpC,CAAC;IACH,kBAAC;AAAD,CARA,AAQC,CARgC,mBAAU,GAQ1C;AARY,kCAAW;AAkBxB;IAA6B,mCAAM;IAIjC,iBAAY,KAA8B;eACxC,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,iBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAA;QAC/B,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,WAAW,CAAA;IAC3C,CAAC;IACH,cAAC;AAAD,CAZA,AAYC,CAZ4B,eAAM,GAYlC;AAZY,0BAAO;AAcpB,OAAO,CAAC,SAAS,EAAE,CAAA","file":"pretext.js","sourcesContent":["import {Markup, MarkupView} from \"./markup\"\nimport {pre} from \"core/dom\"\n\nexport class PreTextView extends MarkupView {\n  model: PreText\n\n  render(): void {\n    super.render()\n    const content = pre({style: {overflow: \"auto\"}}, this.model.text)\n    this.markupEl.appendChild(content)\n  }\n}\n\nexport namespace PreText {\n  export interface Attrs extends Markup.Attrs {}\n\n  export interface Props extends Markup.Props {}\n}\n\nexport interface PreText extends PreText.Attrs {}\n\nexport class PreText extends Markup {\n\n  properties: PreText.Props\n\n  constructor(attrs?: Partial<PreText.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"PreText\"\n    this.prototype.default_view = PreTextView\n  }\n}\n\nPreText.initClass()\n"]}