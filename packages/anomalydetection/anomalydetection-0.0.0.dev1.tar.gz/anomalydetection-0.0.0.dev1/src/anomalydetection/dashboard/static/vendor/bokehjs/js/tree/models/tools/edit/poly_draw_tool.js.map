{"version":3,"sources":["models/tools/edit/poly_draw_tool.ts"],"names":[],"mappings":"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","file":"poly_draw_tool.js","sourcesContent":["import {Keys} from \"core/dom\"\nimport {UIEvent, GestureEvent, TapEvent, MoveEvent, KeyEvent} from \"core/ui_events\"\nimport * as p from \"core/properties\"\nimport {MultiLine} from \"../../glyphs/multi_line\"\nimport {Patches} from \"../../glyphs/patches\"\nimport {GlyphRenderer} from \"../../renderers/glyph_renderer\"\nimport {EditTool, EditToolView} from \"./edit_tool\"\n\nexport interface HasPolyGlyph {\n  glyph: MultiLine | Patches\n}\n\nexport class PolyDrawToolView extends EditToolView {\n  model: PolyDrawTool\n  _drawing: boolean = false\n\n  _tap(ev: TapEvent): void {\n    if (this._drawing) {\n      this._draw(ev, 'add');\n      this.model.renderers[0].data_source.properties.data.change.emit();\n    } else {\n      const append = ev.shiftKey\n      this._select_event(ev, append, this.model.renderers);\n    }\n  }\n\n  _draw(ev: UIEvent, mode: string): void {\n    const renderer = this.model.renderers[0];\n    const point = this._map_drag(ev.sx, ev.sy, renderer);\n    if (point == null) {\n      return;\n    }\n    const [x, y] = point;\n    const ds = renderer.data_source;\n    const glyph: any = renderer.glyph;\n    const [xkey, ykey] = [glyph.xs.field, glyph.ys.field];\n    if (mode == 'new') {\n      if (xkey) ds.get_array(xkey).push([x, x])\n      if (ykey) ds.get_array(ykey).push([y, y])\n      this._pad_empty_columns(ds, [xkey, ykey]);\n    } else if (mode == 'edit') {\n      if (xkey) {\n        const xs = ds.data[xkey][ds.data[xkey].length-1];\n        xs[xs.length-1] = x;\n      }\n      if (ykey) {\n        const ys = ds.data[ykey][ds.data[ykey].length-1];\n        ys[ys.length-1] = y;\n      }\n    } else if (mode == 'add') {\n      if (xkey) {\n        const xidx = ds.data[xkey].length-1;\n        const xs = ds.get_array<number[]>(xkey)[xidx]\n        const nx = xs[xs.length-1];\n        xs[xs.length-1] = x;\n        xs.push(nx);\n      }\n      if (ykey) {\n        const yidx = ds.data[ykey].length-1;\n        const ys = ds.get_array<number[]>(ykey)[yidx]\n        const ny = ys[ys.length-1];\n        ys[ys.length-1] = y;\n        ys.push(ny);\n      }\n    }\n    ds.change.emit()\n  }\n\n  _doubletap(ev: TapEvent): void {\n    if (!this.model.active) { return; }\n    if (this._drawing) {\n      this._drawing = false;\n      this._draw(ev, 'edit');\n    } else {\n      this._drawing = true;\n      this._draw(ev, 'new');\n    }\n    this.model.renderers[0].data_source.properties.data.change.emit();\n  }\n\n  _move(ev: MoveEvent): void {\n    if (this._drawing) {\n      this._draw(ev, 'edit');\n    }\n  }\n\n  _remove(): void {\n    const renderer = this.model.renderers[0];\n    const ds = renderer.data_source;\n    const glyph: any = renderer.glyph;\n    const [xkey, ykey] = [glyph.xs.field, glyph.ys.field];\n    if (xkey) {\n      const xidx = ds.data[xkey].length-1;\n      const xs = ds.get_array<number[]>(xkey)[xidx]\n      xs.splice(xs.length-1, 1)\n    }\n    if (ykey) {\n      const yidx = ds.data[ykey].length-1;\n      const ys = ds.get_array<number[]>(ykey)[yidx];\n      ys.splice(ys.length-1, 1)\n    }\n    ds.change.emit()\n    ds.properties.data.change.emit();\n  }\n\n  _keyup(ev: KeyEvent): void {\n    if (!this.model.active || !this._mouse_in_frame) { return; }\n    for (const renderer of this.model.renderers) {\n      if (ev.keyCode === Keys.Backspace) {\n        this._delete_selected(renderer);\n      } else if (ev.keyCode == Keys.Esc) {\n        // Type once selection_manager is typed\n        if (this._drawing) {\n          this._remove();\n          this._drawing = false;\n        }\n        const cds = renderer.data_source;\n        cds.selection_manager.clear();\n      }\n    }\n  }\n\n  _pan_start(ev: GestureEvent): void {\n    if (!this.model.drag) { return; }\n    this._select_event(ev, true, this.model.renderers);\n    this._basepoint = [ev.sx, ev.sy];\n  }\n\n  _pan(ev: GestureEvent): void {\n    if (this._basepoint == null || !this.model.drag) { return; }\n    const [bx, by] = this._basepoint;\n    // Process polygon/line dragging\n    for (const renderer of this.model.renderers) {\n      const basepoint = this._map_drag(bx, by, renderer);\n      const point = this._map_drag(ev.sx, ev.sy, renderer);\n      if (point == null || basepoint == null) {\n        continue;\n      }\n\n      const ds = renderer.data_source;\n      // Type once dataspecs are typed\n      const glyph: any = renderer.glyph;\n      const [xkey, ykey] = [glyph.xs.field, glyph.ys.field];\n      if (!xkey && !ykey) { continue; }\n      const [x, y] = point;\n      const [px, py] = basepoint;\n      const [dx, dy] = [x-px, y-py];\n      for (const index of ds.selected.indices) {\n        let length, xs, ys;\n        if (xkey) xs = ds.data[xkey][index]\n        if (ykey) {\n          ys = ds.data[ykey][index];\n          length = ys.length;\n        } else {\n          length = xs.length;\n        }\n        for (let i = 0; i < length; i++) {\n          if (xs) { xs[i] += dx; }\n          if (ys) { ys[i] += dy; }\n        }\n      }\n      ds.change.emit();\n    }\n    this._basepoint = [ev.sx, ev.sy];\n  }\n\n  _pan_end(ev: GestureEvent): void {\n    if (!this.model.drag) { return; }\n    this._pan(ev);\n    for (const renderer of this.model.renderers) {\n      renderer.data_source.selected.indices = [];\n      renderer.data_source.properties.data.change.emit();\n    }\n    this._basepoint = null;\n  }\n\n  deactivate(): void {\n    if (this._drawing) {\n      this._remove();\n      this._drawing = false;\n    }\n  }\n}\n\nexport namespace PolyDrawTool {\n  export interface Attrs extends EditTool.Attrs {\n    drag: boolean\n    renderers: (GlyphRenderer & HasPolyGlyph)[]\n  }\n\n  export interface Props extends EditTool.Props {}\n\n}\n\nexport interface PolyDrawTool extends PolyDrawTool.Attrs {}\n\nexport class PolyDrawTool extends EditTool {\n\n  properties: PolyDrawTool.Props\n\n  renderers: (GlyphRenderer & HasPolyGlyph)[]\n\n  constructor(attrs?: Partial<PolyDrawTool.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"PolyDrawTool\"\n    this.prototype.default_view = PolyDrawToolView\n\n    this.define({\n      drag: [ p.Bool, true ],\n    })\n  }\n\n  tool_name = \"Polygon Draw Tool\"\n  icon = \"bk-tool-icon-poly-draw\"\n  event_type = [\"pan\" as \"pan\", \"tap\" as \"tap\", \"move\" as \"move\"]\n  default_order = 3\n}\nPolyDrawTool.initClass()\n"]}