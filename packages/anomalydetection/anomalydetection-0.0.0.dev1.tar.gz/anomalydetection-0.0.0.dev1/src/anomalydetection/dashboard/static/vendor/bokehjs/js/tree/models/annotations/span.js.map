{"version":3,"sources":["models/annotations/span.ts"],"names":[],"mappings":"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","file":"span.js","sourcesContent":["import {Annotation, AnnotationView} from \"./annotation\"\nimport {Scale} from \"../scales/scale\"\nimport {LineMixinScalar} from \"core/property_mixins\"\nimport {Line} from \"core/visuals\"\nimport {SpatialUnits, RenderMode, Dimension} from \"core/enums\"\nimport {show, hide} from \"core/dom\"\nimport {Color} from \"core/types\"\nimport * as p from \"core/properties\"\nimport {ViewTransform} from \"core/layout/layout_canvas\"\n\nexport class SpanView extends AnnotationView {\n  model: Span\n  visuals: Span.Visuals\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.plot_view.canvas_overlays.appendChild(this.el)\n    this.el.style.position = \"absolute\"\n    hide(this.el)\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    if (this.model.for_hover)\n      this.connect(this.model.properties.computed_location.change, () => this._draw_span())\n    else {\n      if (this.model.render_mode == 'canvas') {\n        this.connect(this.model.change, () => this.plot_view.request_render())\n        this.connect(this.model.properties.location.change, () => this.plot_view.request_render())\n      } else {\n        this.connect(this.model.change, () => this.render())\n        this.connect(this.model.properties.location.change, () => this._draw_span())\n      }\n    }\n  }\n\n  render(): void {\n    if (!this.model.visible && this.model.render_mode == 'css')\n      hide(this.el)\n\n    if (!this.model.visible)\n      return\n\n    this._draw_span()\n  }\n\n  protected _draw_span(): void {\n    const loc = this.model.for_hover ? this.model.computed_location : this.model.location\n    if (loc == null) {\n      hide(this.el)\n      return\n    }\n\n    const {frame} = this.plot_view\n\n    const xscale = frame.xscales[this.model.x_range_name]\n    const yscale = frame.yscales[this.model.y_range_name]\n\n    const _calc_dim = (scale: Scale, view: ViewTransform): number => {\n      if (this.model.for_hover)\n        return this.model.computed_location!\n      else {\n        if (this.model.location_units == 'data')\n          return scale.compute(loc)\n        else\n          return view.compute(loc)\n      }\n    }\n\n    let height: number, sleft: number, stop: number, width: number\n    if (this.model.dimension == 'width') {\n      stop = _calc_dim(yscale, frame.yview)\n      sleft = frame._left.value\n      width = frame._width.value\n      height = this.model.properties.line_width.value()\n    } else {\n      stop = frame._top.value\n      sleft = _calc_dim(xscale, frame.xview)\n      width = this.model.properties.line_width.value()\n      height = frame._height.value\n    }\n\n    if (this.model.render_mode == \"css\") {\n      this.el.style.top = `${stop}px`\n      this.el.style.left = `${sleft}px`\n      this.el.style.width = `${width}px`\n      this.el.style.height = `${height}px`\n      this.el.style.backgroundColor = this.model.properties.line_color.value()\n      this.el.style.opacity = this.model.properties.line_alpha.value()\n      show(this.el)\n    } else if (this.model.render_mode == \"canvas\") {\n      const {ctx} = this.plot_view.canvas_view\n      ctx.save()\n\n      ctx.beginPath()\n      this.visuals.line.set_value(ctx)\n      ctx.moveTo(sleft, stop)\n      if (this.model.dimension == \"width\") {\n        ctx.lineTo(sleft + width, stop)\n      } else {\n        ctx.lineTo(sleft, stop + height)\n      }\n      ctx.stroke()\n\n      ctx.restore()\n    }\n  }\n}\n\nexport namespace Span {\n  export interface Mixins extends LineMixinScalar {}\n\n  export interface Attrs extends Annotation.Attrs, Mixins {\n    render_mode: RenderMode\n    x_range_name: string\n    y_range_name: string\n    location: number | null\n    location_units: SpatialUnits\n    dimension: Dimension\n    for_hover: boolean\n    computed_location: number | null\n  }\n\n  export interface Props extends Annotation.Props {\n    render_mode: p.Property<RenderMode>\n    x_range_name: p.Property<string>\n    y_range_name: p.Property<string>\n    location: p.Property<number | null>\n    location_units: p.Property<SpatialUnits>\n    dimension: p.Property<Dimension>\n    for_hover: p.Property<boolean>\n    computed_location: p.Property<number | null>\n\n    line_color: p.Property<Color>\n    line_width: p.Property<number>\n    line_alpha: p.Property<number>\n  }\n\n  export type Visuals = Annotation.Visuals & {line: Line}\n}\n\nexport interface Span extends Span.Attrs {}\n\nexport class Span extends Annotation {\n\n  properties: Span.Props\n\n  constructor(attrs?: Partial<Span.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Span'\n    this.prototype.default_view = SpanView\n\n    this.mixins(['line'])\n\n    this.define({\n      render_mode:    [ p.RenderMode,   'canvas'  ],\n      x_range_name:   [ p.String,       'default' ],\n      y_range_name:   [ p.String,       'default' ],\n      location:       [ p.Number,       null      ],\n      location_units: [ p.SpatialUnits, 'data'    ],\n      dimension:      [ p.Dimension,    'width'   ],\n    })\n\n    this.override({\n      line_color: 'black',\n    })\n\n    this.internal({\n      for_hover: [ p.Boolean, false ],\n      computed_location: [ p.Number, null ], // absolute screen coordinate\n    })\n  }\n}\nSpan.initClass()\n"]}