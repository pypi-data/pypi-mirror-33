{"version":3,"sources":["models/glyphs/quad.ts"],"names":[],"mappings":"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","file":"quad.js","sourcesContent":["import {Box, BoxView, BoxData} from \"./box\"\nimport {Arrayable} from \"core/types\"\nimport {NumberSpec} from \"core/vectorization\"\nimport {Anchor} from \"core/enums\"\nimport {SpatialIndex} from \"core/util/spatial\"\n\nexport interface QuadData extends BoxData {\n  _right: Arrayable<number>\n  _bottom: Arrayable<number>\n  _left: Arrayable<number>\n  _top: Arrayable<number>\n\n  sright: Arrayable<number>\n  sbottom: Arrayable<number>\n  sleft: Arrayable<number>\n  stop: Arrayable<number>\n}\n\nexport interface QuadView extends QuadData {}\n\nexport class QuadView extends BoxView {\n  model: Quad\n  visuals: Quad.Visuals\n\n  get_anchor_point(anchor: Anchor, i: number, _spt: [number, number]): {x: number, y: number} | null {\n    const left = Math.min(this.sleft[i], this.sright[i])\n    const right = Math.max(this.sright[i], this.sleft[i])\n    const top = Math.min(this.stop[i], this.sbottom[i])     // screen coordinates !!!\n    const bottom = Math.max(this.sbottom[i], this.stop[i])  //\n\n    switch (anchor) {\n      case \"top_left\":      return {x: left,             y: top             }\n      case \"top_center\":    return {x: (left + right)/2, y: top             }\n      case \"top_right\":     return {x: right,            y: top             }\n      case \"center_right\":  return {x: right,            y: (top + bottom)/2}\n      case \"bottom_right\":  return {x: right,            y: bottom          }\n      case \"bottom_center\": return {x: (left + right)/2, y: bottom          }\n      case \"bottom_left\":   return {x: left,             y: bottom          }\n      case \"center_left\":   return {x: left,             y: (top + bottom)/2}\n      case \"center\":        return {x: (left + right)/2, y: (top + bottom)/2}\n      default:              return null\n    }\n  }\n\n  scenterx(i: number): number {\n    return (this.sleft[i] + this.sright[i])/2\n  }\n\n  scentery(i: number): number {\n    return (this.stop[i] + this.sbottom[i])/2\n  }\n\n  protected _index_data(): SpatialIndex {\n    return this._index_box(this._right.length)\n  }\n\n  protected _lrtb(i: number): [number, number, number, number] {\n    const l = this._left[i]\n    const r = this._right[i]\n    const t = this._top[i]\n    const b = this._bottom[i]\n    return [l, r, t, b]\n  }\n}\n\nexport namespace Quad {\n  export interface Attrs extends Box.Attrs {\n    right: NumberSpec\n    bottom: NumberSpec\n    left: NumberSpec\n    top: NumberSpec\n  }\n\n  export interface Props extends Box.Props {}\n\n  export interface Visuals extends Box.Visuals {}\n}\n\nexport interface Quad extends Quad.Attrs {}\n\nexport class Quad extends Box {\n\n  properties: Quad.Props\n\n  constructor(attrs?: Partial<Quad.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Quad'\n    this.prototype.default_view = QuadView\n\n    this.coords([['right', 'bottom'], ['left', 'top']])\n  }\n}\nQuad.initClass()\n"]}