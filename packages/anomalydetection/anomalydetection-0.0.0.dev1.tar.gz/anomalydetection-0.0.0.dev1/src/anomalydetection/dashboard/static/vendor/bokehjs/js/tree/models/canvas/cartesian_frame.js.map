{"version":3,"sources":["models/canvas/cartesian_frame.ts"],"names":[],"mappings":"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","file":"cartesian_frame.js","sourcesContent":["import {CategoricalScale} from \"../scales/categorical_scale\"\nimport {LinearScale} from \"../scales/linear_scale\"\nimport {LogScale} from \"../scales/log_scale\"\nimport {Scale} from \"../scales/scale\"\nimport {Range} from \"../ranges/range\"\nimport {Range1d} from \"../ranges/range1d\"\nimport {DataRange1d} from \"../ranges/data_range1d\"\nimport {FactorRange} from \"../ranges/factor_range\"\n\nimport {LayoutCanvas} from \"core/layout/layout_canvas\"\nimport {Variable} from \"core/layout/solver\"\nimport {Arrayable} from \"core/types\"\nimport * as p from \"core/properties\"\n\nexport type Ranges = {[key: string]: Range}\nexport type Scales = {[key: string]: Scale}\n\nexport namespace CartesianFrame {\n  export interface Attrs extends LayoutCanvas.Attrs {\n    extra_x_ranges: Ranges\n    extra_y_ranges: Ranges\n    x_range: Range\n    y_range: Range\n    x_scale: Scale\n    y_scale: Scale\n  }\n\n  export interface Props extends LayoutCanvas.Props {}\n}\n\nexport interface CartesianFrame extends CartesianFrame.Attrs {}\n\nexport class CartesianFrame extends LayoutCanvas {\n\n  constructor(attrs?: Partial<CartesianFrame.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"CartesianFrame\"\n\n    this.internal({\n      extra_x_ranges: [ p.Any, {} ],\n      extra_y_ranges: [ p.Any, {} ],\n      x_range:        [ p.Instance ],\n      y_range:        [ p.Instance ],\n      x_scale:        [ p.Instance ],\n      y_scale:        [ p.Instance ],\n    })\n  }\n\n  protected _h_target: Range1d\n  protected _v_target: Range1d\n\n  protected _x_ranges: Ranges\n  protected _y_ranges: Ranges\n\n  protected _xscales: Scales\n  protected _yscales: Scales\n\n  initialize(): void {\n    super.initialize()\n    this._configure_scales()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.change, () => this._configure_scales())\n  }\n\n  get panel(): LayoutCanvas {\n    return this\n  }\n\n  get_editables(): Variable[] {\n    return super.get_editables().concat([this._width, this._height])\n  }\n\n  map_to_screen(x: Arrayable<number>, y: Arrayable<number>,\n                x_name: string = \"default\", y_name: string = \"default\"): [Arrayable<number>, Arrayable<number>] {\n    const sx = this.xscales[x_name].v_compute(x)\n    const sy = this.yscales[y_name].v_compute(y)\n    return [sx, sy]\n  }\n\n  protected _get_ranges(range: Range, extra_ranges?: Ranges): Ranges {\n    const ranges: Ranges = {}\n    ranges[\"default\"] = range\n    if (extra_ranges != null) {\n      for (const name in extra_ranges)\n        ranges[name] = extra_ranges[name]\n    }\n    return ranges\n  }\n\n  protected _get_scales(scale: Scale, ranges: Ranges, frame_range: Range): Scales {\n    const scales: Scales = {}\n\n    for (const name in ranges) {\n      const range = ranges[name]\n\n      if (range instanceof DataRange1d || range instanceof Range1d) {\n        if (!(scale instanceof LogScale) && !(scale instanceof LinearScale))\n          throw new Error(`Range ${range.type} is incompatible is Scale ${scale.type}`)\n        // XXX: special case because CategoricalScale is a subclass of LinearScale, should be removed in future\n        if (scale instanceof CategoricalScale)\n          throw new Error(`Range ${range.type} is incompatible is Scale ${scale.type}`)\n      }\n\n      if (range instanceof FactorRange) {\n        if (!(scale instanceof CategoricalScale))\n          throw new Error(`Range ${range.type} is incompatible is Scale ${scale.type}`)\n      }\n\n      if (scale instanceof LogScale && range instanceof DataRange1d)\n        range.scale_hint = \"log\"\n\n      const s = scale.clone()\n      s.setv({source_range: range, target_range: frame_range})\n      scales[name] = s\n    }\n\n    return scales\n  }\n\n  protected _configure_frame_ranges(): void {\n    // data to/from screen space transform (left-bottom <-> left-top origin)\n    this._h_target = new Range1d({start: this._left.value, end: this._right.value})\n    this._v_target = new Range1d({start: this._bottom.value, end: this._top.value})\n  }\n\n  protected _configure_scales(): void {\n    this._configure_frame_ranges()\n\n    this._x_ranges = this._get_ranges(this.x_range, this.extra_x_ranges)\n    this._y_ranges = this._get_ranges(this.y_range, this.extra_y_ranges)\n\n    this._xscales = this._get_scales(this.x_scale, this._x_ranges, this._h_target)\n    this._yscales = this._get_scales(this.y_scale, this._y_ranges, this._v_target)\n  }\n\n  update_scales(): void {\n    this._configure_frame_ranges()\n\n    for (const name in this._xscales) {\n      const scale = this._xscales[name]\n      scale.target_range = this._h_target\n    }\n\n    for (const name in this._yscales) {\n      const scale = this._yscales[name]\n      scale.target_range = this._v_target\n    }\n  }\n\n  get x_ranges(): Ranges {\n    return this._x_ranges\n  }\n\n  get y_ranges(): Ranges {\n    return this._y_ranges\n  }\n\n  get xscales(): Scales {\n    return this._xscales\n  }\n\n  get yscales(): Scales {\n    return this._yscales\n  }\n}\n\nCartesianFrame.initClass()\n"]}