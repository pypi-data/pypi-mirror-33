{"version":3,"sources":["models/widgets/selectbox.ts"],"names":[],"mappings":"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","file":"selectbox.js","sourcesContent":["import {empty, label, select, option, optgroup} from \"core/dom\"\nimport {isString, isArray} from \"core/util/types\"\nimport {logger} from \"core/logging\"\nimport * as p from \"core/properties\"\n\nimport {InputWidget, InputWidgetView} from \"./input_widget\"\n\nexport class SelectView extends InputWidgetView {\n  model: Select\n\n  protected selectEl: HTMLSelectElement\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.render()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.change, () => this.render())\n  }\n\n  build_options(values: (string | [string, string])[]): HTMLElement[] {\n    return values.map((el) => {\n      let value, _label\n      if (isString(el))\n        value = _label  = el\n      else\n        [value, _label] = el\n\n      const selected = this.model.value == value\n      return option({selected: selected, value: value}, _label)\n    })\n  }\n\n  render(): void {\n    super.render()\n    empty(this.el)\n\n    const labelEl = label({for: this.model.id}, this.model.title)\n    this.el.appendChild(labelEl)\n\n    let contents: HTMLElement[]\n    if (isArray(this.model.options))\n      contents = this.build_options(this.model.options)\n    else {\n      contents = []\n      const options = this.model.options\n      for (const key in options) {\n        const value = options[key]\n        contents.push(optgroup({label: key}, this.build_options(value)))\n      }\n    }\n\n    this.selectEl = select({\n      class: \"bk-widget-form-input\",\n      id: this.model.id,\n      name: this.model.name,\n      disabled: this.model.disabled}, contents)\n\n    this.selectEl.addEventListener(\"change\", () => this.change_input())\n    this.el.appendChild(this.selectEl)\n  }\n\n  change_input(): void {\n    const value = this.selectEl.value\n    logger.debug(`selectbox: value = ${value}`)\n    this.model.value = value\n    super.change_input()\n  }\n}\n\nexport namespace Select {\n  export interface Attrs extends InputWidget.Attrs {\n    value: string\n    options: (string | [string, string])[] | {[key: string]: (string | [string, string])[]}\n  }\n\n  export interface Props extends InputWidget.Props {}\n}\n\nexport interface Select extends Select.Attrs {}\n\nexport class Select extends InputWidget {\n\n  properties: Select.Props\n\n  constructor(attrs?: Partial<Select.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Select\"\n    this.prototype.default_view = SelectView\n\n    this.define({\n      value:   [ p.String, '' ],\n      options: [ p.Any,    [] ], // TODO (bev) is this used?\n    })\n  }\n}\n\nSelect.initClass()\n"]}