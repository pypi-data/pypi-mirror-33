{"version":3,"sources":["models/expressions/expression.ts"],"names":[],"mappings":";;;AACA,qCAAiC;AAWjC;IAAyC,sCAAK;IAI5C,oBAAY,KAAiC;QAA7C,YACE,kBAAM,KAAK,CAAC,SACb;QAMS,gBAAU,GAA6B,EAAE,CAAA;QACzC,aAAO,GAA+B,EAAE,CAAA;;IAPlD,CAAC;IAEM,oBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAA;IACpC,CAAC;IAKD,+BAAU,GAAV;QACE,iBAAM,UAAU,WAAE,CAAA;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA;IACnB,CAAC;IAIS,8BAAS,GAAnB,UAAoB,MAA0B;QAA9C,iBAcC;QAbC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,cAAM,OAAA,OAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAA;YACjE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAM,OAAA,OAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAA;YACnE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,cAAM,OAAA,OAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAC,CAAA;YACpE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA;SAClC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;QAEpC,IAAI,MAAM,IAAI,IAAI;YAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;QAE5D,OAAO,MAAM,CAAA;IACf,CAAC;IACH,iBAAC;AAAD,CAtCA,AAsCC,CAtCwC,aAAK,GAsC7C;AAtCqB,gCAAU;AAuChC,UAAU,CAAC,SAAS,EAAE,CAAA","file":"expression.js","sourcesContent":["import {ColumnarDataSource} from \"../sources/columnar_data_source\"\nimport {Model} from \"../../model\"\nimport {Arrayable} from \"core/types\"\n\nexport namespace Expression {\n  export interface Attrs extends Model.Attrs {}\n\n  export interface Props extends Model.Props {}\n}\n\nexport interface Expression extends Expression.Attrs {}\n\nexport abstract class Expression extends Model {\n\n  properties: Expression.Props\n\n  constructor(attrs?: Partial<Expression.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Expression\"\n  }\n\n  protected _connected: {[key: string]: boolean} = {}\n  protected _result: {[key: string]: Arrayable} = {}\n\n  initialize(): void {\n    super.initialize()\n    this._connected = {}\n    this._result = {}\n  }\n\n  abstract _v_compute(source: ColumnarDataSource): Arrayable\n\n  protected v_compute(source: ColumnarDataSource): Arrayable {\n    if (this._connected[source.id] == null) {\n      this.connect(source.change, () => delete this._result[source.id])\n      this.connect(source.patching, () => delete this._result[source.id])\n      this.connect(source.streaming, () => delete this._result[source.id])\n      this._connected[source.id] = true\n    }\n\n    let result = this._result[source.id]\n\n    if (result == null)\n      this._result[source.id] = result = this._v_compute(source)\n\n    return result\n  }\n}\nExpression.initClass()\n"]}