{"version":3,"sources":["models/widgets/checkbox_group.ts"],"names":[],"mappings":"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","file":"checkbox_group.js","sourcesContent":["import {empty, input, label, div} from \"core/dom\"\nimport * as p from \"core/properties\"\nimport {includes} from \"core/util/array\"\n\nimport {Widget, WidgetView} from \"./widget\"\n\nexport class CheckboxGroupView extends WidgetView {\n  model: CheckboxGroup\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.render()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.change, () => this.render())\n  }\n\n  render(): void {\n    super.render()\n    empty(this.el)\n\n    const active = this.model.active\n    const labels = this.model.labels\n\n    for (let i = 0; i < labels.length; i++) {\n      const text = labels[i]\n\n      const inputEl = input({type: `checkbox`, value: `${i}`})\n      inputEl.addEventListener(\"change\", () => this.change_input())\n\n      if (this.model.disabled)\n        inputEl.disabled = true\n\n      if (includes(active, i))\n        inputEl.checked = true\n\n      const labelEl = label({}, inputEl, text)\n      if (this.model.inline) {\n        labelEl.classList.add(\"bk-bs-checkbox-inline\")\n        this.el.appendChild(labelEl)\n      } else {\n        const divEl = div({class: \"bk-bs-checkbox\"}, labelEl)\n        this.el.appendChild(divEl)\n      }\n    }\n  }\n\n  change_input(): void {\n    const checkboxes = this.el.querySelectorAll(\"input\")\n    const active: number[] = []\n    for (let i = 0; i < checkboxes.length; i++) {\n      const checkbox = checkboxes[i]\n      if (checkbox.checked)\n        active.push(i)\n    }\n    this.model.active = active\n    if (this.model.callback != null)\n      this.model.callback.execute(this.model)\n  }\n}\n\nexport namespace CheckboxGroup {\n  export interface Attrs extends Widget.Attrs {\n    active: number[]\n    labels: string[]\n    inline: boolean\n    callback: any // XXX\n  }\n\n  export interface Props extends Widget.Props {}\n}\n\nexport interface CheckboxGroup extends CheckboxGroup.Attrs {}\n\nexport class CheckboxGroup extends Widget {\n\n  properties: CheckboxGroup.Props\n\n  constructor(attrs?: Partial<CheckboxGroup.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"CheckboxGroup\"\n    this.prototype.default_view = CheckboxGroupView\n\n    this.define({\n      active:   [ p.Array, []    ],\n      labels:   [ p.Array, []    ],\n      inline:   [ p.Bool,  false ],\n      callback: [ p.Instance     ],\n    })\n  }\n}\n\nCheckboxGroup.initClass()\n"]}