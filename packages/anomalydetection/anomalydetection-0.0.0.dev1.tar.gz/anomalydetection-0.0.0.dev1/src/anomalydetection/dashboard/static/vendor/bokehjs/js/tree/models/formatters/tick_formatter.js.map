{"version":3,"sources":["models/formatters/tick_formatter.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AAWjC;IAA4C,yCAAK;IAE/C,uBAAY,KAAoC;eAC9C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,uBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,eAAe,CAAA;IACvC,CAAC;IAGH,oBAAC;AAAD,CAXA,AAWC,CAX2C,aAAK,GAWhD;AAXqB,sCAAa;AAYnC,aAAa,CAAC,SAAS,EAAE,CAAA","file":"tick_formatter.js","sourcesContent":["import {Model} from \"../../model\"\nimport {Axis} from \"../axes/axis\"\n\nexport namespace TickFormatter {\n  export interface Attrs extends Model.Attrs {}\n\n  export interface Props extends Model.Props {}\n}\n\nexport interface TickFormatter extends TickFormatter.Attrs {}\n\nexport abstract class TickFormatter extends Model {\n\n  constructor(attrs?: Partial<TickFormatter.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"TickFormatter\"\n  }\n\n  abstract doFormat(ticks: string[] | number[], axis: Axis): string[]\n}\nTickFormatter.initClass()\n"]}