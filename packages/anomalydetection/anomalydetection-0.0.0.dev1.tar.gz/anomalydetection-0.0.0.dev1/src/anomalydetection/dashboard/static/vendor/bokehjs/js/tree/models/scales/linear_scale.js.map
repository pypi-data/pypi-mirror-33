{"version":3,"sources":["models/scales/linear_scale.ts"],"names":[],"mappings":";;;AAAA,iCAA6B;AAW7B;IAAiC,uCAAK;IAIpC,qBAAY,KAAkC;eAC5C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,qBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,aAAa,CAAA;IACrC,CAAC;IAED,6BAAO,GAAP,UAAQ,CAAS;QACT,IAAA,0BAAwC,EAAvC,cAAM,EAAE,cAAM,CAAyB;QAC9C,OAAO,MAAM,GAAG,CAAC,GAAG,MAAM,CAAA;IAC5B,CAAC;IAED,+BAAS,GAAT,UAAU,EAAqB;QACvB,IAAA,0BAAwC,EAAvC,cAAM,EAAE,cAAM,CAAyB;QAC9C,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE;YAChC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;QACnC,OAAO,MAAM,CAAA;IACf,CAAC;IAED,4BAAM,GAAN,UAAO,MAAc;QACb,IAAA,0BAAwC,EAAvC,cAAM,EAAE,cAAM,CAAyB;QAC9C,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,MAAM,CAAA;IACnC,CAAC;IAED,8BAAQ,GAAR,UAAS,OAA0B;QAC3B,IAAA,0BAAwC,EAAvC,cAAM,EAAE,cAAM,CAAyB;QAC9C,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;YACrC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAA;QAC5C,OAAO,MAAM,CAAA;IACf,CAAC;IAES,oCAAc,GAAxB;QACE,EAAE;QACF,6BAA6B;QAC7B,uCAAuC;QACvC,6BAA6B;QAC7B,EAAE;QACF,oCAAoC;QACpC,EAAE;QACF,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAA;QAC5C,IAAM,UAAU,GAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAA;QAC1C,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAA;QAC5C,IAAM,UAAU,GAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAA;QAC1C,IAAM,MAAM,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,GAAC,CAAC,UAAU,GAAG,YAAY,CAAC,CAAA;QACtE,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,GAAG,YAAY,CAAA;QACtD,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IACzB,CAAC;IACH,kBAAC;AAAD,CAtDA,AAsDC,CAtDgC,aAAK,GAsDrC;AAtDY,kCAAW;AAwDxB,WAAW,CAAC,SAAS,EAAE,CAAA","file":"linear_scale.js","sourcesContent":["import {Scale} from \"./scale\"\nimport {Arrayable} from \"core/types\"\n\nexport namespace LinearScale {\n  export interface Attrs extends Scale.Attrs {}\n\n  export interface Props extends Scale.Props {}\n}\n\nexport interface LinearScale extends LinearScale.Attrs {}\n\nexport class LinearScale extends Scale {\n\n  properties: LinearScale.Props\n\n  constructor(attrs?: Partial<LinearScale.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"LinearScale\"\n  }\n\n  compute(x: number): number {\n    const [factor, offset] = this._compute_state()\n    return factor * x + offset\n  }\n\n  v_compute(xs: Arrayable<number>): Arrayable<number> {\n    const [factor, offset] = this._compute_state()\n    const result = new Float64Array(xs.length)\n    for (let i = 0; i < xs.length; i++)\n      result[i] = factor*xs[i] + offset\n    return result\n  }\n\n  invert(xprime: number): number {\n    const [factor, offset] = this._compute_state()\n    return (xprime - offset) / factor\n  }\n\n  v_invert(xprimes: Arrayable<number>): Arrayable<number> {\n    const [factor, offset] = this._compute_state()\n    const result = new Float64Array(xprimes.length)\n    for (let i = 0; i < xprimes.length; i++)\n      result[i] = (xprimes[i] - offset) / factor\n    return result\n  }\n\n  protected _compute_state(): [number, number] {\n    //\n    //  (t1 - t0)       (t1 - t0)\n    //  --------- * x - --------- * s0 + t0\n    //  (s1 - s0)       (s1 - s0)\n    //\n    // [  factor  ]     [    offset    ]\n    //\n    const source_start = this.source_range.start\n    const source_end   = this.source_range.end\n    const target_start = this.target_range.start\n    const target_end   = this.target_range.end\n    const factor = (target_end - target_start)/(source_end - source_start)\n    const offset = -(factor * source_start) + target_start\n    return [factor, offset]\n  }\n}\n\nLinearScale.initClass()\n"]}