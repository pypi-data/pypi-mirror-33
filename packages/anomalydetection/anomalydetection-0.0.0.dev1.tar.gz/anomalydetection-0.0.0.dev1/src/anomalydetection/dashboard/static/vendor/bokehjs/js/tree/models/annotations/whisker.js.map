{"version":3,"sources":["models/annotations/whisker.ts"],"names":[],"mappings":"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","file":"whisker.js","sourcesContent":["import {Annotation, AnnotationView} from \"./annotation\"\nimport {ColumnarDataSource} from \"../sources/columnar_data_source\"\nimport {ColumnDataSource} from \"../sources/column_data_source\"\nimport {ArrowHead, TeeHead} from \"./arrow_head\"\nimport {DistanceSpec} from \"core/vectorization\"\nimport {LineMixinVector} from \"core/property_mixins\"\nimport {Line} from \"core/visuals\"\nimport {Arrayable} from \"core/types\"\nimport {Dimension} from \"core/enums\"\nimport * as p from \"core/properties\"\n\nexport class WhiskerView extends AnnotationView {\n  model: Whisker\n  visuals: Whisker.Visuals\n\n  protected _lower: Arrayable<number>\n  protected _upper: Arrayable<number>\n  protected _base:  Arrayable<number>\n\n  protected max_lower: number\n  protected max_upper: number\n  protected max_base:  number\n\n  protected _lower_sx: Arrayable<number>\n  protected _lower_sy: Arrayable<number>\n  protected _upper_sx: Arrayable<number>\n  protected _upper_sy: Arrayable<number>\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.set_data(this.model.source)\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.source.streaming, () => this.set_data(this.model.source))\n    this.connect(this.model.source.patching, () => this.set_data(this.model.source))\n    this.connect(this.model.source.change, () => this.set_data(this.model.source))\n  }\n\n  set_data(source: ColumnarDataSource): void {\n    super.set_data(source)\n    this.visuals.warm_cache(source)\n    this.plot_view.request_render()\n  }\n\n  protected _map_data(): void {\n    const {frame} = this.plot_model\n    const dim = this.model.dimension\n\n    const xscale = frame.xscales[this.model.x_range_name]\n    const yscale = frame.yscales[this.model.y_range_name]\n\n    const limit_scale = dim == \"height\" ? yscale : xscale\n    const base_scale  = dim == \"height\" ? xscale : yscale\n\n    const limit_view = dim == \"height\" ? frame.yview : frame.xview\n    const base_view  = dim == \"height\" ? frame.xview : frame.yview\n\n    let _lower_sx\n    if (this.model.lower.units == \"data\")\n      _lower_sx = limit_scale.v_compute(this._lower)\n    else\n      _lower_sx = limit_view.v_compute(this._lower)\n\n    let _upper_sx\n    if (this.model.upper.units == \"data\")\n      _upper_sx = limit_scale.v_compute(this._upper)\n    else\n      _upper_sx = limit_view.v_compute(this._upper)\n\n    let _base_sx\n    if (this.model.base.units  == \"data\")\n      _base_sx  = base_scale.v_compute(this._base)\n    else\n      _base_sx  = base_view.v_compute(this._base)\n\n    const [i, j] = dim == 'height' ? [1, 0] : [0, 1]\n\n    const _lower = [_lower_sx, _base_sx]\n    const _upper = [_upper_sx, _base_sx]\n\n    this._lower_sx = _lower[i]\n    this._lower_sy = _lower[j]\n\n    this._upper_sx = _upper[i]\n    this._upper_sy = _upper[j]\n  }\n\n  render(): void {\n    if (!this.model.visible)\n      return\n\n    this._map_data()\n\n    const {ctx} = this.plot_view.canvas_view\n\n    if (this.visuals.line.doit) {\n      for (let i = 0, end = this._lower_sx.length; i < end; i++) {\n        this.visuals.line.set_vectorize(ctx, i)\n        ctx.beginPath()\n        ctx.moveTo(this._lower_sx[i], this._lower_sy[i])\n        ctx.lineTo(this._upper_sx[i], this._upper_sy[i])\n        ctx.stroke()\n      }\n    }\n\n    const angle = this.model.dimension == \"height\" ? 0 : Math.PI / 2\n\n    if (this.model.lower_head != null) {\n      for (let i = 0, end = this._lower_sx.length; i < end; i++) {\n        ctx.save()\n        ctx.translate(this._lower_sx[i], this._lower_sy[i])\n        ctx.rotate(angle + Math.PI)\n        this.model.lower_head.render(ctx, i)\n        ctx.restore()\n      }\n    }\n\n    if (this.model.upper_head != null) {\n      for (let i = 0, end = this._upper_sx.length; i < end; i++) {\n        ctx.save()\n        ctx.translate(this._upper_sx[i], this._upper_sy[i])\n        ctx.rotate(angle)\n        this.model.upper_head.render(ctx, i)\n        ctx.restore()\n      }\n    }\n  }\n}\n\nexport namespace Whisker {\n  export interface Mixins extends LineMixinVector {}\n\n  export interface Attrs extends Annotation.Attrs, Mixins {\n    lower: DistanceSpec\n    lower_head: ArrowHead\n    upper: DistanceSpec\n    upper_head: ArrowHead\n    base: DistanceSpec\n    dimension: Dimension\n    source: ColumnarDataSource\n    x_range_name: string\n    y_range_name: string\n  }\n\n  export interface Props extends Annotation.Props {}\n\n  export type Visuals = Annotation.Visuals & {line: Line}\n}\n\nexport interface Whisker extends Whisker.Attrs {}\n\nexport class Whisker extends Annotation {\n\n  properties: Whisker.Props\n\n  constructor(attrs?: Partial<Whisker.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Whisker'\n    this.prototype.default_view = WhiskerView\n\n    this.mixins(['line'])\n\n    this.define({\n      lower:        [ p.DistanceSpec                    ],\n      lower_head:   [ p.Instance,     () => new TeeHead({level: \"underlay\", size: 10}) ],\n      upper:        [ p.DistanceSpec                    ],\n      upper_head:   [ p.Instance,     () => new TeeHead({level: \"underlay\", size: 10}) ],\n      base:         [ p.DistanceSpec                    ],\n      dimension:    [ p.Dimension,    'height'          ],\n      source:       [ p.Instance,     () => new ColumnDataSource()                     ],\n      x_range_name: [ p.String,       'default'         ],\n      y_range_name: [ p.String,       'default'         ],\n    })\n\n    this.override({\n      level: 'underlay',\n    })\n  }\n}\nWhisker.initClass()\n"]}