{"version":3,"sources":["models/filters/index_filter.ts"],"names":[],"mappings":";;;AAAA,mCAA+B;AAC/B,mCAAoC;AACpC,wCAAmC;AACnC,yCAAyC;AACzC,yCAAmC;AAanC;IAAiC,uCAAM;IAIrC,qBAAY,KAAkC;eAC5C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,qBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,aAAa,CAAA;QAEnC,IAAI,CAAC,MAAM,CAAC;YACV,OAAO,EAAE,CAAE,CAAC,CAAC,KAAK,EAAE,IAAI,CAAE;SAC3B,CAAC,CAAA;IACJ,CAAC;IAED,qCAAe,GAAf,UAAgB,OAAmB;QACjC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YACpD,IAAI,WAAG,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAS,CAAC;gBAC9B,OAAO,IAAI,CAAC,OAAO,CAAA;iBAChB;gBACH,gBAAM,CAAC,IAAI,CAAC,iBAAe,IAAI,CAAC,EAAE,sEAAmE,CAAC,CAAA;gBACtG,OAAO,IAAI,CAAA;aACZ;SACF;aAAM;YACL,gBAAM,CAAC,IAAI,CAAC,iBAAe,IAAI,CAAC,EAAE,sDAAmD,CAAC,CAAA;YACtF,OAAO,IAAI,CAAA;SACZ;IACH,CAAC;IACH,kBAAC;AAAD,CA7BA,AA6BC,CA7BgC,eAAM,GA6BtC;AA7BY,kCAAW;AA8BxB,WAAW,CAAC,SAAS,EAAE,CAAA","file":"index_filter.js","sourcesContent":["import {Filter} from \"./filter\"\nimport * as p from \"core/properties\"\nimport {logger} from \"core/logging\"\nimport {isInteger} from \"core/util/types\"\nimport {all} from \"core/util/array\"\nimport {DataSource} from \"../sources/data_source\"\n\nexport namespace IndexFilter {\n  export interface Attrs extends Filter.Attrs {\n    indices: number[] | null\n  }\n\n  export interface Props extends Filter.Props {}\n}\n\nexport interface IndexFilter extends IndexFilter.Attrs {}\n\nexport class IndexFilter extends Filter {\n\n  properties: IndexFilter.Props\n\n  constructor(attrs?: Partial<IndexFilter.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'IndexFilter'\n\n    this.define({\n      indices: [ p.Array, null ],\n    })\n  }\n\n  compute_indices(_source: DataSource): number[] | null {\n    if (this.indices != null && this.indices.length >= 0) {\n      if (all(this.indices, isInteger))\n        return this.indices\n      else {\n        logger.warn(`IndexFilter ${this.id}: indices should be array of integers, defaulting to no filtering`)\n        return null\n      }\n    } else {\n      logger.warn(`IndexFilter ${this.id}: indices was not set, defaulting to no filtering`)\n      return null\n    }\n  }\n}\nIndexFilter.initClass()\n"]}