{"version":3,"sources":["core/visuals.ts"],"names":[],"mappings":"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","file":"visuals.js","sourcesContent":["import * as mixins from \"./property_mixins\"\nimport * as p from \"./properties\"\nimport {color2rgba} from \"./util/color\"\nimport {Context2d} from \"./util/canvas\"\nimport {Class} from \"./class\"\n\nimport {HasProps} from \"./has_props\"\nimport {ColumnarDataSource} from \"models/sources/columnar_data_source\"\n\nexport abstract class ContextProperties {\n\n  // prototype {\n  attrs: string[]\n  do_attr: string\n  // }\n\n  readonly cache: {[key: string]: any} = {}\n  readonly doit: boolean\n\n  all_indices: number[]\n\n  constructor(readonly obj: HasProps, readonly prefix: string = \"\") {\n    const do_spec = obj.properties[prefix + this.do_attr].spec\n    this.doit = do_spec.value !== null // XXX: can't be `undefined`, see TODOs below.\n\n    for (const attr of this.attrs)\n      (this as any)[attr] = obj.properties[prefix + attr]\n  }\n\n  warm_cache(source?: ColumnarDataSource): void {\n    for (const attr of this.attrs) {\n      const prop = this.obj.properties[this.prefix + attr]\n      if (prop.spec.value !== undefined) // TODO (bev) better test?\n        this.cache[attr] = prop.spec.value\n      else if (source != null)\n        this.cache[attr + \"_array\"] = prop.array(source)\n      else\n        throw new Error(\"source is required with a vectorized visual property\")\n    }\n  }\n\n  cache_select(attr: string, i: number): any {\n    const prop = this.obj.properties[this.prefix + attr]\n    let value: any\n    if (prop.spec.value !== undefined) // TODO (bev) better test?\n      this.cache[attr] = value = prop.spec.value\n    else\n      this.cache[attr] = value = this.cache[attr + \"_array\"][i]\n    return value\n  }\n\n  set_vectorize(ctx: Context2d, i: number): void {\n    if (this.all_indices != null) // all_indices is set by a Visuals instance associated with a CDSView\n      this._set_vectorize(ctx, this.all_indices[i])\n    else                          // all_indices is not set for annotations which may have vectorized visual props\n      this._set_vectorize(ctx, i)\n  }\n\n  protected abstract _set_vectorize(ctx: Context2d, i: number): void\n}\n\nexport class Line extends ContextProperties {\n\n  readonly line_color:       p.ColorSpec\n  readonly line_width:       p.NumberSpec\n  readonly line_alpha:       p.NumberSpec\n  readonly line_join:        p.LineJoin\n  readonly line_cap:         p.LineCap\n  readonly line_dash:        p.Array\n  readonly line_dash_offset: p.Number\n\n  set_value(ctx: Context2d): void {\n    ctx.strokeStyle = this.line_color.value()\n    ctx.globalAlpha = this.line_alpha.value()\n    ctx.lineWidth   = this.line_width.value()\n    ctx.lineJoin    = this.line_join.value()\n    ctx.lineCap     = this.line_cap.value()\n    ctx.setLineDash(this.line_dash.value())\n    ctx.setLineDashOffset(this.line_dash_offset.value())\n  }\n\n  protected _set_vectorize(ctx: Context2d, i: number): void {\n    this.cache_select(\"line_color\", i)\n    if (ctx.strokeStyle !== this.cache.line_color)\n      ctx.strokeStyle = this.cache.line_color\n\n    this.cache_select(\"line_alpha\", i)\n    if (ctx.globalAlpha !== this.cache.line_alpha)\n      ctx.globalAlpha = this.cache.line_alpha\n\n    this.cache_select(\"line_width\", i)\n    if (ctx.lineWidth !== this.cache.line_width)\n      ctx.lineWidth = this.cache.line_width\n\n    this.cache_select(\"line_join\", i)\n    if (ctx.lineJoin !== this.cache.line_join)\n      ctx.lineJoin = this.cache.line_join\n\n    this.cache_select(\"line_cap\", i)\n    if (ctx.lineCap !== this.cache.line_cap)\n      ctx.lineCap = this.cache.line_cap\n\n    this.cache_select(\"line_dash\", i)\n    if (ctx.getLineDash() !== this.cache.line_dash)\n      ctx.setLineDash(this.cache.line_dash)\n\n    this.cache_select(\"line_dash_offset\", i)\n    if (ctx.getLineDashOffset() !== this.cache.line_dash_offset)\n      ctx.setLineDashOffset(this.cache.line_dash_offset)\n  }\n\n  color_value(): string {\n    const [r, g, b, a] = color2rgba(this.line_color.value(), this.line_alpha.value())\n    return `rgba(${r*255},${g*255},${b*255},${a})`\n  }\n}\n\nLine.prototype.attrs = Object.keys(mixins.line())\nLine.prototype.do_attr = \"line_color\"\n\nexport class Fill extends ContextProperties {\n\n  readonly fill_color: p.ColorSpec\n  readonly fill_alpha: p.NumberSpec\n\n  set_value(ctx: Context2d): void {\n    ctx.fillStyle   = this.fill_color.value()\n    ctx.globalAlpha = this.fill_alpha.value()\n  }\n\n  protected _set_vectorize(ctx: Context2d, i: number): void {\n    this.cache_select(\"fill_color\", i)\n    if (ctx.fillStyle !== this.cache.fill_color)\n      ctx.fillStyle = this.cache.fill_color\n\n    this.cache_select(\"fill_alpha\", i)\n    if (ctx.globalAlpha !== this.cache.fill_alpha)\n      ctx.globalAlpha = this.cache.fill_alpha\n  }\n\n  color_value(): string {\n    const [r, g, b, a] = color2rgba(this.fill_color.value(), this.fill_alpha.value())\n    return `rgba(${r*255},${g*255},${b*255},${a})`\n  }\n}\n\nFill.prototype.attrs = Object.keys(mixins.fill())\nFill.prototype.do_attr =  \"fill_color\"\n\nexport class Text extends ContextProperties {\n\n  readonly text_font:        p.Font\n  readonly text_font_size:   p.FontSizeSpec\n  readonly text_font_style:  p.FontStyle\n  readonly text_color:       p.ColorSpec\n  readonly text_alpha:       p.NumberSpec\n  readonly text_align:       p.TextAlign\n  readonly text_baseline:    p.TextBaseline\n  readonly text_line_height: p.Number\n\n  cache_select(name: string, i: number): any {\n    let value: any\n    if (name == \"font\") {\n      super.cache_select(\"text_font_style\", i)\n      super.cache_select(\"text_font_size\",  i)\n      super.cache_select(\"text_font\",       i)\n\n      const {text_font_style, text_font_size, text_font} = this.cache\n      this.cache.font = value = `${text_font_style} ${text_font_size} ${text_font}`\n    } else\n      value = super.cache_select(name, i)\n\n    return value\n  }\n\n  font_value(): string {\n    const font       = this.text_font.value()\n    const font_size  = this.text_font_size.value()\n    const font_style = this.text_font_style.value()\n    return font_style + \" \" + font_size + \" \" + font\n  }\n\n  color_value(): string {\n    const [r, g, b, a] = color2rgba(this.text_color.value(), this.text_alpha.value())\n    return `rgba(${r*255},${g*255},${b*255},${a})`\n  }\n\n  set_value(ctx: Context2d): void {\n    ctx.font         = this.font_value()\n    ctx.fillStyle    = this.text_color.value()\n    ctx.globalAlpha  = this.text_alpha.value()\n    ctx.textAlign    = this.text_align.value()\n    ctx.textBaseline = this.text_baseline.value()\n  }\n\n  protected _set_vectorize(ctx: Context2d, i: number): void {\n    this.cache_select(\"font\", i)\n    if (ctx.font !== this.cache.font)\n      ctx.font = this.cache.font\n\n    this.cache_select(\"text_color\", i)\n    if (ctx.fillStyle !== this.cache.text_color)\n      ctx.fillStyle = this.cache.text_color\n\n    this.cache_select(\"text_alpha\", i)\n    if (ctx.globalAlpha !== this.cache.text_alpha)\n      ctx.globalAlpha = this.cache.text_alpha\n\n    this.cache_select(\"text_align\", i)\n    if (ctx.textAlign !== this.cache.text_align)\n      ctx.textAlign = this.cache.text_align\n\n    this.cache_select(\"text_baseline\", i)\n    if (ctx.textBaseline !== this.cache.text_baseline)\n      ctx.textBaseline = this.cache.text_baseline\n  }\n}\n\nText.prototype.attrs = Object.keys(mixins.text())\nText.prototype.do_attr = \"text_color\"\n\nexport class Visuals {\n\n  constructor(model: HasProps) {\n    for (const spec of model.mixins) {\n      const [name, prefix=\"\"] = spec.split(\":\")\n      let cls: Class<ContextProperties>\n      switch (name) {\n        case \"line\": cls = Line; break\n        case \"fill\": cls = Fill; break\n        case \"text\": cls = Text; break\n        default:\n          throw new Error(`unknown visual: ${name}`)\n      }\n      (this as any)[prefix + name] = new cls(model, prefix)\n    }\n  }\n\n  warm_cache(source?: ColumnarDataSource): void {\n    for (const name in this) {\n      if (this.hasOwnProperty(name)) {\n        const prop: any = this[name]\n        if (prop instanceof ContextProperties)\n          prop.warm_cache(source)\n      }\n    }\n  }\n\n  set_all_indices(all_indices: number[]): void {\n    for (const name in this) {\n      if (this.hasOwnProperty(name)) {\n        const prop: any = this[name]\n        if (prop instanceof ContextProperties)\n          prop.all_indices = all_indices\n      }\n    }\n  }\n}\n"]}