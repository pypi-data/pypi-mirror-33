{"version":3,"sources":["core/util/refs.ts"],"names":[],"mappings":";;AACA,iCAAgC;AAShC,oDAAoD;AACpD,EAAE;AACF,6DAA6D;AAC7D,+CAA+C;AAC/C,0CAA0C;AAC1C,EAAE;AACF,oBAA2B,GAAa;IACtC,IAAM,GAAG,GAAQ;QACf,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,EAAE,EAAE,GAAG,CAAC,EAAE;KACX,CAAA;IACD,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAE;QACxB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAA;KAC3B;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AATD,gCASC;AAED,yEAAyE;AACzE,EAAE;AACF,yCAAyC;AACzC,qDAAqD;AACrD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,EAAE;AACF,gBAAuB,GAAQ;IAC7B,IAAI,gBAAQ,CAAC,GAAG,CAAC,EAAE;QACjB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;QACpC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAClB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;QAC7C,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAClB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;KACtE;IACD,OAAO,KAAK,CAAA;AACd,CAAC;AATD,wBASC","file":"refs.js","sourcesContent":["import {HasProps} from \"../has_props\"\nimport {isObject} from \"./types\"\n\nexport interface Ref {\n  id: string\n  type: string\n  subtype?: string\n  attributes?: {[key: string]: any}\n}\n\n// Create a Bokeh reference from a HasProps subclass\n//\n// @param obj [HasProps] the object to create a reference for\n// @return [Object] a Bokeh reference for `obj`\n// @throw Error if `obj` is not a HasProps\n//\nexport function create_ref(obj: HasProps): Ref {\n  const ref: Ref = {\n    type: obj.type,\n    id: obj.id,\n  }\n  if (obj._subtype != null) {\n    ref.subtype = obj._subtype\n  }\n  return ref\n}\n\n// Determine whether an object has the proper format of a Bokeh reference\n//\n// @param arg [Object] the object to test\n// @return [bool] whether the object is a refererence\n//\n// @note this function does not check that the id and types are valid,\n//   only that the format is correct (all required keys are present)\n//\nexport function is_ref(arg: any): arg is Ref {\n  if (isObject(arg)) {\n    const keys = Object.keys(arg).sort()\n    if (keys.length == 2)\n      return keys[0] == 'id' && keys[1] == 'type'\n    if (keys.length == 3)\n      return keys[0] == 'id' && keys[1] == 'subtype' && keys[2] == 'type'\n  }\n  return false\n}\n"]}