{"version":3,"sources":["models/scales/categorical_scale.ts"],"names":[],"mappings":";;;AAAA,+CAA0C;AAY1C;IAAsC,4CAAW;IAI/C,0BAAY,KAAuC;eACjD,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,0BAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,kBAAkB,CAAA;IAC1C,CAAC;IAID,kCAAO,GAAP,UAAQ,CAAM;QACZ,OAAO,iBAAM,OAAO,YAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACtD,CAAC;IAED,oCAAS,GAAT,UAAU,EAAkB;QAC1B,OAAO,iBAAM,SAAS,YAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAA;IAC3D,CAAC;IACH,uBAAC;AAAD,CArBA,AAqBC,CArBqC,0BAAW,GAqBhD;AArBY,4CAAgB;AAuB7B,gBAAgB,CAAC,SAAS,EAAE,CAAA","file":"categorical_scale.js","sourcesContent":["import {LinearScale} from \"./linear_scale\"\nimport {FactorRange} from \"../ranges/factor_range\"\nimport {Arrayable} from \"core/types\"\n\nexport namespace CategoricalScale {\n  export interface Attrs extends LinearScale.Attrs {}\n\n  export interface Props extends LinearScale.Props {}\n}\n\nexport interface CategoricalScale extends CategoricalScale.Attrs {}\n\nexport class CategoricalScale extends LinearScale {\n\n  properties: CategoricalScale.Props\n\n  constructor(attrs?: Partial<CategoricalScale.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"CategoricalScale\"\n  }\n\n  source_range: FactorRange\n\n  compute(x: any): number {\n    return super.compute(this.source_range.synthetic(x))\n  }\n\n  v_compute(xs: Arrayable<any>): Arrayable<number> {\n    return super.v_compute(this.source_range.v_synthetic(xs))\n  }\n}\n\nCategoricalScale.initClass()\n"]}