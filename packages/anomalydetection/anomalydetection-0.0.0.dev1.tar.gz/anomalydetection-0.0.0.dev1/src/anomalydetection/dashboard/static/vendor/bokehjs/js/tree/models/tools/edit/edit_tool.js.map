{"version":3,"sources":["models/tools/edit/edit_tool.ts"],"names":[],"mappings":"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","file":"edit_tool.js","sourcesContent":["import * as p from \"core/properties\"\nimport {UIEvent, MoveEvent} from \"core/ui_events\"\nimport {PointGeometry} from \"core/geometry\"\nimport {includes} from \"core/util/array\"\nimport {XYGlyph} from \"../../glyphs/xy_glyph\"\nimport {ColumnarDataSource} from \"../../sources/columnar_data_source\"\nimport {GlyphRenderer} from \"../../renderers/glyph_renderer\"\nimport {GestureTool, GestureToolView} from \"../gestures/gesture_tool\"\n\nexport interface HasXYGlyph {\n  glyph: XYGlyph\n}\n\nexport abstract class EditToolView extends GestureToolView {\n  model: EditTool\n\n  _basepoint: [number, number] | null\n  _mouse_in_frame: boolean = true\n\n  _move_enter(_e: MoveEvent): void {\n    this._mouse_in_frame = true;\n  }\n\n  _move_exit(_e: MoveEvent): void {\n    this._mouse_in_frame = false;\n  }\n\n  _map_drag(sx: number, sy: number, renderer: GlyphRenderer): [number, number] | null {\n    // Maps screen to data coordinates\n    const frame = this.plot_model.frame;\n    if (!frame.bbox.contains(sx, sy)) {\n      return null;\n    }\n    const x = frame.xscales[renderer.x_range_name].invert(sx);\n    const y = frame.yscales[renderer.y_range_name].invert(sy);\n    return [x, y];\n  }\n\n  _delete_selected(renderer: GlyphRenderer): void {\n    // Deletes all selected rows in the ColumnDataSource\n    const cds = renderer.data_source;\n    const indices = cds.selected.indices;\n    indices.sort()\n    for (const column of cds.columns()) {\n      const values = cds.get_array(column)\n      for (let index = 0; index < indices.length; index++) {\n        const ind = indices[index];\n        values.splice(ind-index, 1);\n      }\n    }\n    cds.change.emit();\n    cds.properties.data.change.emit();\n    cds.selection_manager.clear();\n  }\n\n  _drag_points(ev: UIEvent, renderers: (GlyphRenderer & HasXYGlyph)[]): void {\n    if (this._basepoint == null) { return; };\n    const [bx, by] = this._basepoint;\n    for (const renderer of renderers) {\n      const basepoint = this._map_drag(bx, by, renderer);\n      const point = this._map_drag(ev.sx, ev.sy, renderer);\n      if (point == null || basepoint == null) {\n        continue;\n      }\n      const [x, y] = point;\n      const [px, py] = basepoint;\n      const [dx, dy] = [x-px, y-py];\n      // Type once dataspecs are typed\n      const glyph: any = renderer.glyph;\n      const ds = renderer.data_source;\n      const [xkey, ykey] = [glyph.x.field, glyph.y.field];\n      for (const index of ds.selected.indices) {\n        if (xkey) ds.data[xkey][index] += dx\n        if (ykey) ds.data[ykey][index] += dy\n      }\n    }\n    for (const renderer of renderers) {\n      renderer.data_source.change.emit()\n      renderer.data_source.properties.data.change.emit()\n    }\n    this._basepoint = [ev.sx, ev.sy];\n  }\n\n  _pad_empty_columns(cds: ColumnarDataSource, coord_columns: string[]): void {\n    // Pad ColumnDataSource non-coordinate columns with empty_value\n    for (const column of cds.columns()) {\n      if (!includes(coord_columns, column))\n        cds.get_array(column).push(this.model.empty_value)\n    }\n  }\n\n  _select_event(ev: UIEvent, append: boolean, renderers: GlyphRenderer[]): GlyphRenderer[] {\n    // Process selection event on the supplied renderers and return selected renderers\n    const frame = this.plot_model.frame;\n    const {sx, sy} = ev\n    if (!frame.bbox.contains(sx, sy)) {\n      return [];\n    }\n    const geometry: PointGeometry = {\n      type: 'point',\n      sx: sx,\n      sy: sy,\n    }\n    const selected = [];\n    for (const renderer of renderers) {\n      const sm = renderer.get_selection_manager();\n      const cds = renderer.data_source;\n      const views = [this.plot_view.renderer_views[renderer.id]];\n      const did_hit = sm.select(views, geometry, true, append);\n      if (did_hit) {\n        selected.push(renderer)\n      }\n      cds.properties.selected.change.emit();\n    }\n    return selected;\n  }\n}\n\nexport namespace EditTool {\n  export interface Attrs extends GestureTool.Attrs {\n    empty_value: any\n    renderers: GlyphRenderer[]\n  }\n\n  export interface Props extends GestureTool.Props {}\n}\n\nexport interface EditTool extends EditTool.Attrs {}\n\nexport abstract class EditTool extends GestureTool {\n\n  properties: EditTool.Props\n\n  constructor(attrs?: Partial<EditTool.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"EditTool\"\n\n    this.define({\n      empty_value: [ p.Any       ],\n      renderers:   [ p.Array, [] ],\n    })\n  }\n}\nEditTool.initClass()\n"]}