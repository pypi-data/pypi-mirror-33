{"version":3,"sources":["models/tools/toolbar.ts"],"names":[],"mappings":"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","file":"toolbar.js","sourcesContent":["import * as p from \"core/properties\"\nimport {logger} from \"core/logging\"\nimport {isString, isArray} from \"core/util/types\"\nimport {any, sortBy, includes} from \"core/util/array\"\n\nimport {Tool} from \"./tool\"\nimport {ActionTool} from \"./actions/action_tool\"\nimport {HelpTool} from \"./actions/help_tool\"\nimport {GestureTool} from \"./gestures/gesture_tool\"\nimport {InspectTool} from \"./inspectors/inspect_tool\"\n\nimport {ToolbarBase, ToolbarBaseView, GestureType} from \"./toolbar_base\"\n\n// XXX: add appropriate base classes to get rid of this\nexport type Drag = Tool\nexport type Inspection = Tool\nexport type Scroll = Tool\nexport type Tap = Tool\n\nexport namespace Toolbar {\n  export interface Attrs extends ToolbarBase.Attrs {\n    active_drag: Drag | \"auto\"\n    active_inspect: Inspection | Inspection[] | \"auto\"\n    active_scroll: Scroll | \"auto\"\n    active_tap: Tap | \"auto\"\n  }\n\n  export interface Props extends ToolbarBase.Props {}\n}\n\nexport interface Toolbar extends Toolbar.Attrs {}\n\nexport class Toolbar extends ToolbarBase {\n\n  properties: Toolbar.Props\n\n  constructor(attrs?: Partial<Toolbar.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Toolbar'\n    this.prototype.default_view = ToolbarBaseView\n\n    this.define({\n      active_drag:     [ p.Any, 'auto' ],\n      active_inspect:  [ p.Any, 'auto' ],\n      active_scroll:   [ p.Any, 'auto' ],\n      active_tap:      [ p.Any, 'auto' ],\n    })\n  }\n\n  initialize(): void {\n    super.initialize()\n    this._init_tools()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.properties.tools.change, () => this._init_tools())\n  }\n\n  protected _init_tools(): void {\n    for (const tool of this.tools) {\n      if (tool instanceof InspectTool) {\n        if (!any(this.inspectors, (t) => t.id == tool.id)) {\n          this.inspectors = this.inspectors.concat([tool])\n        }\n      } else if (tool instanceof HelpTool) {\n        if (!any(this.help, (t) => t.id == tool.id)) {\n          this.help = this.help.concat([tool])\n        }\n      } else if (tool instanceof ActionTool) {\n        if (!any(this.actions, (t) => t.id == tool.id)) {\n          this.actions = this.actions.concat([tool])\n        }\n      } else if (tool instanceof GestureTool) {\n        let event_types: GestureType[]\n        let multi: boolean\n        if (isString(tool.event_type)) {\n          event_types = [tool.event_type]\n          multi = false\n        } else {\n          event_types = tool.event_type || []\n          multi = true\n        }\n\n        for (let et of event_types) {\n          if (!(et in this.gestures)) {\n            logger.warn(`Toolbar: unknown event type '${et}' for tool: ${tool.type} (${tool.id})`)\n            continue\n          }\n\n          if (multi)\n            et = \"multi\"\n\n          if (!any(this.gestures[et].tools, (t) => t.id == tool.id))\n            this.gestures[et].tools = this.gestures[et].tools.concat([tool])\n\n          this.connect(tool.properties.active.change, this._active_change.bind(this, tool))\n        }\n      }\n    }\n\n    if (this.active_inspect == 'auto') {\n      // do nothing as all tools are active be default\n    } else if (this.active_inspect instanceof InspectTool) {\n      for (const inspector of this.inspectors) {\n        if (inspector != this.active_inspect)\n          inspector.active = false\n      }\n    } else if (isArray(this.active_inspect)) {\n      for (const inspector of this.inspectors) {\n        if (!includes(this.active_inspect, inspector))\n          inspector.active = false\n      }\n    } else if (this.active_inspect == null) {\n      for (const inspector of this.inspectors)\n        inspector.active = false\n    }\n\n    const _activate_gesture = (tool: Tool) => {\n      if (tool.active) {\n        // tool was activated by a proxy, but we need to finish configuration manually\n        this._active_change(tool)\n      } else\n        tool.active = true\n    }\n\n    for (const et in this.gestures) {\n      const gesture = this.gestures[et as GestureType]\n\n      if (gesture.tools.length == 0)\n        continue\n\n      gesture.tools = sortBy(gesture.tools, (tool) => tool.default_order)\n\n      if (et == 'tap') {\n        if (this.active_tap == null)\n          continue\n\n        if (this.active_tap == 'auto')\n          _activate_gesture(gesture.tools[0])\n        else\n          _activate_gesture(this.active_tap)\n      }\n\n      if (et == 'pan') {\n        if (this.active_drag == null)\n          continue\n\n        if (this.active_drag == 'auto')\n          _activate_gesture(gesture.tools[0])\n        else\n          _activate_gesture(this.active_drag)\n      }\n\n      if (et == 'pinch' || et == 'scroll') {\n        if (this.active_scroll == null || this.active_scroll == 'auto')\n          continue\n        _activate_gesture(this.active_scroll)\n      }\n    }\n  }\n}\nToolbar.initClass()\n"]}