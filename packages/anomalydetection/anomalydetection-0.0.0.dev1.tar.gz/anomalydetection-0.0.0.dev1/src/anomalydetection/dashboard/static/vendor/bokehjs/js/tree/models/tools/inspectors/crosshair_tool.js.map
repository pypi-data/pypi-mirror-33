{"version":3,"sources":["models/tools/inspectors/crosshair_tool.ts"],"names":[],"mappings":"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","file":"crosshair_tool.js","sourcesContent":["import {InspectTool, InspectToolView} from \"./inspect_tool\"\nimport {Renderer} from \"../../renderers/renderer\"\nimport {Span} from \"../../annotations/span\"\nimport {Dimensions, SpatialUnits, RenderMode} from \"core/enums\"\nimport {MoveEvent} from \"core/ui_events\"\nimport * as p from \"core/properties\"\nimport {Color} from \"core/types\"\nimport {values} from \"core/util/object\"\n\nexport class CrosshairToolView extends InspectToolView {\n  model: CrosshairTool\n\n  _move(ev: MoveEvent): void {\n    if (!this.model.active)\n      return\n\n    const {sx, sy} = ev\n\n    if (!this.plot_model.frame.bbox.contains(sx, sy))\n      this._update_spans(null, null)\n    else\n      this._update_spans(sx, sy)\n  }\n\n  _move_exit(_e: MoveEvent): void {\n    this._update_spans(null, null)\n  }\n\n  _update_spans(x: number | null, y: number | null): void {\n    const dims = this.model.dimensions\n    if (dims == \"width\" || dims == \"both\")\n      this.model.spans.width.computed_location  = y\n    if (dims == \"height\" || dims == \"both\")\n      this.model.spans.height.computed_location = x\n  }\n}\n\nexport namespace CrosshairTool {\n  export interface Attrs extends InspectTool.Attrs {\n    dimensions: Dimensions\n    line_color: Color\n    line_width: number\n    line_alpha: number\n\n    location_units: SpatialUnits\n    render_mode: RenderMode\n    spans: {width: Span, height: Span}\n  }\n\n  export interface Props extends InspectTool.Props {}\n}\n\nexport interface CrosshairTool extends CrosshairTool.Attrs {}\n\nexport class CrosshairTool extends InspectTool {\n\n  properties: CrosshairTool.Props\n\n  constructor(attrs?: Partial<CrosshairTool.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"CrosshairTool\"\n    this.prototype.default_view = CrosshairToolView\n\n    this.define({\n      dimensions: [ p.Dimensions, \"both\" ],\n      line_color: [ p.Color, 'black'     ],\n      line_width: [ p.Number, 1          ],\n      line_alpha: [ p.Number, 1.0        ],\n    })\n\n    this.internal({\n      location_units: [ p.SpatialUnits, \"screen\" ],\n      render_mode:    [ p.RenderMode,   \"css\"    ],\n      spans:          [ p.Any                    ],\n    })\n  }\n\n  tool_name = \"Crosshair\"\n  icon = \"bk-tool-icon-crosshair\"\n\n  get tooltip(): string {\n    return this._get_dim_tooltip(\"Crosshair\", this.dimensions)\n  }\n\n  get synthetic_renderers(): Renderer[] {\n    return values(this.spans)\n  }\n\n  initialize(): void {\n    super.initialize()\n\n    this.spans = {\n      width: new Span({\n        for_hover: true,\n        dimension: \"width\",\n        render_mode: this.render_mode,\n        location_units: this.location_units,\n        line_color: this.line_color,\n        line_width: this.line_width,\n        line_alpha: this.line_alpha,\n      }),\n      height: new Span({\n        for_hover: true,\n        dimension: \"height\",\n        render_mode: this.render_mode,\n        location_units: this.location_units,\n        line_color: this.line_color,\n        line_width: this.line_width,\n        line_alpha: this.line_alpha,\n      }),\n    }\n  }\n}\n\nCrosshairTool.initClass()\n"]}