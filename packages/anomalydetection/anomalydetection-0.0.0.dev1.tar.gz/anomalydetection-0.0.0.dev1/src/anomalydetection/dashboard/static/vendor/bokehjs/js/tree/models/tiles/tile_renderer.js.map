{"version":3,"sources":["models/tiles/tile_renderer.ts"],"names":[],"mappings":"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","file":"tile_renderer.js","sourcesContent":["import {Tile} from \"./tile_source\"\nimport {ImagePool, Image} from \"./image_pool\"\nimport {Extent, Bounds} from \"./tile_utils\"\nimport {TileSource} from \"./tile_source\"\nimport {WMTSTileSource} from \"./wmts_tile_source\"\nimport {Renderer, RendererView} from \"../renderers/renderer\"\nimport {Plot} from \"../plots/plot\"\nimport {CartesianFrame} from \"../canvas/cartesian_frame\"\nimport {Range} from \"../ranges/range\"\nimport {div} from \"core/dom\"\nimport * as p from \"core/properties\"\nimport {includes} from \"core/util/array\"\nimport {isString} from \"core/util/types\"\nimport {Context2d} from \"core/util/canvas\"\n\nexport interface TileData {\n  img: Image\n  tile_coords: [number, number, number]\n  normalized_coords: [number, number, number]\n  quadkey: string\n  cache_key: string\n  bounds: Bounds\n  loaded: boolean\n  finished: boolean\n  x_coord: number\n  y_coord: number\n}\n\nexport class TileRendererView extends RendererView {\n  model: TileRenderer\n\n  protected attributionEl: HTMLElement | null\n\n  protected _tiles: TileData[]\n\n  protected pool: ImagePool\n  protected extent: Extent\n  protected initial_extent: Extent\n  protected _last_height?: number\n  protected _last_width?: number\n  protected map_initialized?: boolean\n  protected render_timer?: number\n  protected prefetch_timer?: number\n\n  initialize(options: any): void {\n    this.attributionEl = null\n    this._tiles = []\n    super.initialize(options)\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.change, () => this.request_render())\n  }\n\n  get_extent(): Extent {\n    return [this.x_range.start, this.y_range.start, this.x_range.end, this.y_range.end]\n  }\n\n  private get map_plot(): Plot {\n    return this.plot_model.plot\n  }\n\n  private get map_canvas(): Context2d {\n    return this.plot_view.canvas_view.ctx\n  }\n\n  private get map_frame(): CartesianFrame {\n    return this.plot_model.frame\n  }\n\n  private get x_range(): Range {\n    return this.map_plot.x_range\n  }\n\n  private get y_range(): Range {\n    return this.map_plot.y_range\n  }\n\n  protected _set_data(): void {\n    this.pool = new ImagePool()\n    this.extent = this.get_extent()\n    this._last_height = undefined\n    this._last_width = undefined\n  }\n\n  protected _add_attribution(): void {\n    const { attribution } = this.model.tile_source\n\n    if (isString(attribution) && (attribution.length > 0)) {\n      if ((this.attributionEl == null)) {\n        const right = this.plot_model.canvas._right.value - this.plot_model.frame._right.value\n        const bottom = this.plot_model.canvas._bottom.value - this.plot_model.frame._bottom.value\n        const max_width = this.map_frame._width.value\n        this.attributionEl = div({\n          class: 'bk-tile-attribution',\n          style: {\n            position: \"absolute\",\n            bottom: `${bottom}px`,\n            right: `${right}px`,\n            'max-width': `${max_width}px`,\n            padding: \"2px\",\n            'background-color': 'rgba(255,255,255,0.8)',\n            'font-size': '9pt',\n            'font-family': 'sans-serif',\n          },\n        })\n\n        const overlays = this.plot_view.canvas_view.events_el\n        overlays.appendChild(this.attributionEl)\n      }\n\n      this.attributionEl.innerHTML = attribution\n    }\n  }\n\n  protected _map_data(): void {\n    this.initial_extent = this.get_extent()\n    const zoom_level = this.model.tile_source.get_level_by_extent(this.initial_extent, this.map_frame._height.value, this.map_frame._width.value)\n    const new_extent = this.model.tile_source.snap_to_zoom_level(this.initial_extent, this.map_frame._height.value, this.map_frame._width.value, zoom_level)\n    this.x_range.start = new_extent[0]\n    this.y_range.start = new_extent[1]\n    this.x_range.end = new_extent[2]\n    this.y_range.end = new_extent[3]\n    this._add_attribution()\n  }\n\n  protected _on_tile_load(tile_data: TileData, e: Event & {target: Image}): void {\n    tile_data.img = e.target\n    tile_data.loaded = true\n    this.request_render()\n  }\n\n  protected _on_tile_cache_load(tile_data: TileData, e: Event & {target: Image}): void {\n    tile_data.img = e.target\n    tile_data.loaded = true\n    tile_data.finished = true\n    this.notify_finished()\n  }\n\n  protected _on_tile_error(tile_data: TileData): void {\n    tile_data.finished = true\n  }\n\n  protected _create_tile(x: number, y: number, z: number, bounds: Bounds, cache_only: boolean = false): void {\n    const [nx, ny, nz] = this.model.tile_source.normalize_xyz(x, y, z)\n\n    const img = this.pool.pop()\n    const tile = {\n      img,\n      tile_coords: [x, y, z] as [number, number, number],\n      normalized_coords: [nx, ny, nz] as [number, number, number],\n      quadkey: this.model.tile_source.tile_xyz_to_quadkey(x, y, z),\n      cache_key: this.model.tile_source.tile_xyz_to_key(x, y, z),\n      bounds,\n      loaded: false,\n      finished: false,\n      x_coord: bounds[0],\n      y_coord: bounds[3],\n    }\n\n    img.onload = cache_only ? this._on_tile_cache_load.bind(this, tile) : this._on_tile_load.bind(this, tile)\n    img.onerror = this._on_tile_error.bind(this, tile)\n    img.alt = ''\n    img.src = this.model.tile_source.get_image_url(nx, ny, nz)\n\n    this.model.tile_source.tiles[tile.cache_key] = tile as Tile\n    this._tiles.push(tile)\n  }\n\n  protected _enforce_aspect_ratio(): boolean {\n    // brute force way of handling resize or sizing_mode event -------------------------------------------------------------\n    if ((this._last_height !== this.map_frame._height.value) || (this._last_width !== this.map_frame._width.value)) {\n      const extent = this.get_extent()\n      const zoom_level = this.model.tile_source.get_level_by_extent(extent, this.map_frame._height.value, this.map_frame._width.value)\n      const new_extent = this.model.tile_source.snap_to_zoom_level(extent, this.map_frame._height.value, this.map_frame._width.value, zoom_level)\n      this.x_range.setv({start:new_extent[0], end: new_extent[2]})\n      this.y_range.setv({start:new_extent[1], end: new_extent[3]})\n      this.extent = new_extent\n      this._last_height = this.map_frame._height.value\n      this._last_width = this.map_frame._width.value\n      return true\n    }\n    return false\n  }\n\n  has_finished(): boolean {\n    if (!super.has_finished()) {\n      return false\n    }\n\n    if (this._tiles.length === 0) {\n      return false\n    }\n\n    for (const tile of this._tiles) {\n      if (!tile.finished) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  render(): void {\n    if (this.map_initialized == null) {\n      this._set_data()\n      this._map_data()\n      this.map_initialized = true\n    }\n\n    if (this._enforce_aspect_ratio()) {\n      return\n    }\n\n    this._update()\n    if (this.prefetch_timer != null) {\n      clearTimeout(this.prefetch_timer)\n    }\n\n    this.prefetch_timer = setTimeout(this._prefetch_tiles.bind(this), 500)\n\n    if (this.has_finished()) {\n      this.notify_finished()\n    }\n  }\n\n  _draw_tile(tile_key: string): void {\n    const tile_obj = this.model.tile_source.tiles[tile_key] as TileData\n    if (tile_obj != null) {\n      const [[sxmin], [symin]] = this.plot_view.map_to_screen([tile_obj.bounds[0]], [tile_obj.bounds[3]]) as any as [number[], number[]] // XXX: TS #20623\n      const [[sxmax], [symax]] = this.plot_view.map_to_screen([tile_obj.bounds[2]], [tile_obj.bounds[1]]) as any as [number[], number[]] //\n      const sw = sxmax - sxmin\n      const sh = symax - symin\n      const sx = sxmin\n      const sy = symin\n      this.map_canvas.drawImage(tile_obj.img, sx, sy, sw, sh)\n      tile_obj.finished = true\n    }\n  }\n\n  protected _set_rect(): void {\n    const outline_width = this.plot_model.plot.properties.outline_line_width.value()\n    const l = this.map_frame._left.value + (outline_width/2)\n    const t = this.map_frame._top.value + (outline_width/2)\n    const w = this.map_frame._width.value - outline_width\n    const h = this.map_frame._height.value - outline_width\n    this.map_canvas.rect(l, t, w, h)\n    this.map_canvas.clip()\n  }\n\n  protected _render_tiles(tile_keys: string[]): void {\n    this.map_canvas.save()\n    this._set_rect()\n    this.map_canvas.globalAlpha = this.model.alpha\n    for (const tile_key of tile_keys) {\n      this._draw_tile(tile_key)\n    }\n    this.map_canvas.restore()\n  }\n\n  protected _prefetch_tiles(): void {\n    const { tile_source } = this.model\n    const extent = this.get_extent()\n    const h = this.map_frame._height.value\n    const w = this.map_frame._width.value\n    const zoom_level = this.model.tile_source.get_level_by_extent(extent, h, w)\n    const tiles = this.model.tile_source.get_tiles_by_extent(extent, zoom_level)\n    for (let t = 0, end = Math.min(10, tiles.length); t < end; t++) {\n      const [x, y, z,] = tiles[t]\n      const children = this.model.tile_source.children_by_tile_xyz(x, y, z)\n      for (const c of children) {\n        const [cx, cy, cz, cbounds] = c\n        if (tile_source.tile_xyz_to_key(cx, cy, cz) in tile_source.tiles) {\n          continue\n        } else {\n          this._create_tile(cx, cy, cz, cbounds, true)\n        }\n      }\n    }\n  }\n\n  protected _fetch_tiles(tiles: [number, number, number, Bounds][]): void {\n    for (const tile of tiles) {\n      const [x, y, z, bounds] = tile\n      this._create_tile(x, y, z, bounds)\n    }\n  }\n\n  protected _update(): void {\n    const { tile_source } = this.model\n\n    const { min_zoom } = tile_source\n    const { max_zoom } = tile_source\n\n    let extent = this.get_extent()\n    const zooming_out = (this.extent[2] - this.extent[0]) < (extent[2] - extent[0])\n    const h = this.map_frame._height.value\n    const w = this.map_frame._width.value\n    let zoom_level = tile_source.get_level_by_extent(extent, h, w)\n    let snap_back = false\n\n    if (zoom_level < min_zoom) {\n      extent = this.extent\n      zoom_level = min_zoom\n      snap_back = true\n    } else if (zoom_level > max_zoom) {\n      extent = this.extent\n      zoom_level = max_zoom\n      snap_back = true\n    }\n\n    if (snap_back) {\n      this.x_range.setv({x_range: {start: extent[0], end: extent[2]}})\n      this.y_range.setv({start: extent[1], end: extent[3]})\n      this.extent = extent\n    }\n\n    this.extent = extent\n    const tiles = tile_source.get_tiles_by_extent(extent, zoom_level)\n    const need_load: typeof tiles = []\n    const cached = []\n    const parents = []\n    const children = []\n\n    for (const t of tiles) {\n      const [x, y, z,] = t\n      const key = tile_source.tile_xyz_to_key(x, y, z)\n      const tile = tile_source.tiles[key] as TileData\n      if (tile != null && tile.loaded) {\n        cached.push(key)\n      } else {\n        if (this.model.render_parents) {\n          const [px, py, pz] = tile_source.get_closest_parent_by_tile_xyz(x, y, z)\n          const parent_key = tile_source.tile_xyz_to_key(px, py, pz)\n          const parent_tile = tile_source.tiles[parent_key] as TileData\n          if ((parent_tile != null) && parent_tile.loaded && !includes(parents, parent_key)) {\n            parents.push(parent_key)\n          }\n          if (zooming_out) {\n            const child_tiles = tile_source.children_by_tile_xyz(x, y, z)\n            for (const [cx, cy, cz] of child_tiles) {\n              const child_key = tile_source.tile_xyz_to_key(cx, cy, cz)\n\n              if (child_key in tile_source.tiles)\n                children.push(child_key)\n            }\n          }\n        }\n      }\n\n      if (tile == null)\n        need_load.push(t)\n    }\n\n    // draw stand-in parents ----------\n    this._render_tiles(parents)\n    this._render_tiles(children)\n\n    // draw cached ----------\n    this._render_tiles(cached)\n\n    // fetch missing -------\n    if (this.render_timer != null) {\n      clearTimeout(this.render_timer)\n    }\n\n    this.render_timer = setTimeout((() => this._fetch_tiles(need_load)), 65)\n  }\n}\n\nexport namespace TileRenderer {\n  export interface Attrs extends Renderer.Attrs {\n    alpha: number\n    x_range_name: string\n    y_range_name: string\n    tile_source: TileSource\n    render_parents: boolean\n  }\n\n  export interface Props extends Renderer.Props {}\n}\n\nexport interface TileRenderer extends TileRenderer.Attrs {}\n\nexport class TileRenderer extends Renderer {\n\n  properties: TileRenderer.Props\n\n  constructor(attrs?: Partial<TileRenderer.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'TileRenderer'\n    this.prototype.default_view = TileRendererView\n\n    this.define({\n      alpha:          [ p.Number,   1.0              ],\n      x_range_name:   [ p.String,   \"default\"        ],\n      y_range_name:   [ p.String,   \"default\"        ],\n      tile_source:    [ p.Instance, () => new WMTSTileSource() ],\n      render_parents: [ p.Bool,     true             ],\n    })\n\n    this.override({\n      level: 'underlay',\n    })\n  }\n}\nTileRenderer.initClass()\n"]}