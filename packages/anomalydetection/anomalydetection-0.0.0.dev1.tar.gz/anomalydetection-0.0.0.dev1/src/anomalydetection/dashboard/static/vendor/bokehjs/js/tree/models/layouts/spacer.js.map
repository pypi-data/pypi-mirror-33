{"version":3,"sources":["models/layouts/spacer.ts"],"names":[],"mappings":";;;AAAA,2CAAqD;AACrD,2CAAuC;AAGvC;IAAgC,sCAAa;IAA7C;;IAuBA,CAAC;IApBC,2BAAM,GAAN;QACE,iBAAM,MAAM,WAAE,CAAA;QACd,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,OAAO,EAAE;YACrC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAM,IAAI,CAAC,KAAK,CAAC,KAAK,OAAI,CAAA;YAC7C,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAM,IAAI,CAAC,KAAK,CAAC,MAAM,OAAI,CAAA;SAChD;IACH,CAAC;IAED,gCAAW,GAAX;QACE,OAAO,iBAAM,WAAW,WAAE,CAAC,MAAM,CAAC,eAAe,CAAC,CAAA;IACpD,CAAC;IAED,4CAA4C;IAC5C,8BAAS,GAAT;QACE,OAAO,CAAC,CAAA;IACV,CAAC;IAED,+BAAU,GAAV;QACE,OAAO,CAAC,CAAA;IACV,CAAC;IACH,iBAAC;AAAD,CAvBA,AAuBC,CAvB+B,0BAAa,GAuB5C;AAvBY,gCAAU;AAiCvB;IAA4B,kCAAS;IAInC,gBAAY,KAA6B;eACvC,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,gBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAA;QAC9B,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,CAAA;IAC1C,CAAC;IAED,0CAAyB,GAAzB;QACE,OAAO,eAAM,CAAC,EAAE,EAAE,iBAAM,yBAAyB,WAAE,EAAE;YACnD,iBAAiB,EAAM,IAAI,CAAC,IAAI;YAChC,oBAAoB,EAAG,IAAI,CAAC,oBAAoB;YAChD,kBAAkB,EAAK,IAAI,CAAC,KAAK;YACjC,mBAAmB,EAAI,IAAI,CAAC,kBAAkB;YAE9C,kBAAkB,EAAK,IAAI,CAAC,IAAI;YAChC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB;YAChD,mBAAmB,EAAI,IAAI,CAAC,KAAK;YACjC,oBAAoB,EAAG,IAAI,CAAC,kBAAkB;YAE9C,kBAAkB,EAAK,IAAI,CAAC,IAAI;YAChC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB;YAChD,mBAAmB,EAAI,IAAI,CAAC,KAAK;YACjC,oBAAoB,EAAG,IAAI,CAAC,kBAAkB;SAC/C,CAAC,CAAA;IACJ,CAAC;IACH,aAAC;AAAD,CA/BA,AA+BC,CA/B2B,sBAAS,GA+BpC;AA/BY,wBAAM;AAgCnB,MAAM,CAAC,SAAS,EAAE,CAAA","file":"spacer.js","sourcesContent":["import {LayoutDOM, LayoutDOMView} from \"./layout_dom\"\nimport {extend} from \"core/util/object\"\nimport {Variable} from \"core/layout/solver\"\n\nexport class SpacerView extends LayoutDOMView {\n  model: Spacer\n\n  render(): void {\n    super.render()\n    if (this.model.sizing_mode == \"fixed\") {\n      this.el.style.width = `${this.model.width}px`\n      this.el.style.height = `${this.model.height}px`\n    }\n  }\n\n  css_classes(): string[] {\n    return super.css_classes().concat(\"bk-spacer-box\")\n  }\n\n  // spacer must always have some width/height\n  get_width(): number {\n    return 1\n  }\n\n  get_height(): number {\n    return 1\n  }\n}\n\nexport namespace Spacer {\n  export interface Attrs extends LayoutDOM.Attrs {}\n\n  export interface Props extends LayoutDOM.Props {}\n}\n\nexport interface Spacer extends Spacer.Attrs {}\n\nexport class Spacer extends LayoutDOM {\n\n  properties: Spacer.Props\n\n  constructor(attrs?: Partial<Spacer.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Spacer\"\n    this.prototype.default_view = SpacerView\n  }\n\n  get_constrained_variables(): {[key: string]: Variable} {\n    return extend({}, super.get_constrained_variables(), {\n      on_edge_align_top    : this._top,\n      on_edge_align_bottom : this._height_minus_bottom,\n      on_edge_align_left   : this._left,\n      on_edge_align_right  : this._width_minus_right,\n\n      box_cell_align_top   : this._top,\n      box_cell_align_bottom: this._height_minus_bottom,\n      box_cell_align_left  : this._left,\n      box_cell_align_right : this._width_minus_right,\n\n      box_equal_size_top   : this._top,\n      box_equal_size_bottom: this._height_minus_bottom,\n      box_equal_size_left  : this._left,\n      box_equal_size_right : this._width_minus_right,\n    })\n  }\n}\nSpacer.initClass()\n"]}