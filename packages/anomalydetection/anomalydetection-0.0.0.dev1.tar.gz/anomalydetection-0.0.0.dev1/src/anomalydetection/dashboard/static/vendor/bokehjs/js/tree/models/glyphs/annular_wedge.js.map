{"version":3,"sources":["models/glyphs/annular_wedge.ts"],"names":[],"mappings":";;;AAAA,uCAA6D;AAC7D,iCAA2C;AAO3C,sCAAwC;AACxC,mCAAqC;AAErC,uCAA4C;AAoB5C;IAAsC,4CAAW;IAAjD;;IA2HA,CAAC;IAvHW,oCAAS,GAAnB;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,IAAI,MAAM;YACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;;YAEnF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAE1C,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,IAAI,MAAM;YACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;;YAEnF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAE1C,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;QAExD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;SAC3D;IACH,CAAC;IAES,kCAAO,GAAjB,UAAkB,GAAc,EAAE,OAAiB,EACjC,EAA8E;YAA7E,UAAE,EAAE,UAAE,EAAE,8BAAY,EAAE,kBAAM,EAAE,gCAAa,EAAE,gCAAa;QAC3E,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAE1D,KAAgB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAAlB,IAAM,CAAC,gBAAA;YACV,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC1F,SAAS;YAEX,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5B,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,SAAS,EAAE,CAAC;YAChB,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACzD,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YAC3D,GAAG,CAAC,SAAS,EAAE,CAAC;YAEhB,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACxC,GAAG,CAAC,IAAI,EAAE,CAAC;aACZ;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACxC,GAAG,CAAC,MAAM,EAAE,CAAC;aACd;SACF;IACH,CAAC;IAES,qCAAU,GAApB,UAAqB,QAAuB;QACnC,IAAA,gBAAE,EAAE,gBAAE,CAAa;QAC1B,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAE1C,qBAAqB;QACrB,IAAI,EAAU,EAAE,EAAU,CAAA;QAC1B,IAAI,EAAU,EAAE,EAAU,CAAA;QAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,IAAI,MAAM,EAAE;YACtD,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/B,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAE/B,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/B,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAChC;aAAM;YACL,IAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACvC,IAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACvC,4CAAkD,EAAjD,UAAE,EAAE,UAAE,CAA4C;YAEnD,IAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACvC,IAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACvC,4CAAkD,EAAjD,UAAE,EAAE,UAAE,CAA4C;SACpD;QAED,IAAM,UAAU,GAAG,EAAE,CAAC;QAEtB,IAAM,IAAI,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAC9D,KAAgB,UAAwB,EAAxB,KAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAxB,cAAwB,EAAxB,IAAwB;YAAnC,IAAM,CAAC,SAAA;YACV,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/C,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,IAAA,kDAA0D,EAAzD,WAAG,EAAE,WAAG,CAAkD;YAC3D,IAAA,kDAA0D,EAAzD,WAAG,EAAE,WAAG,CAAkD;YACjE,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG;gBAC5B,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;SAC9B;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC1D,IAAM,IAAI,GAAuB,EAAE,CAAC;QACpC,KAAwB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;YAAvB,IAAA,qBAAS,EAAR,SAAC,EAAE,YAAI;YACjB,wEAAwE;YACxE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,oBAAa,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE;gBAChF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;aACtB;SACF;QAED,OAAO,OAAO,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;;IACxD,CAAC;IAED,gDAAqB,GAArB,UAAsB,GAAc,EAAE,IAAW,EAAE,KAAa;QAC9D,2BAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IACrD,CAAC;IAEO,qCAAU,GAAlB,UAAmB,CAAS;QAC1B,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QAC5D,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAI,CAAC,CAAC;QAC5D,OAAO,EAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;IAC5E,CAAC;IAED,mCAAQ,GAAR,UAAS,CAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC7B,CAAC;IAED,mCAAQ,GAAR,UAAS,CAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC7B,CAAC;IACH,uBAAC;AAAD,CA3HA,AA2HC,CA3HqC,sBAAW,GA2HhD;AA3HY,4CAAgB;AAwJ7B;IAAkC,wCAAO;IAIvC,sBAAY,KAAmC;eAC7C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,sBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,gBAAgB,CAAC;QAE/C,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC;YACV,SAAS,EAAK,CAAE,CAAC,CAAC,SAAS,EAAI,WAAW,CAAE;YAC5C,YAAY,EAAE,CAAE,CAAC,CAAC,YAAY,CAAc;YAC5C,YAAY,EAAE,CAAE,CAAC,CAAC,YAAY,CAAc;YAC5C,WAAW,EAAG,CAAE,CAAC,CAAC,SAAS,CAAiB;YAC5C,SAAS,EAAK,CAAE,CAAC,CAAC,SAAS,CAAiB;SAC7C,CAAC,CAAC;IACL,CAAC;IACH,mBAAC;AAAD,CArBA,AAqBC,CArBiC,kBAAO,GAqBxC;AArBY,oCAAY;AAsBzB,YAAY,CAAC,SAAS,EAAE,CAAC","file":"annular_wedge.js","sourcesContent":["import {XYGlyph, XYGlyphView, XYGlyphData} from \"./xy_glyph\";\nimport {generic_area_legend} from \"./utils\"\nimport {PointGeometry} from \"core/geometry\";\nimport {DistanceSpec, AngleSpec} from \"core/vectorization\"\nimport {LineMixinVector, FillMixinVector} from \"core/property_mixins\"\nimport {Arrayable} from \"core/types\"\nimport {Direction} from \"core/enums\"\nimport {Line, Fill} from \"core/visuals\"\nimport * as hittest from \"core/hittest\";\nimport * as p from \"core/properties\";\nimport {IBBox} from \"core/util/bbox\"\nimport {angle_between} from \"core/util/math\"\nimport {Context2d} from \"core/util/canvas\"\nimport {Selection} from \"../selections/selection\";\n\nexport interface AnnularWedgeData extends XYGlyphData {\n  _inner_radius: Arrayable<number>\n  _outer_radius: Arrayable<number>\n  _start_angle: Arrayable<number>\n  _end_angle: Arrayable<number>\n  _angle: Arrayable<number>\n\n  sinner_radius: Arrayable<number>\n  souter_radius: Arrayable<number>\n\n  max_inner_radius: number\n  max_outer_radius: number\n}\n\nexport interface AnnularWedgeView extends AnnularWedgeData {}\n\nexport class AnnularWedgeView extends XYGlyphView {\n  model: AnnularWedge\n  visuals: AnnularWedge.Visuals\n\n  protected _map_data(): void {\n    if (this.model.properties.inner_radius.units == \"data\")\n      this.sinner_radius = this.sdist(this.renderer.xscale, this._x, this._inner_radius);\n    else\n      this.sinner_radius = this._inner_radius;\n\n    if (this.model.properties.outer_radius.units == \"data\")\n      this.souter_radius = this.sdist(this.renderer.xscale, this._x, this._outer_radius);\n    else\n      this.souter_radius = this._outer_radius;\n\n    this._angle = new Float32Array(this._start_angle.length)\n\n    for (let i = 0, end = this._start_angle.length; i < end; i++) {\n      this._angle[i] = this._end_angle[i] - this._start_angle[i]\n    }\n  }\n\n  protected _render(ctx: Context2d, indices: number[],\n                    {sx, sy, _start_angle, _angle, sinner_radius, souter_radius}: AnnularWedgeData): void {\n    const direction = this.model.properties.direction.value();\n\n    for (const i of indices) {\n      if (isNaN(sx[i] + sy[i] + sinner_radius[i] + souter_radius[i] + _start_angle[i] + _angle[i]))\n        continue;\n\n      ctx.translate(sx[i], sy[i]);\n      ctx.rotate(_start_angle[i]);\n\n      ctx.moveTo(souter_radius[i], 0);\n      ctx.beginPath();\n      ctx.arc(0, 0, souter_radius[i], 0, _angle[i], direction);\n      ctx.rotate(_angle[i]);\n      ctx.lineTo(sinner_radius[i], 0);\n      ctx.arc(0, 0, sinner_radius[i], 0, -_angle[i], !direction);\n      ctx.closePath();\n\n      ctx.rotate(-_angle[i]-_start_angle[i]);\n      ctx.translate(-sx[i], -sy[i]);\n\n      if (this.visuals.fill.doit) {\n        this.visuals.fill.set_vectorize(ctx, i);\n        ctx.fill();\n      }\n\n      if (this.visuals.line.doit) {\n        this.visuals.line.set_vectorize(ctx, i);\n        ctx.stroke();\n      }\n    }\n  }\n\n  protected _hit_point(geometry: PointGeometry): Selection {\n    const {sx, sy} = geometry;\n    const x = this.renderer.xscale.invert(sx);\n    const y = this.renderer.yscale.invert(sy);\n\n    // check radius first\n    let x0: number, y0: number\n    let x1: number, y1: number\n    if (this.model.properties.outer_radius.units == \"data\") {\n      x0 = x - this.max_outer_radius;\n      x1 = x + this.max_outer_radius;\n\n      y0 = y - this.max_outer_radius;\n      y1 = y + this.max_outer_radius;\n    } else {\n      const sx0 = sx - this.max_outer_radius;\n      const sx1 = sx + this.max_outer_radius;\n      [x0, x1] = this.renderer.xscale.r_invert(sx0, sx1);\n\n      const sy0 = sy - this.max_outer_radius;\n      const sy1 = sy + this.max_outer_radius;\n      [y0, y1] = this.renderer.yscale.r_invert(sy0, sy1);\n    }\n\n    const candidates = [];\n\n    const bbox = hittest.validate_bbox_coords([x0, x1], [y0, y1]);\n    for (const i of this.index.indices(bbox)) {\n      const or2 = Math.pow(this.souter_radius[i], 2);\n      const ir2 = Math.pow(this.sinner_radius[i], 2);\n      const [sx0, sx1] = this.renderer.xscale.r_compute(x, this._x[i]);\n      const [sy0, sy1] = this.renderer.yscale.r_compute(y, this._y[i]);\n      const dist = Math.pow(sx0-sx1, 2) + Math.pow(sy0-sy1, 2);\n      if (dist <= or2 && dist >= ir2)\n        candidates.push([i, dist]);\n    }\n\n    const direction = this.model.properties.direction.value();\n    const hits: [number, number][] = [];\n    for (const [i, dist] of candidates) {\n      // NOTE: minus the angle because JS uses non-mathy convention for angles\n      const angle = Math.atan2(sy-this.sy[i], sx-this.sx[i]);\n      if (angle_between(-angle, -this._start_angle[i], -this._end_angle[i], direction)) {\n        hits.push([i, dist]);\n      }\n    }\n\n    return hittest.create_hit_test_result_from_hits(hits);\n  }\n\n  draw_legend_for_index(ctx: Context2d, bbox: IBBox, index: number): void {\n    generic_area_legend(this.visuals, ctx, bbox, index)\n  }\n\n  private _scenterxy(i: number): {x: number, y: number} {\n    const r = (this.sinner_radius[i] + this.souter_radius[i])/2;\n    const a = (this._start_angle[i]  + this._end_angle[i])   /2;\n    return {x: this.sx[i] + (r*Math.cos(a)), y: this.sy[i] + (r*Math.sin(a))};\n  }\n\n  scenterx(i: number): number {\n    return this._scenterxy(i).x\n  }\n\n  scentery(i: number): number {\n    return this._scenterxy(i).y\n  }\n}\n\nexport namespace AnnularWedge {\n  export interface Mixins extends LineMixinVector, FillMixinVector {}\n\n  export interface Attrs extends XYGlyph.Attrs, Mixins {\n    direction: Direction\n    inner_radius: DistanceSpec\n    outer_radius: DistanceSpec\n    start_angle: AngleSpec\n    end_angle:  AngleSpec\n  }\n\n  export interface Props extends XYGlyph.Props {\n    direction: p.Direction\n    inner_radius: p.DistanceSpec\n    outer_radius: p.DistanceSpec\n    start_angle: p.AngleSpec\n    end_angle: p.AngleSpec\n  }\n\n  export interface Visuals extends XYGlyph.Visuals {\n    line: Line\n    fill: Fill\n  }\n}\n\nexport interface AnnularWedge extends AnnularWedge.Attrs {}\n\nexport class AnnularWedge extends XYGlyph {\n\n  properties: AnnularWedge.Props\n\n  constructor(attrs?: Partial<AnnularWedge.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'AnnularWedge';\n    this.prototype.default_view = AnnularWedgeView;\n\n    this.mixins(['line', 'fill']);\n    this.define({\n      direction:    [ p.Direction,   'anticlock' ],\n      inner_radius: [ p.DistanceSpec             ],\n      outer_radius: [ p.DistanceSpec             ],\n      start_angle:  [ p.AngleSpec                ],\n      end_angle:    [ p.AngleSpec                ],\n    });\n  }\n}\nAnnularWedge.initClass();\n"]}