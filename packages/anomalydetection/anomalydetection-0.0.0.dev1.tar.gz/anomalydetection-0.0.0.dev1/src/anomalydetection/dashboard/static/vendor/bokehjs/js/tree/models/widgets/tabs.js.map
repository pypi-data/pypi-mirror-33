{"version":3,"sources":["models/widgets/tabs.ts"],"names":[],"mappings":"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","file":"tabs.js","sourcesContent":["import {empty, ul, li, span, div} from \"core/dom\"\nimport {zip} from \"core/util/array\"\nimport * as p from \"core/properties\"\n\nimport {Widget, WidgetView} from \"./widget\"\nimport {Panel} from \"./panel\"\nimport {LayoutDOM} from \"../layouts/layout_dom\"\n\nexport class TabsView extends WidgetView {\n  model: Tabs\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.properties.tabs.change, () => this.rebuild_child_views())\n    this.connect(this.model.properties.active.change, () => this.render())\n  }\n\n  render(): void {\n    super.render()\n    empty(this.el)\n\n    const len = this.model.tabs.length\n    if (len == 0)\n      return\n    else if (this.model.active >= len)\n      this.model.active = len - 1\n\n    const tabs = this.model.tabs.map((tab, i) => li({}, span({data: {index: i}}, tab.title)))\n    tabs[this.model.active].classList.add(\"bk-bs-active\")\n    const tabsEl = ul({class: [\"bk-bs-nav\", \"bk-bs-nav-tabs\"]}, tabs)\n    this.el.appendChild(tabsEl)\n\n    const panels = this.model.tabs.map((_tab) => div({class: \"bk-bs-tab-pane\"}))\n    panels[this.model.active].classList.add(\"bk-bs-active\")\n    const panelsEl = div({class: \"bk-bs-tab-content\"}, panels)\n    this.el.appendChild(panelsEl)\n\n    tabsEl.addEventListener(\"click\", (event) => {\n      event.preventDefault()\n\n      if (event.target != event.currentTarget) {\n        const el = event.target as HTMLElement\n\n        const old_active = this.model.active\n        const new_active = parseInt(el.dataset.index!)\n\n        if (old_active != new_active) {\n          tabs[old_active].classList.remove(\"bk-bs-active\")\n          panels[old_active].classList.remove(\"bk-bs-active\")\n\n          tabs[new_active].classList.add(\"bk-bs-active\")\n          panels[new_active].classList.add(\"bk-bs-active\")\n\n          this.model.active = new_active\n          if (this.model.callback != null)\n            this.model.callback.execute(this.model)\n        }\n      }\n    })\n\n    for (const [child, panelEl] of zip(this.model.children, panels))\n      panelEl.appendChild(this.child_views[child.id].el)\n  }\n}\n\nexport namespace Tabs {\n  export interface Attrs extends Widget.Attrs {\n    tabs: Panel[]\n    active: number\n    callback: any // XXX\n  }\n\n  export interface Props extends Widget.Props {\n    tabs: p.Property<Panel[]>\n    active: p.Property<number>\n  }\n}\n\nexport interface Tabs extends Tabs.Attrs {}\n\nexport class Tabs extends Widget {\n\n  properties: Tabs.Props\n\n  constructor(attrs?: Partial<Tabs.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Tabs\"\n    this.prototype.default_view = TabsView\n\n    this.define({\n      tabs:     [ p.Array,   [] ],\n      active:   [ p.Number,  0  ],\n      callback: [ p.Instance    ],\n    })\n  }\n\n  get_layoutable_children(): LayoutDOM[] {\n    return this.children\n  }\n\n  get children(): LayoutDOM[] {\n    return this.tabs.map((tab) => tab.child)\n  }\n}\n\nTabs.initClass()\n"]}