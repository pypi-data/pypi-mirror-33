{"version":3,"sources":["models/annotations/title.ts"],"names":[],"mappings":"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","file":"title.js","sourcesContent":["import {TextAnnotation, TextAnnotationView} from \"./text_annotation\"\nimport {FontSizeSpec, ColorSpec, NumberSpec} from \"core/vectorization\"\nimport {Color} from \"core/types\"\nimport {LineJoin, LineCap} from \"core/enums\"\nimport {FontStyle, VerticalAlign, TextAlign, TextBaseline} from \"core/enums\"\nimport {hide} from \"core/dom\"\nimport * as p from \"core/properties\"\nimport {Text} from \"core/visuals\"\n\nexport class TitleView extends TextAnnotationView {\n  model: Title\n  visuals: Title.Visuals\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.visuals.text = new Text(this.model)\n  }\n\n  protected _get_location(): [number, number] {\n    const panel = this.model.panel!\n\n    const hmargin = this.model.offset\n    const vmargin = 5\n\n    let sx: number, sy: number\n    switch (panel.side) {\n      case 'above':\n      case 'below': {\n        switch (this.model.vertical_align) {\n          case 'top':    sy = panel._top.value     + vmargin; break\n          case 'middle': sy = panel._vcenter.value;           break\n          case 'bottom': sy = panel._bottom.value  - vmargin; break\n          default: throw new Error(\"unreachable code\")\n        }\n\n        switch (this.model.align) {\n          case 'left':   sx = panel._left.value    + hmargin; break\n          case 'center': sx = panel._hcenter.value;           break\n          case 'right':  sx = panel._right.value   - hmargin; break\n          default: throw new Error(\"unreachable code\")\n        }\n        break\n      }\n      case 'left': {\n        switch (this.model.vertical_align) {\n          case 'top':    sx = panel._left.value    - vmargin; break\n          case 'middle': sx = panel._hcenter.value;           break\n          case 'bottom': sx = panel._right.value   + vmargin; break\n          default: throw new Error(\"unreachable code\")\n        }\n\n        switch (this.model.align) {\n          case 'left':   sy = panel._bottom.value  - hmargin; break\n          case 'center': sy = panel._vcenter.value;           break\n          case 'right':  sy = panel._top.value     + hmargin; break\n          default: throw new Error(\"unreachable code\")\n        }\n        break\n      }\n      case 'right': {\n        switch (this.model.vertical_align) {\n          case 'top':    sx = panel._right.value   - vmargin; break\n          case 'middle': sx = panel._hcenter.value;           break\n          case 'bottom': sx = panel._left.value    + vmargin; break\n          default: throw new Error(\"unreachable code\")\n        }\n\n        switch (this.model.align) {\n          case 'left':   sy = panel._top.value     + hmargin; break\n          case 'center': sy = panel._vcenter.value;           break\n          case 'right':  sy = panel._bottom.value  - hmargin; break\n          default: throw new Error(\"unreachable code\")\n        }\n        break\n      }\n      default: throw new Error(\"unreachable code\")\n    }\n\n    return [sx, sy]\n  }\n\n  render(): void {\n    if (!this.model.visible) {\n      if (this.model.render_mode == 'css')\n        hide(this.el)\n      return\n    }\n\n    const {text} = this.model\n    if (text == null || text.length == 0)\n      return\n\n    this.model.text_baseline = this.model.vertical_align\n    this.model.text_align = this.model.align\n\n    const [sx, sy] = this._get_location()\n    const angle = this.model.panel!.get_label_angle_heuristic('parallel')\n\n    const draw = this.model.render_mode == 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this)\n    draw(this.plot_view.canvas_view.ctx, text, sx, sy, angle)\n  }\n\n  protected _get_size(): number {\n    const {text} = this.model\n    if (text == null || text.length == 0)\n      return 0\n    else {\n      const {ctx} = this.plot_view.canvas_view\n      this.visuals.text.set_value(ctx)\n      return ctx.measureText(text).ascent + 10\n    }\n  }\n}\n\nexport namespace Title {\n  // line:border_\n  export interface BorderLine {\n    border_line_color: Color\n    border_line_width: number\n    border_line_alpha: number\n    border_line_join: LineJoin\n    border_line_cap: LineCap\n    border_line_dash: number[]\n    border_line_dash_offset: number\n  }\n\n  // fill:background_\n  export interface BackgroundFill {\n    background_fill_color: Color\n    background_fill_alpha: number\n  }\n\n  export interface Mixins extends BorderLine, BackgroundFill {}\n\n  export interface Attrs extends TextAnnotation.Attrs, Mixins {\n    text: string\n    text_font: string // XXX: Font\n    text_font_size: FontSizeSpec\n    text_font_style: FontStyle\n    text_color: ColorSpec\n    text_alpha: NumberSpec\n    vertical_align: VerticalAlign\n    align: TextAlign\n    offset: number\n    text_align: TextAlign\n    text_baseline: TextBaseline\n  }\n\n  export interface Props extends TextAnnotation.Props {}\n\n  export type Visuals = TextAnnotation.Visuals\n}\n\nexport interface Title extends Title.Attrs {}\n\nexport class Title extends TextAnnotation {\n\n  properties: Title.Props\n\n  constructor(attrs?: Partial<Title.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Title'\n    this.prototype.default_view = TitleView\n\n    this.mixins(['line:border_', 'fill:background_'])\n\n    this.define({\n      text:            [ p.String,                    ],\n      text_font:       [ p.Font,          'helvetica' ],\n      text_font_size:  [ p.FontSizeSpec,  '10pt'      ],\n      text_font_style: [ p.FontStyle,     'bold'      ],\n      text_color:      [ p.ColorSpec,     '#444444'   ],\n      text_alpha:      [ p.NumberSpec,    1.0         ],\n      vertical_align:  [ p.VerticalAlign, 'bottom'    ],\n      align:           [ p.TextAlign,     'left'      ],\n      offset:          [ p.Number,        0           ],\n    })\n\n    this.override({\n      background_fill_color: null,\n      border_line_color: null,\n    })\n\n    this.internal({\n      text_align:    [ p.TextAlign,    'left'  ],\n      text_baseline: [ p.TextBaseline, 'bottom' ],\n    })\n  }\n}\nTitle.initClass()\n"]}