{"version":3,"sources":["models/glyphs/annulus.ts"],"names":[],"mappings":"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","file":"annulus.js","sourcesContent":["import {XYGlyph, XYGlyphView, XYGlyphData} from \"./xy_glyph\"\nimport {Arrayable} from \"core/types\"\nimport {PointGeometry} from \"core/geometry\"\nimport {DistanceSpec} from \"core/vectorization\"\nimport {LineMixinVector, FillMixinVector} from \"core/property_mixins\"\nimport {Line, Fill} from \"core/visuals\"\nimport * as hittest from \"core/hittest\"\nimport * as p from \"core/properties\"\nimport {IBBox} from \"core/util/bbox\"\nimport {Context2d} from \"core/util/canvas\"\nimport {is_ie} from \"core/util/compat\"\nimport {Selection} from \"../selections/selection\"\n\nexport interface AnnulusData extends XYGlyphData {\n  _inner_radius: Arrayable<number>\n  _outer_radius: Arrayable<number>\n\n  sinner_radius: Arrayable<number>\n  souter_radius: Arrayable<number>\n\n  max_inner_radius: number\n  max_outer_radius: number\n}\n\nexport interface AnnulusView extends AnnulusData {}\n\nexport class AnnulusView extends XYGlyphView {\n  model: Annulus\n  visuals: Annulus.Visuals\n\n  protected _map_data(): void {\n    if (this.model.properties.inner_radius.units == \"data\")\n      this.sinner_radius = this.sdist(this.renderer.xscale, this._x, this._inner_radius)\n    else\n      this.sinner_radius = this._inner_radius\n\n    if (this.model.properties.outer_radius.units == \"data\")\n      this.souter_radius = this.sdist(this.renderer.xscale, this._x, this._outer_radius)\n    else\n      this.souter_radius = this._outer_radius\n  }\n\n  protected _render(ctx: Context2d, indices: number[],\n                    {sx, sy, sinner_radius, souter_radius}: AnnulusData): void {\n    for (const i of indices) {\n      if (isNaN(sx[i] + sy[i] + sinner_radius[i] + souter_radius[i]))\n        continue\n\n      // Because this visual has a whole in it, it proved \"challenging\"\n      // for some browsers to render if drawn in one go --- i.e. it did not\n      // work on IE. If we render in two parts (upper and lower part),\n      // it is unambiguous what part should be filled. The line is\n      // better drawn in one go though, otherwise the part where the pieces\n      // meet will not be fully closed due to aa.\n\n      if (this.visuals.fill.doit) {\n        this.visuals.fill.set_vectorize(ctx, i)\n        ctx.beginPath()\n        if (is_ie) {\n          // Draw two halves of the donut. Works on IE, but causes an aa line on Safari.\n          for (const clockwise of [false, true]) {\n            ctx.arc(sx[i], sy[i], sinner_radius[i], 0, Math.PI, clockwise)\n            ctx.arc(sx[i], sy[i], souter_radius[i], Math.PI, 0, !clockwise)\n          }\n        } else {\n          // Draw donut in one go. Does not work on iE.\n          ctx.arc(sx[i], sy[i], sinner_radius[i], 0, 2 * Math.PI, true)\n          ctx.arc(sx[i], sy[i], souter_radius[i], 2 * Math.PI, 0, false)\n        }\n        ctx.fill()\n      }\n\n      if (this.visuals.line.doit) {\n        this.visuals.line.set_vectorize(ctx, i)\n        ctx.beginPath()\n        ctx.arc(sx[i], sy[i], sinner_radius[i], 0, 2*Math.PI)\n        ctx.moveTo(sx[i] + souter_radius[i], sy[i])\n        ctx.arc(sx[i], sy[i], souter_radius[i], 0, 2*Math.PI)\n        ctx.stroke()\n      }\n    }\n  }\n\n  protected _hit_point(geometry: PointGeometry): Selection {\n    const {sx, sy} = geometry\n    const x = this.renderer.xscale.invert(sx)\n    const x0 = x - this.max_outer_radius\n    const x1 = x + this.max_outer_radius\n\n    const y = this.renderer.yscale.invert(sy)\n    const y0 = y - this.max_outer_radius\n    const y1 = y + this.max_outer_radius\n\n    const hits: [number, number][] = []\n\n    const bbox = hittest.validate_bbox_coords([x0, x1], [y0, y1])\n    for (const i of this.index.indices(bbox)) {\n      const or2 = Math.pow(this.souter_radius[i], 2)\n      const ir2 = Math.pow(this.sinner_radius[i], 2)\n      const [sx0, sx1] = this.renderer.xscale.r_compute(x, this._x[i])\n      const [sy0, sy1] = this.renderer.yscale.r_compute(y, this._y[i])\n      const dist = Math.pow(sx0 - sx1, 2) + Math.pow(sy0 - sy1, 2)\n      if (dist <= or2 && dist >= ir2)\n        hits.push([i, dist])\n    }\n\n    return hittest.create_hit_test_result_from_hits(hits)\n  }\n\n  draw_legend_for_index(ctx: Context2d, {x0, y0, x1, y1}: IBBox, index: number): void {\n    const len = index + 1\n\n    const sx: number[] = new Array(len)\n    sx[index] = (x0 + x1)/2\n    const sy: number[] = new Array(len)\n    sy[index] = (y0 + y1)/2\n\n    const r = Math.min(Math.abs(x1 - x0), Math.abs(y1 - y0)) * 0.5\n\n    const sinner_radius: number[] = new Array(len)\n    sinner_radius[index] = r*0.4\n    const souter_radius: number[] = new Array(len)\n    souter_radius[index] = r*0.8\n\n    this._render(ctx, [index], {sx, sy, sinner_radius, souter_radius} as any) // XXX\n  }\n}\n\nexport namespace Annulus {\n  export interface Mixins extends LineMixinVector, FillMixinVector {}\n\n  export interface Attrs extends XYGlyph.Attrs, Mixins {\n    inner_radius: DistanceSpec\n    outer_radius: DistanceSpec\n  }\n\n  export interface Props extends XYGlyph.Props {\n    inner_radius: p.DistanceSpec\n    outer_radius: p.DistanceSpec\n  }\n\n  export interface Visuals extends XYGlyph.Visuals {\n    line: Line\n    fill: Fill\n  }\n}\n\nexport interface Annulus extends Annulus.Attrs {}\n\nexport class Annulus extends XYGlyph {\n\n  properties: Annulus.Props\n\n  constructor(attrs?: Partial<Annulus.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Annulus'\n    this.prototype.default_view = AnnulusView\n\n    this.mixins(['line', 'fill'])\n    this.define({\n      inner_radius: [ p.DistanceSpec ],\n      outer_radius: [ p.DistanceSpec ],\n    })\n  }\n}\nAnnulus.initClass()\n"]}