{"version":3,"sources":["models/tickers/datetime_ticker.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAErC,qDAAgD;AAChD,uDAAkD;AAClD,6CAAwC;AACxC,iDAA4C;AAC5C,+CAA0C;AAC1C,+BAA+D;AAgB/D;IAAoC,0CAAe;IAIjD,wBAAY,KAAqC;eAC/C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,wBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,gBAAgB,CAAA;QAEtC,IAAI,CAAC,QAAQ,CAAC;YACZ,eAAe,EAAE,CAAC;YAClB,OAAO,EAAE,cAAM,OAAA;gBACb,cAAc;gBACd,IAAI,gCAAc,CAAC;oBACjB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBACpB,IAAI,EAAE,EAAE;oBACR,YAAY,EAAE,CAAC;oBACf,YAAY,EAAE,GAAG,GAAG,gBAAS;oBAC7B,eAAe,EAAE,CAAC;iBACnB,CAAC;gBAEF,oBAAoB;gBACpB,IAAI,gCAAc,CAAC;oBACjB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;oBACpC,IAAI,EAAE,EAAE;oBACR,YAAY,EAAE,iBAAU;oBACxB,YAAY,EAAE,EAAE,GAAG,iBAAU;oBAC7B,eAAe,EAAE,CAAC;iBACnB,CAAC;gBAEF,SAAS;gBACT,IAAI,gCAAc,CAAC;oBACjB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC9B,IAAI,EAAE,IAAI;oBACV,YAAY,EAAE,eAAQ;oBACtB,YAAY,EAAE,EAAE,GAAG,eAAQ;oBAC3B,eAAe,EAAE,CAAC;iBACnB,CAAC;gBAEF,QAAQ;gBACR,IAAI,wBAAU,CAAC,EAAC,IAAI,EAAE,aAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;gBACpC,IAAI,wBAAU,CAAC,EAAC,IAAI,EAAE,aAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAC,CAAC;gBACvC,IAAI,wBAAU,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAC,CAAC;gBACtC,IAAI,wBAAU,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;gBAE/B,UAAU;gBACV,IAAI,4BAAY,CAAC,EAAC,MAAM,EAAE,aAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAC,CAAC;gBAC3C,IAAI,4BAAY,CAAC,EAAC,MAAM,EAAE,aAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAC,CAAC;gBAC3C,IAAI,4BAAY,CAAC,EAAC,MAAM,EAAE,aAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAC,CAAC;gBAC3C,IAAI,4BAAY,CAAC,EAAC,MAAM,EAAE,aAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAC,CAAC;gBAE3C,QAAQ;gBACR,IAAI,0BAAW,CAAC,EAAE,CAAC;aACpB,EA1Cc,CA0Cd;SACF,CAAC,CAAA;IACJ,CAAC;IACH,qBAAC;AAAD,CA1DA,AA0DC,CA1DmC,kCAAe,GA0DlD;AA1DY,wCAAc;AA4D3B,cAAc,CAAC,SAAS,EAAE,CAAA","file":"datetime_ticker.js","sourcesContent":["import {range} from \"core/util/array\"\n\nimport {AdaptiveTicker} from \"./adaptive_ticker\"\nimport {CompositeTicker} from \"./composite_ticker\"\nimport {DaysTicker} from \"./days_ticker\"\nimport {MonthsTicker} from \"./months_ticker\"\nimport {YearsTicker} from \"./years_ticker\"\nimport {ONE_MILLI,ONE_SECOND,ONE_MINUTE,ONE_HOUR} from \"./util\"\n\n// This is a decent ticker for time data (in milliseconds).\n// It could certainly be improved:\n// FIXME There should probably be a special ticker for years.\n// FIXME Some of the adaptive tickers probably have too many mantissas, which\n// leads to too-frequent tick transitions.\n\nexport namespace DatetimeTicker {\n  export interface Attrs extends CompositeTicker.Attrs {}\n\n  export interface Props extends CompositeTicker.Props {}\n}\n\nexport interface DatetimeTicker extends DatetimeTicker.Attrs {}\n\nexport class DatetimeTicker extends CompositeTicker {\n\n  properties: DatetimeTicker.Props\n\n  constructor(attrs?: Partial<DatetimeTicker.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"DatetimeTicker\"\n\n    this.override({\n      num_minor_ticks: 0,\n      tickers: () => [\n        // Sub-second.\n        new AdaptiveTicker({\n          mantissas: [1, 2, 5],\n          base: 10,\n          min_interval: 0,\n          max_interval: 500 * ONE_MILLI,\n          num_minor_ticks: 0,\n        }),\n\n        // Seconds, minutes.\n        new AdaptiveTicker({\n          mantissas: [1, 2, 5, 10, 15, 20, 30],\n          base: 60,\n          min_interval: ONE_SECOND,\n          max_interval: 30 * ONE_MINUTE,\n          num_minor_ticks: 0,\n        }),\n\n        // Hours.\n        new AdaptiveTicker({\n          mantissas: [1, 2, 4, 6, 8, 12],\n          base: 24.0,\n          min_interval: ONE_HOUR,\n          max_interval: 12 * ONE_HOUR,\n          num_minor_ticks: 0,\n        }),\n\n        // Days.\n        new DaysTicker({days: range(1, 32)}),\n        new DaysTicker({days: range(1, 31, 3)}),\n        new DaysTicker({days: [1, 8, 15, 22]}),\n        new DaysTicker({days: [1, 15]}),\n\n        // Months.\n        new MonthsTicker({months: range(0, 12, 1)}),\n        new MonthsTicker({months: range(0, 12, 2)}),\n        new MonthsTicker({months: range(0, 12, 4)}),\n        new MonthsTicker({months: range(0, 12, 6)}),\n\n        // Years\n        new YearsTicker({}),\n      ],\n    })\n  }\n}\n\nDatetimeTicker.initClass()\n"]}