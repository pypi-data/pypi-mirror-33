{"version":3,"sources":["models/annotations/color_bar.ts"],"names":[],"mappings":"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","file":"color_bar.js","sourcesContent":["import {Annotation, AnnotationView} from \"./annotation\"\nimport {ContinuousTicker} from \"../tickers/continuous_ticker\"\nimport {TickFormatter} from \"../formatters/tick_formatter\"\nimport {BasicTicker} from \"../tickers/basic_ticker\"\nimport {BasicTickFormatter} from \"../formatters/basic_tick_formatter\"\nimport {ContinuousColorMapper} from \"../mappers/continuous_color_mapper\"\nimport {LinearColorMapper} from \"../mappers/linear_color_mapper\"\nimport {LinearScale} from \"../scales/linear_scale\"\nimport {Scale} from \"../scales/scale\"\nimport {LogScale} from \"../scales/log_scale\"\nimport {Range1d} from \"../ranges/range1d\"\n\nimport {Arrayable, Color} from \"core/types\"\nimport {Line, Fill, Text} from \"core/visuals\"\nimport {FontStyle, TextAlign, TextBaseline, LineJoin, LineCap} from \"core/enums\"\nimport {LegendLocation, Orientation} from \"core/enums\"\nimport * as p from \"core/properties\"\nimport * as text_util from \"core/util/text\"\nimport {min, max, range, reversed} from \"core/util/array\"\nimport {map} from \"core/util/arrayable\"\nimport {isEmpty} from \"core/util/object\"\nimport {isString, isArray} from \"core/util/types\"\nimport {Context2d} from \"core/util/canvas\"\n\nconst SHORT_DIM = 25\nconst LONG_DIM_MIN_SCALAR = 0.3\nconst LONG_DIM_MAX_SCALAR = 0.8\n\nexport type Coords = [Arrayable<number>, Arrayable<number>]\n\nexport type TickInfo = {\n  coords: {major: Coords, minor: Coords}\n  labels: {major: string[]}\n}\n\nexport class ColorBarView extends AnnotationView {\n  model: ColorBar\n  visuals: ColorBar.Visuals\n\n  protected image: HTMLCanvasElement\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this._set_canvas_image()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.properties.visible.change, () => this.plot_view.request_render())\n    this.connect(this.model.ticker.change, () => this.plot_view.request_render())\n    this.connect(this.model.formatter.change, () => this.plot_view.request_render())\n    if (this.model.color_mapper != null) {\n      this.connect(this.model.color_mapper.change, () => {\n        this._set_canvas_image()\n        this.plot_view.request_render()\n      })\n    }\n  }\n\n  protected _get_size(): number {\n    if (this.model.color_mapper == null)\n      return 0\n\n    const bbox = this.compute_legend_dimensions()\n    const {side} = this.model.panel!\n\n    switch (side) {\n      case \"above\":\n      case \"below\":\n        return bbox.height\n      case \"left\":\n      case \"right\":\n        return bbox.width\n      default:\n        throw new Error(\"unreachable code\")\n    }\n  }\n\n  protected _set_canvas_image(): void {\n    if (this.model.color_mapper == null)\n      return\n\n    let {palette} = this.model.color_mapper\n\n    if (this.model.orientation == 'vertical')\n      palette = reversed(palette)\n\n    let w: number, h: number\n    switch (this.model.orientation) {\n      case \"vertical\": {\n        [w, h] = [1, palette.length]\n        break\n      }\n      case \"horizontal\": {\n        [w, h] = [palette.length, 1]\n        break\n      }\n      default:\n        throw new Error(\"unreachable code\")\n    }\n\n    const canvas = document.createElement('canvas')\n    canvas.width = w\n    canvas.height = h\n    const image_ctx = canvas.getContext('2d')!\n    const image_data = image_ctx.getImageData(0, 0, w, h)\n\n    // We always want to draw the entire palette linearly, so we create a new\n    // LinearColorMapper instance and map a monotonic range of values with\n    // length = palette.length to get each palette color in order.\n    const cmap = new LinearColorMapper({palette}).rgba_mapper\n    const buf8 = cmap.v_compute(range(0, palette.length))\n    image_data.data.set(buf8)\n    image_ctx.putImageData(image_data, 0, 0)\n\n    this.image = canvas\n  }\n\n  compute_legend_dimensions(): {width: number, height: number} {\n    const image_dimensions = this.model._computed_image_dimensions()\n    const [image_height, image_width] = [image_dimensions.height, image_dimensions.width]\n\n    const label_extent = this._get_label_extent()\n    const title_extent = this.model._title_extent()\n    const tick_extent = this.model._tick_extent()\n    const {padding} = this.model\n\n    let legend_height: number, legend_width: number\n    switch (this.model.orientation) {\n      case \"vertical\":\n        legend_height = image_height + title_extent + 2*padding\n        legend_width = image_width + tick_extent + label_extent + 2*padding\n        break\n      case \"horizontal\":\n        legend_height = image_height + title_extent + tick_extent + label_extent + 2*padding\n        legend_width = image_width + 2*padding\n        break\n      default:\n        throw new Error(\"unreachable code\")\n    }\n\n    return {width: legend_width, height: legend_height}\n  }\n\n  compute_legend_location(): {sx: number, sy: number} {\n    const legend_dimensions = this.compute_legend_dimensions()\n    const [legend_height, legend_width] = [legend_dimensions.height, legend_dimensions.width]\n\n    const legend_margin = this.model.margin\n\n    const panel = this.model.panel != null ? this.model.panel : this.plot_view.frame\n    const [hr, vr] = panel.bbox.ranges\n    const {location} = this.model\n\n    let sx: number, sy: number\n    if (isString(location)) {\n      switch (location) {\n        case 'top_left':\n          sx = hr.start + legend_margin\n          sy = vr.start + legend_margin\n          break\n        case 'top_center':\n          sx = (hr.end + hr.start)/2 - legend_width/2\n          sy = vr.start + legend_margin\n          break\n        case 'top_right':\n          sx = hr.end - legend_margin - legend_width\n          sy = vr.start + legend_margin\n          break\n        case 'bottom_right':\n          sx = hr.end - legend_margin - legend_width\n          sy = vr.end - legend_margin - legend_height\n          break\n        case 'bottom_center':\n          sx = (hr.end + hr.start)/2 - legend_width/2\n          sy = vr.end - legend_margin - legend_height\n          break\n        case 'bottom_left':\n          sx = hr.start + legend_margin\n          sy = vr.end - legend_margin - legend_height\n          break\n        case 'center_left':\n          sx = hr.start + legend_margin\n          sy = (vr.end + vr.start)/2 - legend_height/2\n          break\n        case 'center':\n          sx = (hr.end + hr.start)/2 - legend_width/2\n          sy = (vr.end + vr.start)/2 - legend_height/2\n          break\n        case 'center_right':\n          sx = hr.end - legend_margin - legend_width\n          sy = (vr.end + vr.start)/2 - legend_height/2\n          break\n        default:\n          throw new Error(\"unreachable code\")\n      }\n    } else if (isArray(location) && location.length == 2) {\n      const [vx, vy] = location\n      sx = panel.xview.compute(vx)\n      sy = panel.yview.compute(vy) - legend_height\n    } else\n      throw new Error(\"unreachable code\")\n\n    return {sx, sy}\n  }\n\n  render(): void {\n    if (!this.model.visible || this.model.color_mapper == null)\n      return\n\n    const {ctx} = this.plot_view.canvas_view\n    ctx.save()\n\n    const {sx, sy} = this.compute_legend_location()\n    ctx.translate(sx, sy)\n    this._draw_bbox(ctx)\n\n    const image_offset = this._get_image_offset()\n    ctx.translate(image_offset.x, image_offset.y)\n\n    this._draw_image(ctx)\n\n    if (this.model.color_mapper.low != null && this.model.color_mapper.high != null) {\n      const tick_info = this.model.tick_info()\n      this._draw_major_ticks(ctx, tick_info)\n      this._draw_minor_ticks(ctx, tick_info)\n      this._draw_major_labels(ctx, tick_info)\n    }\n\n    if (this.model.title)\n      this._draw_title(ctx)\n\n    ctx.restore()\n  }\n\n  protected _draw_bbox(ctx: Context2d): void {\n    const bbox = this.compute_legend_dimensions()\n    ctx.save()\n    if (this.visuals.background_fill.doit) {\n      this.visuals.background_fill.set_value(ctx)\n      ctx.fillRect(0, 0, bbox.width, bbox.height)\n    }\n    if (this.visuals.border_line.doit) {\n      this.visuals.border_line.set_value(ctx)\n      ctx.strokeRect(0, 0, bbox.width, bbox.height)\n    }\n    ctx.restore()\n  }\n\n  protected _draw_image(ctx: Context2d): void {\n    const image = this.model._computed_image_dimensions()\n    ctx.save()\n    ctx.setImageSmoothingEnabled(false)\n    ctx.globalAlpha = this.model.scale_alpha\n    ctx.drawImage(this.image, 0, 0, image.width, image.height)\n    if (this.visuals.bar_line.doit) {\n      this.visuals.bar_line.set_value(ctx)\n      ctx.strokeRect(0, 0, image.width, image.height)\n    }\n    ctx.restore()\n  }\n\n  protected _draw_major_ticks(ctx: Context2d, tick_info: TickInfo): void {\n    if (!this.visuals.major_tick_line.doit)\n      return\n\n    const [nx, ny] = this.model._normals()\n    const image = this.model._computed_image_dimensions()\n    const [x_offset, y_offset] = [image.width * nx, image.height * ny]\n\n    const [sx, sy] = tick_info.coords.major\n    const tin = this.model.major_tick_in\n    const tout = this.model.major_tick_out\n\n    ctx.save()\n    ctx.translate(x_offset, y_offset)\n    this.visuals.major_tick_line.set_value(ctx)\n    for (let i = 0, end = sx.length; i < end; i++) {\n      ctx.beginPath()\n      ctx.moveTo(Math.round(sx[i] + nx*tout), Math.round(sy[i] + ny*tout))\n      ctx.lineTo(Math.round(sx[i] - nx*tin), Math.round(sy[i] - ny*tin))\n      ctx.stroke()\n    }\n    ctx.restore()\n  }\n\n  protected _draw_minor_ticks(ctx: Context2d, tick_info: TickInfo): void {\n    if (!this.visuals.minor_tick_line.doit)\n      return\n\n    const [nx, ny] = this.model._normals()\n    const image = this.model._computed_image_dimensions()\n    const [x_offset, y_offset] = [image.width * nx, image.height * ny]\n\n    const [sx, sy] = tick_info.coords.minor\n    const tin = this.model.minor_tick_in\n    const tout = this.model.minor_tick_out\n\n    ctx.save()\n    ctx.translate(x_offset, y_offset)\n    this.visuals.minor_tick_line.set_value(ctx)\n    for (let i = 0, end = sx.length; i < end; i++) {\n      ctx.beginPath()\n      ctx.moveTo(Math.round(sx[i] + nx*tout), Math.round(sy[i] + ny*tout))\n      ctx.lineTo(Math.round(sx[i] - nx*tin), Math.round(sy[i] - ny*tin))\n      ctx.stroke()\n    }\n    ctx.restore()\n  }\n\n  protected _draw_major_labels(ctx: Context2d, tick_info: TickInfo): void {\n    if (!this.visuals.major_label_text.doit)\n      return\n\n    const [nx, ny] = this.model._normals()\n    const image = this.model._computed_image_dimensions()\n    const [x_offset, y_offset] = [image.width * nx, image.height * ny]\n    const standoff = (this.model.label_standoff + this.model._tick_extent())\n    const [x_standoff, y_standoff] = [standoff*nx, standoff*ny]\n\n    const [sx, sy] = tick_info.coords.major\n\n    const formatted_labels = tick_info.labels.major\n\n    this.visuals.major_label_text.set_value(ctx)\n\n    ctx.save()\n    ctx.translate(x_offset + x_standoff, y_offset + y_standoff)\n    for (let i = 0, end = sx.length; i < end; i++) {\n      ctx.fillText(formatted_labels[i],\n                   Math.round(sx[i] + nx*this.model.label_standoff),\n                   Math.round(sy[i] + ny*this.model.label_standoff))\n    }\n    ctx.restore()\n  }\n\n  protected _draw_title(ctx: Context2d): void {\n    if (!this.visuals.title_text.doit)\n      return\n\n    ctx.save()\n    this.visuals.title_text.set_value(ctx)\n    ctx.fillText(this.model.title, 0, -this.model.title_standoff)\n    ctx.restore()\n  }\n\n  protected _get_label_extent(): number {\n    const major_labels = this.model.tick_info().labels.major\n\n    let label_extent: number\n    if (this.model.color_mapper.low != null && this.model.color_mapper.high != null && !isEmpty(major_labels)) {\n      const {ctx} = this.plot_view.canvas_view\n      ctx.save()\n      this.visuals.major_label_text.set_value(ctx)\n      switch (this.model.orientation) {\n        case \"vertical\":\n          label_extent = max((major_labels.map((label) => ctx.measureText(label.toString()).width)))\n          break\n        case \"horizontal\":\n          label_extent = text_util.get_text_height(this.visuals.major_label_text.font_value()).height\n          break\n        default:\n          throw new Error(\"unreachable code\")\n      }\n\n      label_extent += this.model.label_standoff\n      ctx.restore()\n    } else\n      label_extent = 0\n\n    return label_extent\n  }\n\n  protected _get_image_offset(): {x: number, y: number} {\n    // Returns image offset relative to legend bounding box\n    const x = this.model.padding\n    const y = this.model.padding + this.model._title_extent()\n    return {x, y}\n  }\n}\n\nexport namespace ColorBar {\n  // text:major_label_\n  export interface MajorLabelText {\n    major_label_text_font: string\n    major_label_text_font_size: string\n    major_label_text_font_style: FontStyle\n    major_label_text_color: Color\n    major_label_text_alpha: number\n    major_label_text_align: TextAlign\n    major_label_text_baseline: TextBaseline\n    major_label_text_line_height: number\n  }\n\n  // text:title_\n  export interface TitleText {\n    title_text_font: string\n    title_text_font_size: string\n    title_text_font_style: FontStyle\n    title_text_color: Color\n    title_text_alpha: number\n    title_text_align: TextAlign\n    title_text_baseline: TextBaseline\n    title_text_line_height: number\n  }\n\n  // line:major_tick_\n  export interface MajorTickLine {\n    major_tick_line_color: Color\n    major_tick_line_width: number\n    major_tick_line_alpha: number\n    major_tick_line_join: LineJoin\n    major_tick_line_cap: LineCap\n    major_tick_line_dash: number[]\n    major_tick_line_dash_offset: number\n  }\n\n  // line:minor_tick_\n  export interface MinorTickLine {\n    minor_tick_line_color: Color\n    minor_tick_line_width: number\n    minor_tick_line_alpha: number\n    minor_tick_line_join: LineJoin\n    minor_tick_line_cap: LineCap\n    minor_tick_line_dash: number[]\n    minor_tick_line_dash_offset: number\n  }\n\n  // line:border_\n  export interface BorderLine {\n    border_line_color: Color\n    border_line_width: number\n    border_line_alpha: number\n    border_line_join: LineJoin\n    border_line_cap: LineCap\n    border_line_dash: number[]\n    border_line_dash_offset: number\n  }\n\n  // line:bar_\n  export interface BarLine {\n    bar_line_color: Color\n    bar_line_width: number\n    bar_line_alpha: number\n    bar_line_join: LineJoin\n    bar_line_cap: LineCap\n    bar_line_dash: number[]\n    bar_line_dash_offset: number\n  }\n\n  // fill:background_\n  export interface BackgroundFill {\n    background_fill_color: Color\n    background_fill_alpha: number\n  }\n\n  export interface Mixins extends MajorLabelText, TitleText, MajorTickLine, MinorTickLine, BorderLine, BarLine, BackgroundFill {}\n\n  export interface Attrs extends Annotation.Attrs, Mixins {\n    location: LegendLocation | [number, number]\n    orientation: Orientation\n    title: string\n    title_standoff: number\n    width: number | \"auto\"\n    height: number | \"auto\"\n    scale_alpha: number\n    ticker: ContinuousTicker\n    formatter: TickFormatter\n    major_label_overrides: {[key: string]: string}\n    color_mapper: ContinuousColorMapper\n    label_standoff: number\n    margin: number\n    padding: number\n    major_tick_in: number\n    major_tick_out: number\n    minor_tick_in: number\n    minor_tick_out: number\n  }\n\n  export interface Props extends Annotation.Props {}\n\n  export type Visuals = Annotation.Visuals & {\n    major_label_text: Text\n    title_text: Text\n    major_tick_line: Line\n    minor_tick_line: Line\n    border_line: Line\n    bar_line: Line\n    background_fill: Fill\n  }\n}\n\nexport interface ColorBar extends ColorBar.Attrs {}\n\nexport class ColorBar extends Annotation {\n\n  properties: ColorBar.Props\n\n  constructor(attrs?: Partial<ColorBar.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'ColorBar'\n    this.prototype.default_view = ColorBarView\n\n    this.mixins([\n      'text:major_label_',\n      'text:title_',\n      'line:major_tick_',\n      'line:minor_tick_',\n      'line:border_',\n      'line:bar_',\n      'fill:background_',\n    ])\n\n    this.define({\n      location:                [ p.Any,         'top_right' ],\n      orientation:             [ p.Orientation, 'vertical'  ],\n      title:                   [ p.String,                  ],\n      title_standoff:          [ p.Number,      2           ],\n      width:                   [ p.Any,         'auto'      ],\n      height:                  [ p.Any,         'auto'      ],\n      scale_alpha:             [ p.Number,      1.0         ],\n      ticker:                  [ p.Instance,    () => new BasicTicker()        ],\n      formatter:               [ p.Instance,    () => new BasicTickFormatter() ],\n      major_label_overrides:   [ p.Any,         {}          ],\n      color_mapper:            [ p.Instance                 ],\n      label_standoff:          [ p.Number,      5           ],\n      margin:                  [ p.Number,      30          ],\n      padding:                 [ p.Number,      10          ],\n      major_tick_in:           [ p.Number,      5           ],\n      major_tick_out:          [ p.Number,      0           ],\n      minor_tick_in:           [ p.Number,      0           ],\n      minor_tick_out:          [ p.Number,      0           ],\n    })\n\n    this.override({\n      background_fill_color: \"#ffffff\",\n      background_fill_alpha: 0.95,\n      bar_line_color: null,\n      border_line_color: null,\n      major_label_text_align: \"center\",\n      major_label_text_baseline: \"middle\",\n      major_label_text_font_size: \"8pt\",\n      major_tick_line_color: \"#ffffff\",\n      minor_tick_line_color: null,\n      title_text_font_size: \"10pt\",\n      title_text_font_style: \"italic\",\n    })\n  }\n\n  _normals(): [number, number] {\n    return this.orientation == 'vertical' ? [1, 0] : [0, 1]\n  }\n\n  _title_extent(): number {\n    const font_value = this.title_text_font + \" \" + this.title_text_font_size + \" \" + this.title_text_font_style\n    const title_extent = this.title ? text_util.get_text_height(font_value).height + this.title_standoff : 0\n    return title_extent\n  }\n\n  _tick_extent(): number {\n    if (this.color_mapper.low != null && this.color_mapper.high != null)\n      return max([this.major_tick_out, this.minor_tick_out])\n    else\n      return 0\n  }\n\n  _computed_image_dimensions(): {height: number, width: number} {\n    /*\n    Heuristics to determine ColorBar image dimensions if set to \"auto\"\n\n    Note: Returns the height/width values for the ColorBar's scale image, not\n    the dimensions of the entire ColorBar.\n\n    If the short dimension (the width of a vertical bar or height of a\n    horizontal bar) is set to \"auto\", the resulting dimension will be set to\n    25 px.\n\n    For a ColorBar in a side panel with the long dimension (the height of a\n    vertical bar or width of a horizontal bar) set to \"auto\", the\n    resulting dimension will be as long as the adjacent frame edge, so that the\n    bar \"fits\" to the plot.\n\n    For a ColorBar in the plot frame with the long dimension set to \"auto\", the\n    resulting dimension will be the greater of:\n      * The length of the color palette * 25px\n      * The parallel frame dimension * 0.30\n        (i.e the frame height for a vertical ColorBar)\n    But not greater than:\n      * The parallel frame dimension * 0.80\n    */\n\n    const frame_height = this.plot.plot_canvas.frame._height.value\n    const frame_width = this.plot.plot_canvas.frame._width.value\n    const title_extent = this._title_extent()\n\n    let height: number, width: number\n    switch (this.orientation) {\n      case \"vertical\": {\n        if (this.height == 'auto') {\n          if (this.panel != null)\n            height = frame_height - 2*this.padding - title_extent\n          else {\n            height = max([this.color_mapper.palette.length*SHORT_DIM, frame_height*LONG_DIM_MIN_SCALAR])\n            height = min([height, frame_height*LONG_DIM_MAX_SCALAR - 2*this.padding - title_extent])\n          }\n        } else\n          height = this.height\n\n        width = this.width == 'auto' ? SHORT_DIM : this.width\n        break\n      }\n      case \"horizontal\": {\n        height = this.height == 'auto' ? SHORT_DIM : this.height\n\n        if (this.width == 'auto') {\n          if (this.panel != null)\n            width = frame_width - 2*this.padding\n          else {\n            width = max([this.color_mapper.palette.length*SHORT_DIM, frame_width*LONG_DIM_MIN_SCALAR])\n            width = min([width, frame_width*LONG_DIM_MAX_SCALAR - 2*this.padding])\n          }\n        } else\n          width = this.width\n        break\n      }\n      default:\n        throw new Error(\"unreachable code\")\n    }\n\n    return {width, height}\n  }\n\n  protected _tick_coordinate_scale(scale_length: number): Scale {\n    /*\n    Creates and returns a scale instance that maps the `color_mapper` range\n    (low to high) to a screen space range equal to the length of the ColorBar's\n    scale image. The scale is used to calculate the tick coordinates in screen\n    coordinates for plotting purposes.\n\n    Note: the type of color_mapper has to match the type of scale (i.e.\n    a LinearColorMapper will require a corresponding LinearScale instance).\n    */\n\n    const ranges = {\n      source_range: new Range1d({\n        start: this.color_mapper.low,\n        end: this.color_mapper.high,\n      }),\n      target_range: new Range1d({\n        start: 0,\n        end: scale_length,\n      }),\n    }\n\n    switch (this.color_mapper.type) {\n      case \"LinearColorMapper\": return new LinearScale(ranges)\n      case \"LogColorMapper\":    return new LogScale(ranges)\n      default:\n        throw new Error(\"unreachable code\")\n    }\n  }\n\n  protected _format_major_labels(initial_labels: number[], major_ticks: Arrayable<number>): string[] {\n    // XXX: passing null as cross_loc probably means MercatorTickFormatters, etc\n    // will not function properly in conjunction with colorbars\n    const formatted_labels = this.formatter.doFormat(initial_labels, null as any)\n\n    for (let i = 0, end = major_ticks.length; i < end; i++) {\n      if (major_ticks[i] in this.major_label_overrides)\n        formatted_labels[i] = this.major_label_overrides[major_ticks[i]]\n    }\n\n    return formatted_labels\n  }\n\n  tick_info(): TickInfo {\n    const image_dimensions = this._computed_image_dimensions()\n\n    let scale_length: number\n    switch (this.orientation) {\n      case \"vertical\": {\n        scale_length = image_dimensions.height\n        break\n      }\n      case \"horizontal\": {\n        scale_length = image_dimensions.width\n        break\n      }\n      default:\n        throw new Error(\"unreachable code\")\n    }\n\n    const scale = this._tick_coordinate_scale(scale_length)\n    const [i, j] = this._normals()\n    const [start, end] = [this.color_mapper.low, this.color_mapper.high]\n\n    // XXX: passing null as cross_loc probably means MercatorTickers, etc\n    // will not function properly in conjunction with colorbars\n    const ticks = this.ticker.get_ticks(start, end, null, null, this.ticker.desired_num_ticks)\n\n    const majors = ticks.major\n    const minors = ticks.minor\n\n    const major_coords: [number[], number[]] = [[], []]\n    const minor_coords: [number[], number[]] = [[], []]\n\n    for (let ii = 0, _end = majors.length; ii < _end; ii++) {\n      if (majors[ii] < start || majors[ii] > end)\n        continue\n\n      major_coords[i].push(majors[ii])\n      major_coords[j].push(0)\n    }\n\n    for (let ii = 0, _end = minors.length; ii < _end; ii++) {\n      if (minors[ii] < start || minors[ii] > end)\n        continue\n\n      minor_coords[i].push(minors[ii])\n      minor_coords[j].push(0)\n    }\n\n    const labels = {major: this._format_major_labels(major_coords[i], majors)}\n\n\n    const coords: {major: Coords, minor: Coords} = {\n      major: [[], []],\n      minor: [[], []],\n    }\n\n    coords.major[i] = scale.v_compute(major_coords[i])\n    coords.minor[i] = scale.v_compute(minor_coords[i])\n\n    coords.major[j] = major_coords[j]\n    coords.minor[j] = minor_coords[j]\n\n    // Because we want the scale to be reversed\n    if (this.orientation == 'vertical') {\n      coords.major[i] = map(coords.major[i], (coord) => scale_length - coord)\n      coords.minor[i] = map(coords.minor[i], (coord) => scale_length - coord)\n    }\n\n    return {coords, labels}\n  }\n}\nColorBar.initClass()\n"]}