{"version":3,"sources":["models/axes/categorical_axis.ts"],"names":[],"mappings":"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","file":"categorical_axis.js","sourcesContent":["import {Axis, AxisView, Extents, TickCoords, Coords} from \"./axis\"\n\nimport {CategoricalTicker} from \"../tickers/categorical_ticker\"\nimport {CategoricalTickFormatter} from \"../formatters/categorical_tick_formatter\"\nimport {FactorRange, Factor} from \"../ranges/factor_range\"\n\nimport * as p from \"core/properties\"\nimport {Text, Line} from \"core/visuals\"\nimport {Color} from \"core/types\"\nimport {FontStyle, TextAlign, TextBaseline, LineJoin, LineCap, TickLabelOrientation} from \"core/enums\"\nimport {Context2d} from \"core/util/canvas\"\nimport {Orient} from \"core/layout/side_panel\"\n\nexport type CategoricalTickCoords = TickCoords & {\n  mids: Coords\n  tops: Coords\n}\n\nexport class CategoricalAxisView extends AxisView {\n  model: CategoricalAxis\n  visuals: CategoricalAxis.Visuals\n\n  protected _render(ctx: Context2d, extents: Extents, tick_coords: TickCoords): void {\n    this._draw_group_separators(ctx, extents, tick_coords)\n  }\n\n  protected _draw_group_separators(ctx: Context2d, _extents: Extents, _tick_coords: TickCoords): void {\n    const [range,] = (this.model.ranges as any) as [FactorRange, FactorRange]\n    const [start, end] = this.model.computed_bounds\n\n    if (!range.tops || range.tops.length < 2 || !this.visuals.separator_line.doit)\n      return\n\n    const dim = this.model.dimension\n    const alt = (dim + 1) % 2\n\n    const coords: Coords = [[], []]\n\n    let ind = 0\n    for (let i = 0; i < range.tops.length - 1; i++) {\n      let first: Factor, last: Factor\n\n      for (let j = ind; j < range.factors.length; j++) {\n        if (range.factors[j][0] == range.tops[i+1]) {\n          [first, last] = [range.factors[j-1], range.factors[j]]\n          ind = j\n          break\n        }\n      }\n\n      const pt = (range.synthetic(first!) + range.synthetic(last!))/2\n      if (pt > start && pt < end) {\n        coords[dim].push(pt)\n        coords[alt].push(this.model.loc)\n      }\n    }\n\n    const tex = this._tick_label_extent()\n    this._draw_ticks(ctx, coords, -3, (tex-6), this.visuals.separator_line)\n  }\n\n  protected _draw_major_labels(ctx: Context2d, extents: Extents, _tick_coords: TickCoords): void {\n    const info = this._get_factor_info()\n\n    let standoff = extents.tick + this.model.major_label_standoff\n    for (let i = 0; i < info.length; i++) {\n      const [labels, coords, orient, visuals] = info[i]\n      this._draw_oriented_labels(ctx, labels, coords, orient, this.model.panel.side, standoff, visuals)\n      standoff += extents.tick_label[i]\n    }\n  }\n\n  protected _tick_label_extents(): number[] {\n    const info = this._get_factor_info()\n\n    const extents = []\n    for (const [labels,, orient, visuals] of info) {\n      const extent = this._oriented_labels_extent(labels, orient, this.model.panel.side, this.model.major_label_standoff, visuals)\n      extents.push(extent)\n    }\n\n    return extents\n  }\n\n  protected _get_factor_info(): [string[], Coords, Orient | number, Text][] {\n    const [range,] = (this.model.ranges as any) as [FactorRange, FactorRange]\n    const [start, end] = this.model.computed_bounds\n    const loc = this.model.loc\n\n    const ticks = this.model.ticker.get_ticks(start, end, range, loc, {})\n    const coords = this.model.tick_coords\n\n    const info: [string[], Coords, Orient | number, Text][] = []\n\n    if (range.levels == 1) {\n      const labels = this.model.formatter.doFormat(ticks.major as string[], this.model)\n      info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text])\n    } else if (range.levels == 2) {\n      const labels = this.model.formatter.doFormat(ticks.major.map((x) => x[1]), this.model)\n      info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text])\n      info.push([ticks.tops as string[], coords.tops, this.model.group_label_orientation, this.visuals.group_text])\n    } else if (range.levels == 3) {\n      const labels = this.model.formatter.doFormat(ticks.major.map((x) => x[2]), this.model)\n      const mid_labels = ticks.mids.map((x) => x[1])\n      info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text])\n      info.push([mid_labels as string[], coords.mids, this.model.subgroup_label_orientation, this.visuals.subgroup_text])\n      info.push([ticks.tops as string[], coords.tops, this.model.group_label_orientation, this.visuals.group_text])\n    }\n\n    return info\n  }\n}\n\nexport namespace CategoricalAxis {\n  // line:separator_\n  export interface SeparatorLine {\n    separator_line_color: Color\n    separator_line_width: number\n    separator_line_alpha: number\n    separator_line_join: LineJoin\n    separator_line_cap: LineCap\n    separator_line_dash: number[]\n    separator_line_dash_offset: number\n  }\n\n  // text:group_\n  export interface GroupText {\n    group_text_font: string\n    group_text_font_size: string\n    group_text_font_style: FontStyle\n    group_text_color: Color\n    group_text_alpha: number\n    group_text_align: TextAlign\n    group_text_baseline: TextBaseline\n    group_text_line_height: number\n  }\n\n  // text:subgroup_\n  export interface SubgroupText {\n    subgroup_text_font: string\n    subgroup_text_font_size: string\n    subgroup_text_font_style: FontStyle\n    subgroup_text_color: Color\n    subgroup_text_alpha: number\n    subgroup_text_align: TextAlign\n    subgroup_text_baseline: TextBaseline\n    subgroup_text_line_height: number\n  }\n\n  export interface Mixins extends SeparatorLine, GroupText, SubgroupText {}\n\n  export interface Attrs extends Axis.Attrs, Mixins {\n    ticker: CategoricalTicker\n    formatter: CategoricalTickFormatter\n    group_label_orientation: TickLabelOrientation | number\n    subgroup_label_orientation: TickLabelOrientation | number\n  }\n\n  export interface Props extends Axis.Props {}\n\n  export type Visuals = Axis.Visuals & {\n    separator_line: Line,\n    group_text: Text,\n    subgroup_text: Text,\n  }\n}\n\nexport interface CategoricalAxis extends CategoricalAxis.Attrs {}\n\nexport class CategoricalAxis extends Axis {\n\n  properties: CategoricalAxis.Props\n\n  ticker: CategoricalTicker\n  formatter: CategoricalTickFormatter\n\n  constructor(attrs?: Partial<CategoricalAxis.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"CategoricalAxis\"\n    this.prototype.default_view = CategoricalAxisView\n\n    this.mixins([\n      \"line:separator_\",\n      \"text:group_\",\n      \"text:subgroup_\",\n    ])\n\n    this.define({\n      group_label_orientation:    [ p.Any, \"parallel\" ], // TODO: p.TickLabelOrientation | p.Number\n      subgroup_label_orientation: [ p.Any, \"parallel\" ], // TODO: p.TickLabelOrientation | p.Number\n    })\n\n    this.override({\n      ticker: () => new CategoricalTicker(),\n      formatter: () => new CategoricalTickFormatter(),\n      separator_line_color: \"lightgrey\",\n      separator_line_width: 2,\n      group_text_font_style: \"bold\",\n      group_text_font_size: \"8pt\",\n      group_text_color: \"grey\",\n      subgroup_text_font_style: \"bold\",\n      subgroup_text_font_size: \"8pt\",\n    })\n  }\n\n  get tick_coords(): CategoricalTickCoords {\n    const i = this.dimension\n    const j = (i + 1) % 2\n    const [range,] = (this.ranges as any) as [FactorRange, FactorRange]\n    const [start, end] = this.computed_bounds\n\n    const ticks = this.ticker.get_ticks(start, end, range, this.loc, {})\n\n    const coords: CategoricalTickCoords = {\n      major: [[], []],\n      mids:  [[], []],\n      tops:  [[], []],\n      minor: [[], []],\n    }\n\n    coords.major[i] = ticks.major as any\n    coords.major[j] = ticks.major.map((_x) => this.loc)\n\n    if (range.levels == 3)\n      coords.mids[i] = ticks.mids as any\n      coords.mids[j] = ticks.mids.map((_x) => this.loc)\n\n    if (range.levels > 1)\n      coords.tops[i] = ticks.tops as any\n      coords.tops[j] = ticks.tops.map((_x) => this.loc)\n\n    return coords\n  }\n}\nCategoricalAxis.initClass()\n"]}