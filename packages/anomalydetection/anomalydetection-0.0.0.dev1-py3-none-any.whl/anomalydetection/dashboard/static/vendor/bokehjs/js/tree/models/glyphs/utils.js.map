{"version":3,"sources":["models/glyphs/utils.ts"],"names":[],"mappings":";;AAIA,6BAAoC,OAA+B,EAAE,GAAc,EAAE,EAAuB,EAAE,KAAa;QAArC,UAAE,EAAE,UAAE,EAAE,UAAE,EAAE,UAAE;IAClG,GAAG,CAAC,IAAI,EAAE,CAAA;IACV,GAAG,CAAC,SAAS,EAAE,CAAA;IACf,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,CAAA;IAC5B,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,CAAA;IAC5B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;QACrB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;QACtC,GAAG,CAAC,MAAM,EAAE,CAAA;KACb;IACD,GAAG,CAAC,OAAO,EAAE,CAAA;AACf,CAAC;AAVD,kDAUC;AAED,6BAAoC,OAAiC,EAAE,GAAc,EAAE,EAAuB,EAAE,KAAa;QAArC,UAAE,EAAE,UAAE,EAAE,UAAE,EAAE,UAAE;IACpG,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAA;IAC3B,IAAM,EAAE,GAAG,CAAC,GAAC,GAAG,CAAA;IAChB,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAA;IAC3B,IAAM,EAAE,GAAG,CAAC,GAAC,GAAG,CAAA;IAEhB,IAAM,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;IACnB,IAAM,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;IAEnB,IAAM,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;IACnB,IAAM,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;IAEnB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;QACrB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;QACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;KAC7C;IAED,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;QACrB,GAAG,CAAC,SAAS,EAAE,CAAA;QACf,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;QACxC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;QACtC,GAAG,CAAC,MAAM,EAAE,CAAA;KACb;AACH,CAAC;AAvBD,kDAuBC","file":"utils.js","sourcesContent":["import {Visuals, Line, Fill} from \"core/visuals\"\nimport {Context2d} from \"core/util/canvas\"\nimport {IBBox} from \"core/util/bbox\"\n\nexport function generic_line_legend(visuals: Visuals & {line: Line}, ctx: Context2d, {x0, x1, y0, y1}: IBBox, index: number): void {\n  ctx.save()\n  ctx.beginPath()\n  ctx.moveTo(x0, (y0 + y1) /2)\n  ctx.lineTo(x1, (y0 + y1) /2)\n  if (visuals.line.doit) {\n    visuals.line.set_vectorize(ctx, index)\n    ctx.stroke()\n  }\n  ctx.restore()\n}\n\nexport function generic_area_legend(visuals: {line: Line, fill: Fill}, ctx: Context2d, {x0, x1, y0, y1}: IBBox, index: number): void {\n  const w = Math.abs(x1 - x0)\n  const dw = w*0.1\n  const h = Math.abs(y1 - y0)\n  const dh = h*0.1\n\n  const sx0 = x0 + dw\n  const sx1 = x1 - dw\n\n  const sy0 = y0 + dh\n  const sy1 = y1 - dh\n\n  if (visuals.fill.doit) {\n    visuals.fill.set_vectorize(ctx, index)\n    ctx.fillRect(sx0, sy0, sx1 - sx0, sy1 - sy0)\n  }\n\n  if (visuals.line.doit) {\n    ctx.beginPath()\n    ctx.rect(sx0, sy0, sx1 - sx0, sy1 - sy0)\n    visuals.line.set_vectorize(ctx, index)\n    ctx.stroke()\n  }\n}\n"]}