{"version":3,"sources":["models/annotations/toolbar_panel.ts"],"names":[],"mappings":";;;AAAA,2CAAuD;AAGvD,gDAA0D;AAC1D,gCAA0C;AAC1C,mCAAoC;AAEpC;IAAsC,4CAAc;IAApD;;IA8CA,CAAC;IAzCC,qCAAU,GAAV,UAAW,OAAY;QACrB,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAA;QACzB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QACjD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAA;QACxB,yBAAW,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAA;IACxE,CAAC;IAED,iCAAM,GAAN;QACE,0BAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QACjC,iBAAM,MAAM,WAAE,CAAA;IAChB,CAAC;IAED,iCAAM,GAAN;QACE,iBAAM,MAAM,WAAE,CAAA;QAEd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACvB,UAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YACb,OAAM;SACP;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAM,CAAA;QAE/B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAA;QACnC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,KAAK,CAAC,KAAK,OAAI,CAAA;QAC7C,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAM,KAAK,CAAC,IAAI,CAAC,KAAK,OAAI,CAAA;QAC3C,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAM,KAAK,CAAC,MAAM,CAAC,KAAK,OAAI,CAAA;QAC/C,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,OAAO,CAAC,KAAK,OAAI,CAAA;QAEjD,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA;QAEjC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QAC1D,OAAO,CAAC,MAAM,EAAE,CAAA;QAEhB,WAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QACd,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QAC/B,UAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACf,CAAC;IAES,oCAAS,GAAnB;QACE,OAAO,EAAE,CAAA;IACX,CAAC;IACH,uBAAC;AAAD,CA9CA,AA8CC,CA9CqC,2BAAc,GA8CnD;AA9CY,4CAAgB;AA0D7B;IAAkC,wCAAU;IAI1C,sBAAY,KAAmC;eAC7C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,sBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,cAAc,CAAA;QACpC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,gBAAgB,CAAA;QAE9C,IAAI,CAAC,MAAM,CAAC;YACV,OAAO,EAAE,CAAE,CAAC,CAAC,QAAQ,CAAE;SACxB,CAAC,CAAA;IACJ,CAAC;IACH,mBAAC;AAAD,CAhBA,AAgBC,CAhBiC,uBAAU,GAgB3C;AAhBY,oCAAY;AAiBzB,YAAY,CAAC,SAAS,EAAE,CAAA","file":"toolbar_panel.js","sourcesContent":["import {Annotation, AnnotationView} from \"./annotation\"\nimport {Toolbar} from \"../tools/toolbar\"\nimport {ToolbarBaseView} from \"../tools/toolbar_base\"\nimport {build_views, remove_views} from \"core/build_views\"\nimport {empty, show, hide} from \"core/dom\"\nimport * as p from \"core/properties\"\n\nexport class ToolbarPanelView extends AnnotationView {\n  model: ToolbarPanel\n\n  protected _toolbar_views: {[key: string]: ToolbarBaseView}\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.plot_view.canvas_events.appendChild(this.el)\n    this._toolbar_views = {}\n    build_views(this._toolbar_views, [this.model.toolbar], {parent: this})\n  }\n\n  remove(): void {\n    remove_views(this._toolbar_views)\n    super.remove()\n  }\n\n  render(): void {\n    super.render()\n\n    if (!this.model.visible) {\n      hide(this.el)\n      return\n    }\n\n    const panel = this.model.panel!\n\n    this.el.style.position = \"absolute\"\n    this.el.style.left = `${panel._left.value}px`\n    this.el.style.top = `${panel._top.value}px`\n    this.el.style.width = `${panel._width.value}px`\n    this.el.style.height = `${panel._height.value}px`\n\n    this.el.style.overflow = \"hidden\"\n\n    const toolbar = this._toolbar_views[this.model.toolbar.id]\n    toolbar.render()\n\n    empty(this.el)\n    this.el.appendChild(toolbar.el)\n    show(this.el)\n  }\n\n  protected _get_size(): number {\n    return 30\n  }\n}\n\nexport namespace ToolbarPanel {\n  export interface Attrs extends Annotation.Attrs {\n    toolbar: Toolbar\n  }\n\n  export interface Props extends Annotation.Props {}\n}\n\nexport interface ToolbarPanel extends ToolbarPanel.Attrs {}\n\nexport class ToolbarPanel extends Annotation {\n\n  properties: ToolbarPanel.Props\n\n  constructor(attrs?: Partial<ToolbarPanel.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'ToolbarPanel'\n    this.prototype.default_view = ToolbarPanelView\n\n    this.define({\n      toolbar: [ p.Instance ],\n    })\n  }\n}\nToolbarPanel.initClass()\n"]}