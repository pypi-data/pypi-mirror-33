{"version":3,"sources":["models/plots/gmap_plot.ts"],"names":[],"mappings":";;;AAAA,wCAAmC;AAEnC,uDAAiD;AAEjD,+BAAqC;AACrC,mCAAoC;AACpC,qCAAiC;AAkBjC;IAAgC,sCAAK;IAInC,oBAAY,KAAiC;eAC3C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,oBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAA;QAElC,IAAI,CAAC,MAAM,CAAC;YACV,GAAG,EAAG,CAAE,CAAC,CAAC,MAAM,CAAM;YACtB,GAAG,EAAG,CAAE,CAAC,CAAC,MAAM,CAAM;YACtB,IAAI,EAAE,CAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAE;SACvB,CAAC,CAAA;IACJ,CAAC;IACH,iBAAC;AAAD,CAjBA,AAiBC,CAjB+B,aAAK,GAiBpC;AAjBY,gCAAU;AAkBvB,UAAU,CAAC,SAAS,EAAE,CAAA;AAkBtB;IAAiC,uCAAU;IAIzC,qBAAY,KAAkC;eAC5C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,qBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,aAAa,CAAA;QAEnC,IAAI,CAAC,MAAM,CAAC;YACV,QAAQ,EAAO,CAAE,CAAC,CAAC,MAAM,EAAE,SAAS,CAAE;YACtC,aAAa,EAAE,CAAE,CAAC,CAAC,IAAI,EAAI,KAAK,CAAM;YACtC,MAAM,EAAS,CAAE,CAAC,CAAC,MAAM,CAAa;SACvC,CAAC,CAAA;IACJ,CAAC;IACH,kBAAC;AAAD,CAjBA,AAiBC,CAjBgC,UAAU,GAiB1C;AAjBY,kCAAW;AAkBxB,WAAW,CAAC,SAAS,EAAE,CAAA;AAEvB;IAAkC,wCAAQ;IAA1C;;IAEA,CAAC;IAAD,mBAAC;AAAD,CAFA,AAEC,CAFiC,eAAQ,GAEzC;AAFY,oCAAY;AAkBzB;IAA8B,oCAAI;IAIhC,kBAAY,KAA+B;eACzC,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,kBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAA;QAChC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY,CAAA;QAE1C,iDAAiD;QACjD,gEAAgE;QAChE,sEAAsE;QACtE,2CAA2C;QAC3C,IAAI,CAAC,MAAM,CAAC;YACV,WAAW,EAAE,CAAE,CAAC,CAAC,QAAQ,CAAE;YAC3B,OAAO,EAAM,CAAE,CAAC,CAAC,MAAM,CAAI;SAC5B,CAAC,CAAA;IACJ,CAAC;IAED,6BAAU,GAAV;QACE,iBAAM,UAAU,WAAE,CAAA;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO;YACf,gBAAM,CAAC,KAAK,CAAC,kJAAkJ,CAAC,CAAA;IACpK,CAAC;IAES,oCAAiB,GAA3B;QACE,OAAO,IAAI,iCAAc,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAA;IACzC,CAAC;IACH,eAAC;AAAD,CA/BA,AA+BC,CA/B6B,WAAI,GA+BjC;AA/BY,4BAAQ;AAgCrB,QAAQ,CAAC,SAAS,EAAE,CAAA","file":"gmap_plot.js","sourcesContent":["import {logger} from \"core/logging\"\n\nimport {GMapPlotCanvas} from \"./gmap_plot_canvas\"\nimport {PlotCanvas} from \"./plot_canvas\"\nimport {Plot, PlotView} from \"./plot\"\nimport * as p from \"core/properties\"\nimport {Model} from \"../../model\"\n\nexport namespace MapOptions {\n  export interface Attrs extends Model.Attrs {\n    lat: number\n    lng: number\n    zoom: number\n  }\n\n  export interface Props extends Model.Props {\n    lat: p.Property<number>\n    lng: p.Property<number>\n    zoom: p.Property<number>\n  }\n}\n\nexport interface MapOptions extends MapOptions.Attrs {}\n\nexport class MapOptions extends Model {\n\n  properties: MapOptions.Props\n\n  constructor(attrs?: Partial<MapOptions.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"MapOptions\"\n\n    this.define({\n      lat:  [ p.Number     ],\n      lng:  [ p.Number     ],\n      zoom: [ p.Number, 12 ],\n    })\n  }\n}\nMapOptions.initClass()\n\nexport namespace GMapOptions {\n  export interface Attrs extends MapOptions.Attrs {\n    map_type: string\n    scale_control: boolean\n    styles: string\n  }\n\n  export interface Props extends MapOptions.Props {\n    map_type: p.Property<string>\n    scale_control: p.Property<boolean>\n    styles: p.Property<string>\n  }\n}\n\nexport interface GMapOptions extends GMapOptions.Attrs {}\n\nexport class GMapOptions extends MapOptions {\n\n  properties: GMapOptions.Props\n\n  constructor(attrs?: Partial<GMapOptions.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"GMapOptions\"\n\n    this.define({\n      map_type:      [ p.String, \"roadmap\" ],\n      scale_control: [ p.Bool,   false     ],\n      styles:        [ p.String            ],\n    })\n  }\n}\nGMapOptions.initClass()\n\nexport class GMapPlotView extends PlotView {\n  model: GMapPlot\n}\n\nexport namespace GMapPlot {\n  export interface Attrs extends Plot.Attrs {\n    map_options: GMapOptions\n    api_key: string\n  }\n\n  export interface Props extends Plot.Props {\n    map_options: p.Property<GMapOptions>\n    api_key: p.Property<string>\n  }\n}\n\nexport interface GMapPlot extends GMapPlot.Attrs {}\n\nexport class GMapPlot extends Plot {\n\n  properties: GMapPlot.Props\n\n  constructor(attrs?: Partial<GMapPlot.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"GMapPlot\"\n    this.prototype.default_view = GMapPlotView\n\n    // Set all the PlotCanvas properties as internal.\n    // This seems to be necessary so that everything can initialize.\n    // Feels very clumsy, but I'm not sure how the properties system wants\n    // to handle something like this situation.\n    this.define({\n      map_options: [ p.Instance ],\n      api_key:     [ p.String   ],\n    })\n  }\n\n  initialize(): void {\n    super.initialize()\n    if (!this.api_key)\n      logger.error(\"api_key is required. See https://developers.google.com/maps/documentation/javascript/get-api-key for more information on how to obtain your own.\")\n  }\n\n  protected _init_plot_canvas(): PlotCanvas {\n    return new GMapPlotCanvas({plot: this})\n  }\n}\nGMapPlot.initClass()\n"]}