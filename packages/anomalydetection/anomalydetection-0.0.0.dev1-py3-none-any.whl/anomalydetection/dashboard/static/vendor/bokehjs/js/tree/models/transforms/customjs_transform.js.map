{"version":3,"sources":["models/transforms/customjs_transform.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AACrC,mCAAoC;AAEpC,2CAA6C;AAC7C,2CAA2C;AAe3C;IAAuC,6CAAS;IAI9C,2BAAY,KAAwC;eAClD,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,2BAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,mBAAmB,CAAA;QAEzC,IAAI,CAAC,MAAM,CAAC;YACV,IAAI,EAAQ,CAAE,CAAC,CAAC,GAAG,EAAK,EAAE,CAAM;YAChC,IAAI,EAAQ,CAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAM;YAChC,MAAM,EAAM,CAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAM;YAChC,UAAU,EAAE,CAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAE;SACjC,CAAC,CAAA;IACJ,CAAC;IAED,sBAAI,oCAAK;aAAT;YACE,OAAO,aAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACxB,CAAC;;;OAAA;IAED,sBAAI,qCAAM;aAAV;YACE,OAAO,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC1B,CAAC;;;OAAA;IAES,2CAAe,GAAzB,UAA0B,IAAY,EAAE,IAAY;QAClD,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,mBAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;QACtD,YAAW,QAAQ,YAAR,QAAQ,kBAAI,IAAI,CAAC,KAAK,GAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,OAAC;IACtE,CAAC;IAED,sBAAI,+CAAgB;aAApB;YACE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAC7C,CAAC;;;OAAA;IAED,sBAAI,+CAAgB;aAApB;YACE,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAChD,CAAC;;;OAAA;IAED,mCAAO,GAAP,UAAQ,CAAS;QACf,OAAO,IAAI,CAAC,gBAAgB,OAArB,IAAI,EAAqB,IAAI,CAAC,MAAM,SAAE,CAAC,EAAE,OAAO,EAAE,EAAE,IAAC;IAC9D,CAAC;IAED,qCAAS,GAAT,UAAU,EAAqB;QAC7B,OAAO,IAAI,CAAC,gBAAgB,OAArB,IAAI,EAAqB,IAAI,CAAC,MAAM,SAAE,EAAE,EAAE,OAAO,EAAE,EAAE,IAAC;IAC/D,CAAC;IACH,wBAAC;AAAD,CA/CA,AA+CC,CA/CsC,qBAAS,GA+C/C;AA/CY,8CAAiB;AAgD9B,iBAAiB,CAAC,SAAS,EAAE,CAAA","file":"customjs_transform.js","sourcesContent":["import {Transform} from \"./transform\"\nimport * as p from \"core/properties\"\nimport {Arrayable} from \"core/types\"\nimport {keys, values} from \"core/util/object\"\nimport {use_strict} from \"core/util/string\"\n\nexport namespace CustomJSTransform {\n  export interface Attrs extends Transform.Attrs {\n    args: {[key: string]: any}\n    func: string\n    v_func: string\n    use_strict: boolean\n  }\n\n  export interface Props extends Transform.Props {}\n}\n\nexport interface CustomJSTransform extends CustomJSTransform.Attrs {}\n\nexport class CustomJSTransform extends Transform {\n\n  properties: CustomJSTransform.Props\n\n  constructor(attrs?: Partial<CustomJSTransform.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'CustomJSTransform'\n\n    this.define({\n      args:       [ p.Any,    {}     ], // TODO (bev) better type\n      func:       [ p.String, \"\"     ],\n      v_func:     [ p.String, \"\"     ],\n      use_strict: [ p.Boolean, false ],\n    })\n  }\n\n  get names(): string[] {\n    return keys(this.args)\n  }\n\n  get values(): any[] {\n    return values(this.args)\n  }\n\n  protected _make_transform(name: string, func: string): Function {\n    const code = this.use_strict ? use_strict(func) : func\n    return new Function(...this.names, name, \"require\", \"exports\", code)\n  }\n\n  get scalar_transform(): Function {\n    return this._make_transform(\"x\", this.func)\n  }\n\n  get vector_transform(): Function {\n    return this._make_transform(\"xs\", this.v_func)\n  }\n\n  compute(x: number): number {\n    return this.scalar_transform(...this.values, x, require, {})\n  }\n\n  v_compute(xs: Arrayable<number>): Arrayable<number> {\n    return this.vector_transform(...this.values, xs, require, {})\n  }\n}\nCustomJSTransform.initClass()\n"]}