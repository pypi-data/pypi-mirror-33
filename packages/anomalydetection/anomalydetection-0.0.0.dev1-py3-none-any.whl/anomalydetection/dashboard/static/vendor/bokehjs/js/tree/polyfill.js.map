{"version":3,"sources":["polyfill.ts"],"names":[],"mappings":"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","file":"polyfill.js","sourcesContent":["declare function require(moduleName: string): any\n\nif (typeof WeakMap !== \"function\") {\n  require(\"es6-weak-map/implement\")\n}\n\nif (typeof Set !== \"function\") {\n  require(\"es6-set/implement\")\n}\n\n// ref: https://github.com/bokeh/bokeh/issues/7373\nif (!(Number as any).isInteger) {\n  (Number as any).isInteger = function(value: number): boolean {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  }\n}\n\nconst String_proto = String.prototype as any\nif (!String_proto.repeat) {\n  String_proto.repeat = function(count: number) {\n    if (this == null) {\n      throw new TypeError('can\\'t convert ' + this + ' to object');\n    }\n    let str = '' + this;\n    count = +count;\n    if (count != count) {\n      count = 0;\n    }\n    if (count < 0) {\n      throw new RangeError('repeat count must be non-negative');\n    }\n    if (count == Infinity) {\n      throw new RangeError('repeat count must be less than infinity');\n    }\n    count = Math.floor(count);\n    if (str.length == 0 || count == 0) {\n      return '';\n    }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (str.length * count >= 1 << 28) {\n      throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    let rpt = '';\n    for (;;) {\n      if ((count & 1) == 1) {\n        rpt += str;\n      }\n      count >>>= 1;\n      if (count == 0) {\n        break;\n      }\n      str += str;\n    }\n    // Could we try:\n    // return Array(count + 1).join(this);\n    return rpt;\n  }\n}\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!(Array as any).from) {\n  (Array as any).from = (function () {\n    const toStr = Object.prototype.toString;\n    const isCallable = function (fn: any) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    const toInteger = function (value: any) {\n      const number = Number(value);\n      if (isNaN(number)) { return 0; }\n      if (number === 0 || !isFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    const maxSafeInteger = Math.pow(2, 53) - 1;\n    const toLength = function (value: any) {\n      const len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(this: any, arrayLike: any /*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      const C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      const items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      const mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      let T;\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      const len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      const A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      let k = 0;\n      // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n      while (k < len) {\n        const kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  }());\n}\n"]}