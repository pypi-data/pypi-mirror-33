{"version":3,"sources":["models/axes/axis.ts"],"names":[],"mappings":"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","file":"axis.js","sourcesContent":["import {GuideRenderer, GuideRendererView} from \"../renderers/guide_renderer\"\nimport {Ticker} from \"../tickers/ticker\"\nimport {TickFormatter} from \"../formatters/tick_formatter\"\nimport {Range} from \"../ranges/range\"\n\nimport * as p from \"core/properties\"\nimport {Arrayable, Color} from \"core/types\"\nimport {FontStyle, TextAlign, TextBaseline, LineJoin, LineCap} from \"core/enums\"\nimport {Side, TickLabelOrientation, SpatialUnits} from \"core/enums\"\nimport {Text, Line} from \"core/visuals\"\nimport {SidePanel, Orient} from \"core/layout/side_panel\"\nimport {Context2d} from \"core/util/canvas\"\nimport {sum} from \"core/util/array\"\nimport {isString, isArray, isNumber} from \"core/util/types\"\nimport {Factor, FactorRange} from \"models/ranges/factor_range\"\n\nconst {abs, min, max} = Math\n\nexport interface Extents {\n  tick: number\n  tick_label: number[]\n  axis_label: number\n}\n\nexport type Coords = [number[], number[]]\n\nexport interface TickCoords {\n  major: Coords\n  minor: Coords\n}\n\nexport class AxisView extends GuideRendererView {\n  model: Axis\n  visuals: Axis.Visuals\n\n  render(): void {\n    if (!this.model.visible)\n      return\n\n    const extents = {\n      tick: this._tick_extent(),\n      tick_label: this._tick_label_extents(),\n      axis_label: this._axis_label_extent(),\n    }\n    const tick_coords = this.model.tick_coords\n\n    const ctx = this.plot_view.canvas_view.ctx\n    ctx.save()\n\n    this._draw_rule(ctx, extents)\n    this._draw_major_ticks(ctx, extents, tick_coords)\n    this._draw_minor_ticks(ctx, extents, tick_coords)\n    this._draw_major_labels(ctx, extents, tick_coords)\n    this._draw_axis_label(ctx, extents, tick_coords)\n\n    if (this._render != null)\n      this._render(ctx, extents, tick_coords)\n\n    ctx.restore()\n  }\n\n  protected _render?(ctx: Context2d, extents: Extents, tick_coords: TickCoords): void\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.change, () => this.plot_view.request_render())\n  }\n\n  get_size(): number {\n    return this.model.visible ? Math.round(this._get_size()) : 0\n  }\n\n  protected _get_size(): number {\n    if (this.model.fixed_location != null) {\n      return 0\n    }\n    return this._tick_extent() + this._tick_label_extent() + this._axis_label_extent()\n  }\n\n  get needs_clip(): boolean {\n    return this.model.fixed_location != null\n  }\n\n  // drawing sub functions -----------------------------------------------------\n\n  protected _draw_rule(ctx: Context2d, _extents: Extents): void {\n    if (!this.visuals.axis_line.doit)\n      return\n\n    const [xs, ys]     = this.model.rule_coords\n    const [sxs, sys]   = this.plot_view.map_to_screen(xs, ys, this.model.x_range_name, this.model.y_range_name)\n    const [nx, ny]     = this.model.normals\n    const [xoff, yoff] = this.model.offsets\n\n    this.visuals.axis_line.set_value(ctx)\n\n    ctx.beginPath()\n    ctx.moveTo(Math.round(sxs[0] + nx*xoff), Math.round(sys[0] + ny*yoff))\n    for (let i = 1; i < sxs.length; i++) {\n      const sx = Math.round(sxs[i] + nx*xoff)\n      const sy = Math.round(sys[i] + ny*yoff)\n      ctx.lineTo(sx, sy)\n    }\n    ctx.stroke()\n  }\n\n  protected _draw_major_ticks(ctx: Context2d, _extents: Extents, tick_coords: TickCoords): void {\n    const tin     = this.model.major_tick_in\n    const tout    = this.model.major_tick_out\n    const visuals = this.visuals.major_tick_line\n\n    this._draw_ticks(ctx, tick_coords.major, tin, tout, visuals)\n  }\n\n  protected _draw_minor_ticks(ctx: Context2d, _extents: Extents, tick_coords: TickCoords): void {\n    const tin     = this.model.minor_tick_in\n    const tout    = this.model.minor_tick_out\n    const visuals = this.visuals.minor_tick_line\n\n    this._draw_ticks(ctx, tick_coords.minor, tin, tout, visuals)\n  }\n\n  protected _draw_major_labels(ctx: Context2d, extents: Extents, tick_coords: TickCoords): void {\n    const coords   = tick_coords.major\n    const labels   = this.model.compute_labels(coords[this.model.dimension])\n    const orient   = this.model.major_label_orientation\n    const standoff = extents.tick + this.model.major_label_standoff\n    const visuals  = this.visuals.major_label_text\n\n    this._draw_oriented_labels(ctx, labels, coords, orient, this.model.panel.side, standoff, visuals)\n  }\n\n  protected _draw_axis_label(ctx: Context2d, extents: Extents, _tick_coords: TickCoords): void {\n    if (this.model.axis_label == null || this.model.axis_label.length == 0 || this.model.fixed_location != null)\n      return\n\n    let sx: number\n    let sy: number\n\n    switch (this.model.panel.side) {\n      case \"above\":\n        sx = this.model.panel._hcenter.value\n        sy = this.model.panel._bottom.value\n        break;\n      case \"below\":\n        sx = this.model.panel._hcenter.value\n        sy = this.model.panel._top.value\n        break;\n      case \"left\":\n        sx = this.model.panel._right.value\n        sy = this.model.panel._vcenter.value\n        break;\n      case \"right\":\n        sx = this.model.panel._left.value\n        sy = this.model.panel._vcenter.value\n        break;\n      default:\n        throw new Error(`unknown side: ${this.model.panel.side}`)\n    }\n\n    const coords: Coords = [[sx], [sy]]\n    const standoff = extents.tick + sum(extents.tick_label) + this.model.axis_label_standoff\n    const visuals  = this.visuals.axis_label_text\n\n    this._draw_oriented_labels(ctx, [this.model.axis_label], coords, 'parallel', this.model.panel.side, standoff, visuals, \"screen\")\n  }\n\n  protected _draw_ticks(ctx: Context2d, coords: Coords, tin: number, tout: number, visuals: Line): void {\n    if (!visuals.doit)\n      return\n\n    const [x, y]       = coords\n    const [sxs, sys]   = this.plot_view.map_to_screen(x, y, this.model.x_range_name, this.model.y_range_name)\n    const [nx, ny]     = this.model.normals\n    const [xoff, yoff] = this.model.offsets\n\n    const [nxin,  nyin]  = [nx * (xoff-tin),  ny * (yoff-tin)]\n    const [nxout, nyout] = [nx * (xoff+tout), ny * (yoff+tout)]\n\n    visuals.set_value(ctx)\n\n    for (let i = 0; i < sxs.length; i++) {\n      const sx0 = Math.round(sxs[i] + nxout)\n      const sy0 = Math.round(sys[i] + nyout)\n      const sx1 = Math.round(sxs[i] + nxin)\n      const sy1 = Math.round(sys[i] + nyin)\n      ctx.beginPath()\n      ctx.moveTo(sx0, sy0)\n      ctx.lineTo(sx1, sy1)\n      ctx.stroke()\n    }\n  }\n\n  protected _draw_oriented_labels(ctx: Context2d, labels: string[], coords: Coords,\n                                  orient: Orient | number, _side: Side, standoff: number,\n                                  visuals: Text, units: SpatialUnits = \"data\"): void {\n    if (!visuals.doit || labels.length == 0)\n      return\n\n    let sxs, sys: Arrayable<number>\n    let xoff, yoff: number\n\n    if (units == \"screen\") {\n      [sxs, sys] = coords;\n      [xoff, yoff] = [0, 0];\n    } else {\n      const [dxs, dys] = coords;\n      [sxs, sys] = this.plot_view.map_to_screen(dxs, dys, this.model.x_range_name, this.model.y_range_name);\n      [xoff, yoff] = this.model.offsets;\n    }\n\n    const [nx, ny] = this.model.normals\n\n    const nxd = nx * (xoff + standoff)\n    const nyd = ny * (yoff + standoff)\n\n    visuals.set_value(ctx)\n    this.model.panel.apply_label_text_heuristics(ctx, orient)\n\n    let angle: number\n    if (isString(orient))\n      angle = this.model.panel.get_label_angle_heuristic(orient)\n    else\n      angle = -orient\n\n    for (let i = 0; i < sxs.length; i++) {\n      const sx = Math.round(sxs[i] + nxd)\n      const sy = Math.round(sys[i] + nyd)\n\n      ctx.translate(sx, sy)\n      ctx.rotate(angle)\n      ctx.fillText(labels[i], 0, 0)\n      ctx.rotate(-angle)\n      ctx.translate(-sx, -sy)\n    }\n  }\n\n  // extents sub functions -----------------------------------------------------\n\n  protected _axis_label_extent(): number {\n    if (this.model.axis_label == null || this.model.axis_label == \"\")\n      return 0\n    const standoff = this.model.axis_label_standoff\n    const visuals = this.visuals.axis_label_text\n    return this._oriented_labels_extent([this.model.axis_label], \"parallel\", this.model.panel.side, standoff, visuals)\n  }\n\n  protected _tick_extent(): number {\n    return this.model.major_tick_out\n  }\n\n  protected _tick_label_extent(): number {\n    return sum(this._tick_label_extents())\n  }\n\n  protected _tick_label_extents(): number[] {\n    const coords = this.model.tick_coords.major\n    const labels = this.model.compute_labels(coords[this.model.dimension])\n\n    const orient = this.model.major_label_orientation\n    const standoff = this.model.major_label_standoff\n    const visuals = this.visuals.major_label_text\n\n    return [this._oriented_labels_extent(labels, orient, this.model.panel.side, standoff, visuals)]\n  }\n\n  protected _oriented_labels_extent(labels: string[], orient: Orient | number,\n                                    side: Side, standoff: number, visuals: Text): number {\n    if (labels.length == 0)\n      return 0\n\n    const ctx = this.plot_view.canvas_view.ctx\n    visuals.set_value(ctx)\n\n    let hscale: number\n    let angle: number\n\n    if (isString(orient)) {\n      hscale = 1\n      angle = this.model.panel.get_label_angle_heuristic(orient)\n    } else {\n      hscale = 2\n      angle = -orient\n    }\n    angle = Math.abs(angle)\n\n    const c = Math.cos(angle)\n    const s = Math.sin(angle)\n\n    let extent = 0\n\n    for (let i = 0; i < labels.length; i++) {\n      const w = ctx.measureText(labels[i]).width * 1.1\n      const h = ctx.measureText(labels[i]).ascent * 0.9\n\n      let val: number\n\n      if (side == \"above\" || side == \"below\")\n        val = w*s + (h/hscale)*c\n      else\n        val = w*c + (h/hscale)*s\n\n      // update extent if current value is larger\n      if (val > extent)\n        extent = val\n    }\n\n    // only apply the standoff if we already have non-zero extent\n    if (extent > 0)\n      extent += standoff\n\n    return extent\n  }\n}\n\nexport namespace Axis {\n  // line:axis_\n  export interface AxisLine {\n    axis_line_color: Color\n    axis_line_width: number\n    axis_line_alpha: number\n    axis_line_join: LineJoin\n    axis_line_cap: LineCap\n    axis_line_dash: number[]\n    axis_line_dash_offset: number\n  }\n\n  // line:major_tick_\n  export interface MajorTickLine {\n    major_tick_line_color: Color\n    major_tick_line_width: number\n    major_tick_line_alpha: number\n    major_tick_line_join: LineJoin\n    major_tick_line_cap: LineCap\n    major_tick_line_dash: number[]\n    major_tick_line_dash_offset: number\n  }\n\n  // line:minor_tick_\n  export interface MinorTickLine {\n    minor_tick_line_color: Color\n    minor_tick_line_width: number\n    minor_tick_line_alpha: number\n    minor_tick_line_join: LineJoin\n    minor_tick_line_cap: LineCap\n    minor_tick_line_dash: number[]\n    minor_tick_line_dash_offset: number\n  }\n\n  // text:major_label_\n  export interface MajorLabelText {\n    major_lable_text_font: string\n    major_lable_text_font_size: string\n    major_lable_text_font_style: FontStyle\n    major_lable_text_color: Color\n    major_lable_text_alpha: number\n    major_lable_text_align: TextAlign\n    major_lable_text_baseline: TextBaseline\n    major_lable_text_line_height: number\n  }\n\n  // text:axis_label_\n  export interface AxisLabelText {\n    axis_lable_text_font: string\n    axis_lable_text_font_size: string\n    axis_lable_text_font_style: FontStyle\n    axis_lable_text_color: Color\n    axis_lable_text_alpha: number\n    axis_lable_text_align: TextAlign\n    axis_lable_text_baseline: TextBaseline\n    axis_lable_text_line_height: number\n  }\n\n  export interface Mixins extends AxisLine, MajorTickLine, MinorTickLine, MajorLabelText, AxisLabelText {}\n\n  export interface Attrs extends GuideRenderer.Attrs, Mixins {\n    bounds: [number, number] | \"auto\"\n    ticker: Ticker<any> // TODO\n    formatter: TickFormatter\n    x_range_name: string\n    y_range_name: string\n    axis_label: string\n    axis_label_standoff: number\n    major_label_standoff: number\n    major_label_orientation: TickLabelOrientation | number\n    major_label_overrides: {[key: string]: string}\n    major_tick_in: number\n    major_tick_out: number\n    minor_tick_in: number\n    minor_tick_out: number\n    fixed_location: number | Factor | null\n  }\n\n  export interface Props extends GuideRenderer.Props {}\n\n  export type Visuals = GuideRenderer.Visuals & {\n    axis_line: Line\n    major_tick_line: Line\n    minor_tick_line: Line\n    major_label_text: Text\n    axis_label_text: Text\n  }\n}\n\nexport interface Axis extends Axis.Attrs {\n  panel: SidePanel\n}\n\nexport class Axis extends GuideRenderer {\n\n  properties: Axis.Props\n\n  constructor(attrs?: Partial<Axis.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Axis\"\n    this.prototype.default_view = AxisView\n\n    this.mixins([\n      'line:axis_',\n      'line:major_tick_',\n      'line:minor_tick_',\n      'text:major_label_',\n      'text:axis_label_',\n    ])\n\n    this.define({\n      bounds:                  [ p.Any,      'auto'       ], // TODO (bev)\n      ticker:                  [ p.Instance, null         ],\n      formatter:               [ p.Instance, null         ],\n      x_range_name:            [ p.String,   'default'    ],\n      y_range_name:            [ p.String,   'default'    ],\n      axis_label:              [ p.String,   ''           ],\n      axis_label_standoff:     [ p.Int,      5            ],\n      major_label_standoff:    [ p.Int,      5            ],\n      major_label_orientation: [ p.Any,      \"horizontal\" ], // TODO: p.TickLabelOrientation | p.Number\n      major_label_overrides:   [ p.Any,      {}           ],\n      major_tick_in:           [ p.Number,   2            ],\n      major_tick_out:          [ p.Number,   6            ],\n      minor_tick_in:           [ p.Number,   0            ],\n      minor_tick_out:          [ p.Number,   4            ],\n      fixed_location:          [ p.Any,      null         ],\n    })\n\n    this.override({\n      axis_line_color: 'black',\n\n      major_tick_line_color: 'black',\n      minor_tick_line_color: 'black',\n\n      major_label_text_font_size: \"8pt\",\n      major_label_text_align: \"center\",\n      major_label_text_baseline: \"alphabetic\",\n\n      axis_label_text_font_size: \"10pt\",\n      axis_label_text_font_style: \"italic\",\n    })\n  }\n\n  add_panel(side: Side): void {\n    this.panel = new SidePanel({side: side})\n    this.panel.attach_document(this.document!) // XXX!\n  }\n\n  get normals(): [number, number] {\n    return this.panel.normals\n  }\n\n  get dimension(): 0 | 1 {\n    return this.panel.dimension\n  }\n\n  compute_labels(ticks: number[]): string[] {\n    const labels = this.formatter.doFormat(ticks, this) as any\n    for (let i = 0; i < ticks.length; i++) {\n      if (ticks[i] in this.major_label_overrides)\n        labels[i] = this.major_label_overrides[ticks[i]]\n    }\n    return labels\n  }\n\n  get offsets(): [number, number] {\n    const frame = this.plot.plot_canvas.frame\n    let [xoff, yoff] = [0, 0]\n\n    switch (this.panel.side) {\n      case \"below\":\n        yoff = abs(this.panel._top.value - frame._bottom.value)\n        break\n      case \"above\":\n        yoff = abs(this.panel._bottom.value - frame._top.value)\n        break\n      case \"right\":\n        xoff = abs(this.panel._left.value - frame._right.value)\n        break\n      case \"left\":\n        xoff = abs(this.panel._right.value - frame._left.value)\n        break\n    }\n\n    return [xoff, yoff]\n  }\n\n  get ranges(): [Range, Range] {\n    const i = this.dimension\n    const j = (i + 1) % 2\n    const frame = this.plot.plot_canvas.frame\n    const ranges = [\n      frame.x_ranges[this.x_range_name],\n      frame.y_ranges[this.y_range_name],\n    ]\n    return [ranges[i], ranges[j]]\n  }\n\n  get computed_bounds(): [number, number] {\n    const [range,] = this.ranges\n\n    const user_bounds = this.bounds // XXX: ? 'auto'\n    const range_bounds: [number, number] = [range.min, range.max]\n\n    if (user_bounds == 'auto')\n      return [range.min, range.max]\n    else if (isArray(user_bounds)) {\n      let start: number\n      let end: number\n\n      const [user_start, user_end] = user_bounds\n      const [range_start, range_end] = range_bounds\n\n      if (abs(user_start - user_end) > abs(range_start - range_end)) {\n        start = max(min(user_start, user_end), range_start)\n        end = min(max(user_start, user_end), range_end)\n      } else {\n        start = min(user_start, user_end)\n        end = max(user_start, user_end)\n      }\n\n      return [start, end]\n    } else\n      throw new Error(`user bounds '${user_bounds}' not understood`)\n  }\n\n  get rule_coords(): Coords {\n    const i = this.dimension\n    const j = (i + 1) % 2\n    const [range,] = this.ranges\n    const [start, end] = this.computed_bounds\n\n    const xs: number[] = new Array(2)\n    const ys: number[] = new Array(2)\n    const coords: Coords = [xs, ys]\n\n    coords[i][0] = Math.max(start, range.min)\n    coords[i][1] = Math.min(end, range.max)\n    if (coords[i][0] > coords[i][1])\n      coords[i][0] = coords[i][1] = NaN\n\n    coords[j][0] = this.loc\n    coords[j][1] = this.loc\n\n    return coords\n  }\n\n  get tick_coords(): TickCoords {\n    const i = this.dimension\n    const j = (i + 1) % 2\n    const [range,] = this.ranges\n    const [start, end] = this.computed_bounds\n\n    const ticks = this.ticker.get_ticks(start, end, range, this.loc, {})\n    const majors = ticks.major\n    const minors = ticks.minor\n\n    const xs: number[] = []\n    const ys: number[] = []\n    const coords: Coords = [xs, ys]\n\n    const minor_xs: number[] = []\n    const minor_ys: number[] = []\n    const minor_coords: Coords = [minor_xs, minor_ys]\n\n    const [range_min, range_max] = [range.min, range.max]\n\n    for (let ii = 0; ii < majors.length; ii++) {\n      if (majors[ii] < range_min || majors[ii] > range_max)\n        continue\n      coords[i].push(majors[ii])\n      coords[j].push(this.loc)\n    }\n\n    for (let ii = 0; ii < minors.length; ii++) {\n      if (minors[ii] < range_min || minors[ii] > range_max)\n        continue\n      minor_coords[i].push(minors[ii])\n      minor_coords[j].push(this.loc)\n    }\n\n    return {\n      major: coords,\n      minor: minor_coords,\n    }\n  }\n\n  get loc(): number {\n    if (this.fixed_location != null) {\n      if (isNumber(this.fixed_location)) {\n        return this.fixed_location\n      }\n      const [, cross_range] = this.ranges\n      if (cross_range instanceof FactorRange) {\n        return cross_range.synthetic(this.fixed_location)\n      }\n      throw new Error(\"unexpected\")\n\n    }\n\n    const [, cross_range] = this.ranges\n\n    switch (this.panel.side) {\n      case 'left':\n      case 'below':\n        return cross_range.start\n      case 'right':\n      case 'above':\n        return cross_range.end\n    }\n  }\n}\nAxis.initClass()\n"]}