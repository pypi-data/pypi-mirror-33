{"version":3,"sources":["models/formatters/printf_tick_formatter.ts"],"names":[],"mappings":";;;AAAA,yCAAkC;AAElC,mDAA8C;AAE9C,mCAAoC;AAYpC;IAAyC,+CAAa;IAIpD,6BAAY,KAA0C;eACpD,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,6BAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,qBAAqB,CAAA;QAE3C,IAAI,CAAC,MAAM,CAAC;YACV,MAAM,EAAE,CAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAE;SAC3B,CAAC,CAAA;IACJ,CAAC;IAED,sCAAQ,GAAR,UAAS,KAAe,EAAE,KAAW;QAArC,iBAEC;QADC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,oBAAO,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,CAAC,EAA1B,CAA0B,CAAC,CAAA;IACxD,CAAC;IACH,0BAAC;AAAD,CAnBA,AAmBC,CAnBwC,8BAAa,GAmBrD;AAnBY,kDAAmB;AAoBhC,mBAAmB,CAAC,SAAS,EAAE,CAAA","file":"printf_tick_formatter.js","sourcesContent":["import {sprintf} from \"sprintf-js\"\n\nimport {TickFormatter} from \"./tick_formatter\"\nimport {Axis} from \"../axes/axis\"\nimport * as p from \"core/properties\"\n\nexport namespace PrintfTickFormatter {\n  export interface Attrs extends TickFormatter.Attrs {\n    format: string\n  }\n\n  export interface Props extends TickFormatter.Props {}\n}\n\nexport interface PrintfTickFormatter extends PrintfTickFormatter.Attrs {}\n\nexport class PrintfTickFormatter extends TickFormatter {\n\n  properties: PrintfTickFormatter.Props\n\n  constructor(attrs?: Partial<PrintfTickFormatter.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'PrintfTickFormatter'\n\n    this.define({\n      format: [ p.String, '%s' ],\n    })\n  }\n\n  doFormat(ticks: number[], _axis: Axis): string[] {\n    return ticks.map((tick) => sprintf(this.format, tick))\n  }\n}\nPrintfTickFormatter.initClass()\n"]}