{"version":3,"sources":["models/annotations/arrow_head.ts"],"names":[],"mappings":"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","file":"arrow_head.js","sourcesContent":["import {Annotation} from \"./annotation\"\nimport {Visuals, Line, Fill} from \"core/visuals\"\nimport {LineMixinVector, FillMixinVector} from \"core/property_mixins\"\nimport * as p from \"core/properties\"\nimport {Context2d} from \"core/util/canvas\"\n\nexport namespace ArrowHead {\n  export interface Attrs extends Annotation.Attrs {\n    size: number\n  }\n\n  export interface Props extends Annotation.Props {\n    size: p.Property<number>\n  }\n}\n\nexport interface ArrowHead extends ArrowHead.Attrs {}\n\nexport abstract class ArrowHead extends Annotation {\n\n  constructor(attrs?: Partial<ArrowHead.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'ArrowHead'\n\n    this.define({\n      size: [ p.Number, 25 ],\n    })\n  }\n\n  visuals: Visuals\n\n  initialize(): void {\n    super.initialize()\n    this.visuals = new Visuals(this)\n  }\n\n  abstract render(ctx: Context2d, i: number): void\n\n  abstract clip(ctx: Context2d, i: number): void // This method should not begin or close a path\n}\nArrowHead.initClass()\n\nexport namespace OpenHead {\n  export interface Mixins extends LineMixinVector {}\n\n  export interface Attrs extends ArrowHead.Attrs, Mixins {}\n\n  export interface Props extends ArrowHead.Props {}\n}\n\nexport interface OpenHead extends OpenHead.Attrs {}\n\nexport class OpenHead extends ArrowHead {\n\n  properties: OpenHead.Props\n\n  constructor(attrs?: Partial<OpenHead.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'OpenHead'\n\n    this.mixins(['line'])\n  }\n\n  visuals: Visuals & {line: Line}\n\n  clip(ctx: Context2d, i: number): void {\n    // This method should not begin or close a path\n    this.visuals.line.set_vectorize(ctx, i)\n    ctx.moveTo(0.5*this.size, this.size)\n    ctx.lineTo(0.5*this.size, -2)\n    ctx.lineTo(-0.5*this.size, -2)\n    ctx.lineTo(-0.5*this.size, this.size)\n    ctx.lineTo(0, 0)\n    ctx.lineTo(0.5*this.size, this.size)\n  }\n\n  render(ctx: Context2d, i: number): void {\n    if (this.visuals.line.doit) {\n      this.visuals.line.set_vectorize(ctx, i)\n\n      ctx.beginPath()\n      ctx.moveTo(0.5*this.size, this.size)\n      ctx.lineTo(0, 0)\n      ctx.lineTo(-0.5*this.size, this.size)\n      ctx.stroke()\n    }\n  }\n}\nOpenHead.initClass()\n\nexport namespace NormalHead {\n  export interface Mixins extends LineMixinVector, FillMixinVector {}\n\n  export interface Attrs extends ArrowHead.Attrs, Mixins {}\n\n  export interface Props extends ArrowHead.Props {}\n}\n\nexport interface NormalHead extends NormalHead.Attrs {}\n\nexport class NormalHead extends ArrowHead {\n\n  properties: NormalHead.Props\n\n  constructor(attrs?: Partial<NormalHead.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'NormalHead'\n\n    this.mixins(['line', 'fill'])\n\n    this.override({\n      fill_color: 'black',\n    })\n  }\n\n  visuals: Visuals & {line: Line, fill: Fill}\n\n  clip(ctx: Context2d, i: number): void {\n    // This method should not begin or close a path\n    this.visuals.line.set_vectorize(ctx, i)\n    ctx.moveTo(0.5*this.size, this.size)\n    ctx.lineTo(0.5*this.size, -2)\n    ctx.lineTo(-0.5*this.size, -2)\n    ctx.lineTo(-0.5*this.size, this.size)\n    ctx.lineTo(0.5*this.size, this.size)\n  }\n\n  render(ctx: Context2d, i: number): void {\n    if (this.visuals.fill.doit) {\n      this.visuals.fill.set_vectorize(ctx, i)\n      this._normal(ctx, i)\n      ctx.fill()\n    }\n\n    if (this.visuals.line.doit) {\n      this.visuals.line.set_vectorize(ctx, i)\n      this._normal(ctx, i)\n      ctx.stroke()\n    }\n  }\n\n  _normal(ctx: Context2d, _i: number): void {\n    ctx.beginPath()\n    ctx.moveTo(0.5*this.size, this.size)\n    ctx.lineTo(0, 0)\n    ctx.lineTo(-0.5*this.size, this.size)\n    ctx.closePath()\n  }\n}\nNormalHead.initClass()\n\nexport namespace VeeHead {\n  export interface Mixins extends LineMixinVector, FillMixinVector {}\n\n  export interface Attrs extends ArrowHead.Attrs, Mixins {}\n\n  export interface Props extends ArrowHead.Props {}\n}\n\nexport interface VeeHead extends VeeHead.Attrs {}\n\nexport class VeeHead extends ArrowHead {\n\n  properties: VeeHead.Props\n\n  constructor(attrs?: Partial<VeeHead.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'VeeHead'\n\n    this.mixins(['line', 'fill'])\n\n    this.override({\n      fill_color: 'black',\n    })\n  }\n\n  visuals: Visuals & {line: Line, fill: Fill}\n\n  clip(ctx: Context2d, i: number): void {\n    // This method should not begin or close a path\n    this.visuals.line.set_vectorize(ctx, i)\n    ctx.moveTo(0.5*this.size, this.size)\n    ctx.lineTo(0.5*this.size, -2)\n    ctx.lineTo(-0.5*this.size, -2)\n    ctx.lineTo(-0.5*this.size, this.size)\n    ctx.lineTo(0, 0.5*this.size)\n    ctx.lineTo(0.5*this.size, this.size)\n  }\n\n  render(ctx: Context2d, i: number): void {\n    if (this.visuals.fill.doit) {\n      this.visuals.fill.set_vectorize(ctx, i)\n      this._vee(ctx, i)\n      ctx.fill()\n    }\n\n    if (this.visuals.line.doit) {\n      this.visuals.line.set_vectorize(ctx, i)\n      this._vee(ctx, i)\n      ctx.stroke()\n    }\n  }\n\n  _vee(ctx: Context2d, _i: number): void {\n    ctx.beginPath()\n    ctx.moveTo(0.5*this.size, this.size)\n    ctx.lineTo(0, 0)\n    ctx.lineTo(-0.5*this.size, this.size)\n    ctx.lineTo(0, 0.5*this.size)\n    ctx.closePath()\n  }\n}\nVeeHead.initClass()\n\nexport namespace TeeHead {\n  export interface Mixins extends LineMixinVector {}\n\n  export interface Attrs extends ArrowHead.Attrs, Mixins {}\n\n  export interface Props extends ArrowHead.Props {}\n}\n\nexport interface TeeHead extends TeeHead.Attrs {}\n\nexport class TeeHead extends ArrowHead {\n\n  properties: TeeHead.Props\n\n  constructor(attrs?: Partial<TeeHead.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'TeeHead'\n\n    this.mixins(['line'])\n  }\n\n  visuals: Visuals & {line: Line}\n\n  render(ctx: Context2d, i: number): void {\n    if (this.visuals.line.doit) {\n      this.visuals.line.set_vectorize(ctx, i)\n      ctx.beginPath()\n      ctx.moveTo(0.5*this.size, 0)\n      ctx.lineTo(-0.5*this.size, 0)\n      ctx.stroke()\n    }\n  }\n\n  clip(_ctx: Context2d, _i: number): void {}\n}\nTeeHead.initClass()\n"]}