{"version":3,"sources":["models/formatters/categorical_tick_formatter.ts"],"names":[],"mappings":";;;AAAA,mDAA8C;AAE9C,yCAAoC;AAUpC;IAA8C,oDAAa;IAIzD,kCAAY,KAA+C;eACzD,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,kCAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,0BAA0B,CAAA;IAClD,CAAC;IAED,2CAAQ,GAAR,UAAS,KAAe,EAAE,KAAW;QACnC,OAAO,YAAI,CAAC,KAAK,CAAC,CAAA;IACpB,CAAC;IACH,+BAAC;AAAD,CAfA,AAeC,CAf6C,8BAAa,GAe1D;AAfY,4DAAwB;AAgBrC,wBAAwB,CAAC,SAAS,EAAE,CAAA","file":"categorical_tick_formatter.js","sourcesContent":["import {TickFormatter} from \"./tick_formatter\"\nimport {Axis} from \"../axes/axis\"\nimport {copy} from \"core/util/array\"\n\nexport namespace CategoricalTickFormatter {\n  export interface Attrs extends TickFormatter.Attrs {}\n\n  export interface Props extends TickFormatter.Props {}\n}\n\nexport interface CategoricalTickFormatter extends CategoricalTickFormatter.Attrs {}\n\nexport class CategoricalTickFormatter extends TickFormatter {\n\n  properties: CategoricalTickFormatter.Props\n\n  constructor(attrs?: Partial<CategoricalTickFormatter.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'CategoricalTickFormatter'\n  }\n\n  doFormat(ticks: string[], _axis: Axis): string[] {\n    return copy(ticks)\n  }\n}\nCategoricalTickFormatter.initClass()\n"]}