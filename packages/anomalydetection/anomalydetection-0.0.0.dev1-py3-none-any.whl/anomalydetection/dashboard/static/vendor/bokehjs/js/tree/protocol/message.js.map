{"version":3,"sources":["protocol/message.ts"],"names":[],"mappings":"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","file":"message.js","sourcesContent":["import {uniqueId} from \"core/util/string\"\n\nexport interface Header {\n  msgid?: string\n  msgtype?: string\n  reqid?: string\n  num_buffers?: number\n}\n\nexport class Message {\n\n  readonly buffers: [Header, any][] = []\n\n  constructor(readonly header: Header, readonly metadata: any, readonly content: any) {}\n\n  static assemble(header_json: string, metadata_json: string, content_json: string): Message {\n    const header = JSON.parse(header_json)\n    const metadata = JSON.parse(metadata_json)\n    const content = JSON.parse(content_json)\n    return new Message(header, metadata, content)\n  }\n\n  assemble_buffer(buf_header: Header, buf_payload: any): void {\n    const nb = this.header.num_buffers != null ? this.header.num_buffers : 0\n    if (nb <= this.buffers.length)\n      throw new Error(\"too many buffers received, expecting #{nb}\")\n    this.buffers.push([buf_header, buf_payload])\n  }\n\n  // not defined for BokehJS, only *receiving* buffers is supported\n  // add_buffer: (buf_header, buf_payload) ->\n  // write_buffers: (socket)\n\n  static create(msgtype: string, metadata: any, content: any = {}): Message {\n    const header = Message.create_header(msgtype)\n    return new Message(header, metadata, content)\n  }\n\n  static create_header(msgtype: string): Header {\n    return {\n      msgid:   uniqueId(),\n      msgtype: msgtype,\n    }\n  }\n\n  complete(): boolean {\n    if (this.header != null && this.metadata != null && this.content != null) {\n      if ('num_buffers' in this.header)\n        return this.buffers.length === this.header.num_buffers\n      else\n        return true\n    } else\n      return false\n  }\n\n  send(socket: WebSocket): void {\n    const nb = this.header.num_buffers != null ? this.header.num_buffers : 0\n    if (nb > 0)\n      throw new Error(\"BokehJS only supports receiving buffers, not sending\")\n    const header_json = JSON.stringify(this.header)\n    const metadata_json = JSON.stringify(this.metadata)\n    const content_json = JSON.stringify(this.content)\n    socket.send(header_json)\n    socket.send(metadata_json)\n    socket.send(content_json)\n  }\n\n  msgid(): string {\n    return this.header.msgid!\n  }\n\n  msgtype(): string {\n    return this.header.msgtype!\n  }\n\n  reqid(): string {\n    return this.header.reqid!\n  }\n\n  // return the reason we should close on bad protocol, if there is one\n  problem(): string | null {\n    if (!('msgid' in this.header))\n      return \"No msgid in header\"\n    else if (!('msgtype' in this.header))\n      return \"No msgtype in header\"\n    else\n      return null\n  }\n}\n"]}