{"version":3,"sources":["models/tools/actions/zoom_in_tool.ts"],"names":[],"mappings":";;;AAAA,6CAAwD;AAExD,uCAA0C;AAE1C,mCAAoC;AAEpC;IAAoC,0CAAc;IAAlD;;IAmBA,CAAC;IAhBC,6BAAI,GAAJ;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAA;QACnC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAA;QAElC,4DAA4D;QAC5D,IAAM,MAAM,GAAG,IAAI,IAAI,OAAO,IAAK,IAAI,IAAI,MAAM,CAAA;QACjD,IAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAA;QAEjD,IAAM,SAAS,GAAG,kBAAW,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEvE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAA;QACzD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QAEnD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ;YACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;IAC/D,CAAC;IACH,qBAAC;AAAD,CAnBA,AAmBC,CAnBmC,4BAAc,GAmBjD;AAnBY,wCAAc;AAgC3B;IAAgC,sCAAU;IAIxC,oBAAY,KAAiC;QAA7C,YACE,kBAAM,KAAK,CAAC,SACb;QAYD,eAAS,GAAG,SAAS,CAAA;QACrB,UAAI,GAAG,sBAAsB,CAAA;;IAb7B,CAAC;IAEM,oBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAA;QAClC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,cAAc,CAAA;QAE5C,IAAI,CAAC,MAAM,CAAC;YACV,MAAM,EAAM,CAAE,CAAC,CAAC,OAAO,EAAK,GAAG,CAAK;YACpC,UAAU,EAAE,CAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAE;SACrC,CAAC,CAAA;IACJ,CAAC;IAKD,sBAAI,+BAAO;aAAX;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QAC/D,CAAC;;;OAAA;IACH,iBAAC;AAAD,CAxBA,AAwBC,CAxB+B,wBAAU,GAwBzC;AAxBY,gCAAU;AA0BvB,UAAU,CAAC,SAAS,EAAE,CAAA","file":"zoom_in_tool.js","sourcesContent":["import {ActionTool, ActionToolView} from \"./action_tool\"\nimport {Dimensions} from \"core/enums\"\nimport {scale_range} from \"core/util/zoom\"\n\nimport * as p from \"core/properties\"\n\nexport class ZoomInToolView extends ActionToolView {\n  model: ZoomInTool\n\n  doit(): void {\n    const frame = this.plot_model.frame\n    const dims = this.model.dimensions\n\n    // restrict to axis configured in tool's dimensions property\n    const h_axis = dims == 'width'  || dims == 'both'\n    const v_axis = dims == 'height' || dims == 'both'\n\n    const zoom_info = scale_range(frame, this.model.factor, h_axis, v_axis)\n\n    this.plot_view.push_state('zoom_out', {range: zoom_info})\n    this.plot_view.update_range(zoom_info, false, true)\n\n    if (this.model.document)\n      this.model.document.interactive_start(this.plot_model.plot)\n  }\n}\n\nexport namespace ZoomInTool {\n  export interface Attrs extends ActionTool.Attrs {\n    factor: number\n    dimensions: Dimensions\n  }\n\n  export interface Props extends ActionTool.Props {}\n}\n\nexport interface ZoomInTool extends ZoomInTool.Attrs {}\n\nexport class ZoomInTool extends ActionTool {\n\n  properties: ZoomInTool.Props\n\n  constructor(attrs?: Partial<ZoomInTool.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"ZoomInTool\"\n    this.prototype.default_view = ZoomInToolView\n\n    this.define({\n      factor:     [ p.Percent,    0.1    ],\n      dimensions: [ p.Dimensions, \"both\" ],\n    })\n  }\n\n  tool_name = \"Zoom In\"\n  icon = \"bk-tool-icon-zoom-in\"\n\n  get tooltip(): string {\n    return this._get_dim_tooltip(this.tool_name, this.dimensions)\n  }\n}\n\nZoomInTool.initClass()\n"]}