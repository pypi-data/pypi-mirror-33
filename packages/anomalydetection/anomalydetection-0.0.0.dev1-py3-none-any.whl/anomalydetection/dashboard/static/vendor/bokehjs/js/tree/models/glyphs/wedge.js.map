{"version":3,"sources":["models/glyphs/wedge.ts"],"names":[],"mappings":"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","file":"wedge.js","sourcesContent":["import {XYGlyph, XYGlyphView, XYGlyphData} from \"./xy_glyph\";\nimport {generic_area_legend} from \"./utils\"\nimport {PointGeometry} from \"core/geometry\"\nimport {DistanceSpec, AngleSpec} from \"core/vectorization\"\nimport {LineMixinVector, FillMixinVector} from \"core/property_mixins\"\nimport {Line, Fill} from \"core/visuals\"\nimport {Arrayable} from \"core/types\"\nimport {Direction} from \"core/enums\"\nimport * as hittest from \"core/hittest\";\nimport * as p from \"core/properties\";\nimport {IBBox} from \"core/util/bbox\"\nimport {angle_between} from \"core/util/math\"\nimport {Context2d} from \"core/util/canvas\"\nimport {Selection} from \"../selections/selection\";\n\nexport interface WedgeData extends XYGlyphData {\n  _radius: Arrayable<number>\n  _start_angle: Arrayable<number>\n  _end_angle: Arrayable<number>\n\n  sradius: Arrayable<number>\n\n  max_radius: number\n}\n\nexport interface WedgeView extends WedgeData {}\n\nexport class WedgeView extends XYGlyphView {\n  model: Wedge\n  visuals: Wedge.Visuals\n\n  protected _map_data(): void {\n    if (this.model.properties.radius.units == \"data\")\n      this.sradius = this.sdist(this.renderer.xscale, this._x, this._radius);\n    else\n      this.sradius = this._radius;\n  }\n\n  protected _render(ctx: Context2d, indices: number[], {sx, sy, sradius, _start_angle, _end_angle}: WedgeData): void {\n    const direction = this.model.properties.direction.value();\n\n    for (const i of indices) {\n      if (isNaN(sx[i] + sy[i] + sradius[i] + _start_angle[i] + _end_angle[i]))\n        continue;\n\n      ctx.beginPath();\n      ctx.arc(sx[i], sy[i], sradius[i], _start_angle[i], _end_angle[i], direction);\n      ctx.lineTo(sx[i], sy[i]);\n      ctx.closePath();\n\n      if (this.visuals.fill.doit) {\n        this.visuals.fill.set_vectorize(ctx, i);\n        ctx.fill();\n      }\n\n      if (this.visuals.line.doit) {\n        this.visuals.line.set_vectorize(ctx, i);\n        ctx.stroke();\n      }\n    }\n  }\n\n  protected _hit_point(geometry: PointGeometry): Selection {\n    let dist, sx0, sx1, sy0, sy1, x0, x1, y0, y1;\n    const {sx, sy} = geometry;\n    const x = this.renderer.xscale.invert(sx);\n    const y = this.renderer.yscale.invert(sy);\n\n    // check radius first\n    if (this.model.properties.radius.units === \"data\") {\n      x0 = x - this.max_radius;\n      x1 = x + this.max_radius;\n\n      y0 = y - this.max_radius;\n      y1 = y + this.max_radius;\n\n    } else {\n      sx0 = sx - this.max_radius;\n      sx1 = sx + this.max_radius;\n      [x0, x1] = this.renderer.xscale.r_invert(sx0, sx1);\n\n      sy0 = sy - this.max_radius;\n      sy1 = sy + this.max_radius;\n      [y0, y1] = this.renderer.yscale.r_invert(sy0, sy1);\n    }\n\n    const candidates = [];\n\n    const bbox = hittest.validate_bbox_coords([x0, x1], [y0, y1]);\n    for (const i of this.index.indices(bbox)) {\n      const r2 = Math.pow(this.sradius[i], 2);\n      [sx0, sx1] = this.renderer.xscale.r_compute(x, this._x[i]);\n      [sy0, sy1] = this.renderer.yscale.r_compute(y, this._y[i]);\n      dist = Math.pow(sx0-sx1, 2) + Math.pow(sy0-sy1, 2);\n      if (dist <= r2) {\n        candidates.push([i, dist]);\n      }\n    }\n\n    const direction = this.model.properties.direction.value();\n    const hits: [number, number][] = [];\n    for (const [i, dist] of candidates) {\n      // NOTE: minus the angle because JS uses non-mathy convention for angles\n      const angle = Math.atan2(sy-this.sy[i], sx-this.sx[i]);\n      if (angle_between(-angle, -this._start_angle[i], -this._end_angle[i], direction)) {\n        hits.push([i, dist]);\n      }\n    }\n\n    return hittest.create_hit_test_result_from_hits(hits);\n  }\n\n  draw_legend_for_index(ctx: Context2d, bbox: IBBox, index: number): void {\n    generic_area_legend(this.visuals, ctx, bbox, index);\n  }\n}\n\nexport namespace Wedge {\n  export interface Mixins extends LineMixinVector, FillMixinVector {}\n\n  export interface Attrs extends XYGlyph.Attrs, Mixins {\n    direction: Direction\n    radius: DistanceSpec\n    start_angle: AngleSpec\n    end_angle: AngleSpec\n  }\n\n  export interface Props extends XYGlyph.Props {\n    direction: p.Property<Direction>\n    radius: p.DistanceSpec\n    start_angle: p.AngleSpec\n    end_angle: p.AngleSpec\n  }\n\n  export interface Visuals extends XYGlyph.Visuals {\n    line: Line\n    fill: Fill\n  }\n}\n\nexport interface Wedge extends Wedge.Attrs {}\n\nexport class Wedge extends XYGlyph {\n\n  properties: Wedge.Props\n\n  constructor(attrs?: Partial<Wedge.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Wedge';\n    this.prototype.default_view = WedgeView;\n\n    this.mixins(['line', 'fill']);\n    this.define({\n      direction:    [ p.Direction,   'anticlock' ],\n      radius:       [ p.DistanceSpec             ],\n      start_angle:  [ p.AngleSpec                ],\n      end_angle:    [ p.AngleSpec                ],\n    });\n  }\n}\nWedge.initClass();\n"]}