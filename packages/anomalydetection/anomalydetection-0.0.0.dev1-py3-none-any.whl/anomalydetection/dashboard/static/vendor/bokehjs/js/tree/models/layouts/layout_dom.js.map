{"version":3,"sources":["models/layouts/layout_dom.ts"],"names":[],"mappings":"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","file":"layout_dom.js","sourcesContent":["import {Model} from \"../../model\"\nimport {SizingMode} from \"core/enums\"\nimport {empty, margin, padding} from \"core/dom\"\nimport * as p from \"core/properties\"\nimport {LayoutCanvas} from \"core/layout/layout_canvas\"\nimport {Solver, GE, EQ, Strength, Variable, Constraint} from \"core/layout/solver\"\n\nimport {build_views} from \"core/build_views\"\nimport {DOMView} from \"core/dom_view\"\n\nexport type Layoutable = LayoutCanvas | LayoutDOM\n\nexport abstract class LayoutDOMView extends DOMView {\n  model: LayoutDOM\n\n  protected _solver: Solver\n\n  protected _solver_inited: boolean = false\n  protected _idle_notified: boolean = false\n\n  protected _root_width: Variable\n  protected _root_height: Variable\n\n  child_views: {[key: string]: LayoutDOMView}\n\n  initialize(options: any): void {\n    super.initialize(options)\n\n    // this is a root view\n    if (this.is_root)\n      this._solver = new Solver()\n\n    this.child_views = {}\n    this.build_child_views()\n  }\n\n  remove(): void {\n    for (const model_id in this.child_views) {\n      const view = this.child_views[model_id]\n      view.remove()\n    }\n    this.child_views = {}\n\n    // remove on_resize\n\n    super.remove()\n  }\n\n  has_finished(): boolean {\n    if (!super.has_finished())\n      return false\n\n    for (const model_id in this.child_views) {\n      const child = this.child_views[model_id]\n      if (!child.has_finished())\n        return false\n    }\n\n    return true\n  }\n\n  notify_finished(): void {\n    if (!this.is_root)\n      super.notify_finished()\n    else {\n      if (!this._idle_notified && this.has_finished()) {\n        if (this.model.document != null) {\n          this._idle_notified = true\n          this.model.document.notify_idle(this.model)\n        }\n      }\n    }\n  }\n\n  protected _calc_width_height(): [number | null, number | null] {\n    let measuring: HTMLElement | null = this.el\n\n    while (measuring = measuring.parentElement) {\n      // .bk-root element doesn't bring any value\n      if (measuring.classList.contains(\"bk-root\"))\n        continue\n\n      // we reached <body> element, so use viewport size\n      if (measuring == document.body) {\n        const {left, right, top, bottom} = margin(document.body)\n        const width  = document.documentElement.clientWidth  - left - right\n        const height = document.documentElement.clientHeight - top  - bottom\n        return [width, height]\n      }\n\n      // stop on first element with sensible dimensions\n      const {left, right, top, bottom} = padding(measuring)\n      const rect = measuring.getBoundingClientRect()\n      const width  = rect.width  - left - right\n      const height = rect.height - top  - bottom\n\n      if(width != 0 && height != 0)\n        return [width, height]\n    }\n\n    // this element is detached from DOM\n    return [null, null]\n  }\n\n  protected _init_solver(): void {\n    this._root_width = new Variable(`${this.toString()}.root_width`)\n    this._root_height = new Variable(`${this.toString()}.root_height`)\n\n    // XXX: this relies on the fact that missing `strength` argument results\n    // in strength being NaN, which behaves like `Strength.required`. However,\n    // this is banned by the API.\n    this._solver.add_edit_variable(this._root_width, NaN)\n    this._solver.add_edit_variable(this._root_height, NaN)\n\n    const editables = this.model.get_all_editables()\n    for (const edit_variable of editables)\n      this._solver.add_edit_variable(edit_variable, Strength.strong)\n\n    const constraints = this.model.get_all_constraints()\n    for (const constraint of constraints)\n      this._solver.add_constraint(constraint)\n\n    const variables = this.model.get_constrained_variables()\n    if (variables.width != null)\n      this._solver.add_constraint(EQ(variables.width, this._root_width))\n    if (variables.height != null)\n      this._solver.add_constraint(EQ(variables.height, this._root_height))\n\n    this._solver.update_variables()\n    this._solver_inited = true\n  }\n\n  _suggest_dims(width: number | null, height: number | null): void {\n    const variables = this.model.get_constrained_variables()\n\n    if (variables.width != null || variables.height != null) {\n      if (width == null || height == null)\n        [width, height] = this._calc_width_height()\n\n      if (variables.width != null && width != null)\n        this._solver.suggest_value(this._root_width, width)\n      if (variables.height != null && height != null)\n        this._solver.suggest_value(this._root_height, height)\n\n      this._solver.update_variables()\n    }\n  }\n\n  resize(width: number | null = null, height: number | null = null): void {\n    if (!this.is_root)\n      (this.root as LayoutDOMView).resize(width, height)\n    else\n      this._do_layout(false, width, height)\n  }\n\n  partial_layout(): void {\n    if (!this.is_root)\n      (this.root as LayoutDOMView).partial_layout()\n    else\n      this._do_layout(false)\n  }\n\n  layout(): void {\n    if (!this.is_root)\n      (this.root as LayoutDOMView).layout()\n    else\n      this._do_layout(true)\n  }\n\n  protected _do_layout(full: boolean, width: number | null = null, height: number | null = null): void {\n    if (!this._solver_inited || full) {\n      this._solver.clear()\n      this._init_solver()\n    }\n\n    this._suggest_dims(width, height)\n\n    // XXX: do layout twice, because there are interdependencies between views,\n    // which currently cannot be resolved with one pass. The third one triggers\n    // rendering and (expensive) painting.\n    this._layout()     // layout (1)\n    this._layout()     // layout (2)\n    this._layout(true) // render & paint\n\n    this.notify_finished()\n  }\n\n  protected _layout(final: boolean = false): void {\n    for (const child of this.model.get_layoutable_children()) {\n      const child_view = this.child_views[child.id]\n      if (child_view._layout != null)\n        child_view._layout(final)\n    }\n\n    this.render()\n\n    if (final)\n      this._has_finished = true\n  }\n\n  rebuild_child_views(): void {\n    this.solver.clear()\n    this.build_child_views()\n    this.layout()\n  }\n\n  build_child_views(): void {\n    const children = this.model.get_layoutable_children()\n    build_views(this.child_views, children, {parent: this})\n\n    empty(this.el)\n\n    for (const child of children) {\n      // Look-up the child_view in this.child_views and then append We can't just\n      // read from this.child_views because then we don't get guaranteed ordering.\n      // Which is a problem in non-box layouts.\n      const child_view = this.child_views[child.id]\n      this.el.appendChild(child_view.el)\n    }\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n\n    if (this.is_root)\n      window.addEventListener(\"resize\", () => this.resize())\n\n    // XXX: this.connect(this.model.change, () => this.layout())\n    this.connect(this.model.properties.sizing_mode.change, () => this.layout())\n  }\n\n  _render_classes(): void {\n    this.el.className = \"\" // removes all classes\n\n    for (const name of this.css_classes())\n      this.el.classList.add(name)\n\n    this.el.classList.add(`bk-layout-${this.model.sizing_mode}`)\n\n    for (const cls of this.model.css_classes)\n      this.el.classList.add(cls)\n  }\n\n  render(): void {\n    this._render_classes()\n\n    switch (this.model.sizing_mode) {\n      case \"fixed\": {\n        // If the width or height is unset:\n        // - compute it from children\n        // - but then save for future use\n        // (for some reason widget boxes keep shrinking if you keep computing\n        // but this is more efficient and appropriate for fixed anyway).\n        let width: number\n        if (this.model.width != null)\n          width = this.model.width\n        else\n          width = this.get_width()\n          this.model.setv({width: width}, {silent: true})\n\n        let height: number\n        if (this.model.height != null)\n          height = this.model.height\n        else\n          height = this.get_height()\n          this.model.setv({height: height}, {silent: true})\n\n        this.solver.suggest_value(this.model._width, width)\n        this.solver.suggest_value(this.model._height, height)\n        break\n      }\n      case \"scale_width\": {\n        const height = this.get_height()\n        this.solver.suggest_value(this.model._height, height)\n        break\n      }\n      case \"scale_height\": {\n        const width = this.get_width()\n        this.solver.suggest_value(this.model._width, width)\n        break\n      }\n      case \"scale_both\": {\n        const [width, height] = this.get_width_height()\n        this.solver.suggest_value(this.model._width, width)\n        this.solver.suggest_value(this.model._height, height)\n        break\n      }\n    }\n\n    this.solver.update_variables()\n    this.position()\n  }\n\n  position(): void {\n    switch (this.model.sizing_mode) {\n      case \"fixed\":\n      case \"scale_width\":\n      case \"scale_height\": {\n        this.el.style.position = \"relative\"\n        this.el.style.left = \"\"\n        this.el.style.top = \"\"\n        break\n      }\n      case \"scale_both\":\n      case \"stretch_both\": {\n        this.el.style.position = \"absolute\"\n        this.el.style.left = `${this.model._dom_left.value}px`\n        this.el.style.top = `${this.model._dom_top.value}px`\n        break\n      }\n    }\n\n    this.el.style.width = `${this.model._width.value}px`\n    this.el.style.height = `${this.model._height.value}px`\n  }\n\n  // Subclasses should implement this to explain\n  // what their height should be in sizing_mode mode.\n  abstract get_height(): number\n\n  // Subclasses should implement this to explain\n  // what their width should be in sizing_mode mode.\n  abstract get_width(): number\n\n  get_width_height(): [number, number] {\n    const parent = this.el.parentElement\n    if (parent == null)\n      throw new Error(\"detached element\")\n\n    const parent_height = parent.clientHeight\n    const parent_width = parent.clientWidth\n\n    const ar = this.model.get_aspect_ratio()\n\n    const new_width_1 = parent_width\n    const new_height_1 = parent_width / ar\n\n    const new_width_2 = parent_height * ar\n    const new_height_2 = parent_height\n\n    let width: number\n    let height: number\n    if (new_width_1 < new_width_2) {\n      width = new_width_1\n      height = new_height_1\n    } else {\n      width = new_width_2\n      height = new_height_2\n    }\n\n    return [width, height]\n  }\n}\n\nexport namespace LayoutDOM {\n  export interface Attrs extends Model.Attrs {\n    height: number\n    width: number\n    disabled: boolean\n    sizing_mode: SizingMode\n    css_classes: string[]\n  }\n\n  export interface Props extends Model.Props {\n    height: p.Property<number>\n    width: p.Property<number>\n    disabled: p.Property<boolean>\n    sizing_mode: p.Property<SizingMode>\n    css_classes: p.Property<string[]>\n  }\n}\n\nexport interface LayoutDOM extends LayoutDOM.Attrs {}\n\nexport abstract class LayoutDOM extends Model {\n\n  properties: LayoutDOM.Props\n\n  constructor(attrs?: Partial<LayoutDOM.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"LayoutDOM\"\n\n    this.define({\n      height:      [ p.Number              ],\n      width:       [ p.Number              ],\n      disabled:    [ p.Bool,       false   ],\n      sizing_mode: [ p.SizingMode, \"fixed\" ],\n      css_classes: [ p.Array,      []      ],\n    })\n  }\n\n  _width: Variable\n  _height: Variable\n  // These are the COORDINATES of the four plot sides\n  _left: Variable\n  _right: Variable\n  _top: Variable\n  _bottom: Variable\n  // This is the dom position\n  _dom_top: Variable\n  _dom_left: Variable\n  // This is the distance from the side of the right and bottom,\n  _width_minus_right: Variable\n  _height_minus_bottom: Variable\n  // Whitespace variables\n  _whitespace_top: Variable\n  _whitespace_bottom: Variable\n  _whitespace_left: Variable\n  _whitespace_right: Variable\n\n  initialize(): void {\n    super.initialize()\n    this._width = new Variable(`${this.toString()}.width`)\n    this._height = new Variable(`${this.toString()}.height`)\n    this._left = new Variable(`${this.toString()}.left`)\n    this._right = new Variable(`${this.toString()}.right`)\n    this._top = new Variable(`${this.toString()}.top`)\n    this._bottom = new Variable(`${this.toString()}.bottom`)\n    this._dom_top = new Variable(`${this.toString()}.dom_top`)\n    this._dom_left = new Variable(`${this.toString()}.dom_left`)\n    this._width_minus_right = new Variable(`${this.toString()}.width_minus_right`)\n    this._height_minus_bottom = new Variable(`${this.toString()}.height_minus_bottom`)\n    this._whitespace_top = new Variable(`${this.toString()}.whitespace_top`)\n    this._whitespace_bottom = new Variable(`${this.toString()}.whitespace_bottom`)\n    this._whitespace_left = new Variable(`${this.toString()}.whitespace_left`)\n    this._whitespace_right = new Variable(`${this.toString()}.whitespace_right`)\n  }\n\n  get layout_bbox(): {[key: string]: number} {\n    return {\n      top: this._top.value,\n      left: this._left.value,\n      width: this._width.value,\n      height: this._height.value,\n      right: this._right.value,\n      bottom: this._bottom.value,\n      dom_top: this._dom_top.value,\n      dom_left: this._dom_left.value,\n    }\n  }\n\n  dump_layout(): void {\n    const layoutables: {[key: string]: {[key: string]: number}} = {}\n    const pending: Layoutable[] = [this]\n\n    let obj: Layoutable | undefined\n    while (obj = pending.shift()) {\n      pending.push(...obj.get_layoutable_children())\n      layoutables[obj.toString()] = obj.layout_bbox\n    }\n\n    console.table(layoutables)\n  }\n\n  get_all_constraints(): Constraint[] {\n    let constraints = this.get_constraints()\n\n    for (const child of this.get_layoutable_children()) {\n      if (child instanceof LayoutCanvas)\n        constraints = constraints.concat(child.get_constraints())\n      else\n        constraints = constraints.concat(child.get_all_constraints())\n    }\n\n    return constraints\n  }\n\n  get_all_editables(): Variable[] {\n    let editables = this.get_editables()\n\n    for (const child of this.get_layoutable_children()) {\n      if (child instanceof LayoutCanvas)\n        editables = editables.concat(child.get_editables())\n      else\n        editables = editables.concat(child.get_all_editables())\n    }\n\n    return editables\n  }\n\n  get_constraints(): Constraint[] {\n    return [\n      // Make sure things dont squeeze out of their bounding box\n      GE(this._dom_left),\n      GE(this._dom_top),\n\n      // Plot has to be inside the width/height\n      GE(this._left),\n      GE(this._width, [-1, this._right]),\n      GE(this._top),\n      GE(this._height, [-1, this._bottom]),\n\n      // Declare computed constraints\n      EQ(this._width_minus_right, [-1, this._width], this._right),\n      EQ(this._height_minus_bottom, [-1, this._height], this._bottom),\n    ]\n  }\n\n  get_layoutable_children(): LayoutDOM[] {\n    return []\n  }\n\n  get_editables(): Variable[] {\n    switch (this.sizing_mode) {\n      case \"fixed\":\n        return [this._height, this._width]\n      case \"scale_width\":\n        return [this._height]\n      case \"scale_height\":\n        return [this._width]\n      case \"scale_both\":\n        return [this._width, this._height]\n      default:\n        return []\n    }\n  }\n\n  get_constrained_variables(): {[key: string]: Variable} {\n    /*\n     * THE FOLLOWING ARE OPTIONAL VARS THAT\n     * YOU COULD ADD INTO SUBCLASSES\n     *\n     *  # When this widget is on the edge of a box visually,\n     *  # align these variables down that edge. Right/bottom\n     *  # are an inset from the edge.\n     *  on_edge_align_top    : this._top\n     *  on_edge_align_bottom : this._height_minus_bottom\n     *  on_edge_align_left   : this._left\n     *  on_edge_align_right  : this._width_minus_right\n     *  # When this widget is in a box cell with the same \"arity\n     *  # path\" as a widget in another cell, align these variables\n     *  # between the two box cells. Right/bottom are an inset from\n     *  # the edge.\n     *  box_cell_align_top   : this._top\n     *  box_cell_align_bottom: this._height_minus_bottom\n     *  box_cell_align_left  : this._left\n     *  box_cell_align_right : this._width_minus_right\n     *  # When this widget is in a box, make these the same distance\n     *  # apart in every widget. Right/bottom are inset from the edge.\n     *  box_equal_size_top   : this._top\n     *  box_equal_size_bottom: this._height_minus_bottom\n     *  box_equal_size_left  : this._left\n     *  box_equal_size_right : this._width_minus_right\n     */\n\n    const vars: {[key: string]: Variable} = {\n      origin_x          : this._dom_left,\n      origin_y          : this._dom_top,\n      whitespace_top    : this._whitespace_top,\n      whitespace_bottom : this._whitespace_bottom,\n      whitespace_left   : this._whitespace_left,\n      whitespace_right  : this._whitespace_right,\n    }\n\n    switch (this.sizing_mode) {\n      case \"stretch_both\":\n        vars.width  = this._width\n        vars.height = this._height\n        break\n      case \"scale_width\":\n        vars.width  = this._width\n        break\n      case \"scale_height\":\n        vars.height = this._height\n        break\n    }\n\n    return vars\n  }\n\n  get_aspect_ratio(): number {\n    return this.width / this.height\n  }\n}\n\nLayoutDOM.initClass()\n"]}