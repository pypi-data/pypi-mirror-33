{"version":3,"sources":["models/annotations/legend_item.ts"],"names":[],"mappings":"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","file":"legend_item.js","sourcesContent":["import {Model} from \"../../model\"\nimport {GlyphRenderer} from \"../renderers/glyph_renderer\"\nimport {ColumnarDataSource} from \"../sources/columnar_data_source\"\nimport {StringSpec, isValue, isField} from \"core/vectorization\"\nimport * as p from \"core/properties\"\nimport {logger} from \"core/logging\"\nimport {uniq, includes} from \"core/util/array\"\n\nexport namespace LegendItem {\n  export interface Attrs extends Model.Attrs {\n    label: StringSpec | null\n    renderers: GlyphRenderer[]\n  }\n\n  export interface Props extends Model.Props {}\n}\n\nexport interface LegendItem extends LegendItem.Attrs {}\n\nexport class LegendItem extends Model {\n\n  properties: LegendItem.Props\n\n  constructor(attrs?: Partial<LegendItem.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"LegendItem\"\n\n    this.define({\n      label:     [ p.StringSpec, null ],\n      renderers: [ p.Array,      []   ],\n    })\n  }\n\n  protected _check_data_sources_on_renderers(): boolean {\n    const field = this.get_field_from_label_prop()\n    if (field != null) {\n      if (this.renderers.length < 1) {\n        return false\n      }\n      const source = this.renderers[0].data_source\n      if (source != null) {\n        for (const r of this.renderers) {\n          if (r.data_source != source) {\n            return false\n          }\n        }\n      }\n    }\n    return true\n  }\n\n  protected _check_field_label_on_data_source(): boolean {\n    const field = this.get_field_from_label_prop()\n    if (field != null) {\n      if (this.renderers.length < 1) {\n        return false\n      }\n      const source = this.renderers[0].data_source\n      if (source != null && !includes(source.columns(), field)) {\n        return false\n      }\n    }\n    return true\n  }\n\n\n  initialize(): void {\n    super.initialize()\n\n    // Validate data_sources match\n    const data_source_validation = this._check_data_sources_on_renderers()\n    if (!data_source_validation)\n      logger.error(\"Non matching data sources on legend item renderers\")\n\n    // Validate label in data_source\n    const field_validation = this._check_field_label_on_data_source()\n    if (!field_validation)\n      logger.error(`Bad column name on label: ${this.label}`)\n  }\n\n  get_field_from_label_prop(): string | null {\n    const {label} = this\n    return isField(label) ? label.field : null\n  }\n\n  get_labels_list_from_label_prop(): string[] {\n    // Always return a list of the labels\n    if (isValue(this.label))\n      return [this.label.value]\n\n    const field = this.get_field_from_label_prop()\n    if (field != null) {\n      let source: ColumnarDataSource\n      if (this.renderers[0] && this.renderers[0].data_source != null)\n        source = this.renderers[0].data_source\n      else\n        return [\"No source found\"]\n\n      if (source instanceof ColumnarDataSource) {\n        const data = source.get_column(field)\n        if (data != null)\n          return uniq(Array.from(data))\n        else\n          return [\"Invalid field\"]\n      }\n    }\n\n    return []\n  }\n}\nLegendItem.initClass()\n"]}