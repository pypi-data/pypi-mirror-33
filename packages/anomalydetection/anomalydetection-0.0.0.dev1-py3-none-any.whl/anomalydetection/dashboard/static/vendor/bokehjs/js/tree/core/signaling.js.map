{"version":3,"sources":["core/signaling.ts"],"names":[],"mappings":"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","file":"signaling.js","sourcesContent":["// Based on https://github.com/phosphorjs/phosphor/blob/master/packages/signaling/src/index.ts\n\nimport {Constructor} from \"./class\"\nimport {defer} from \"./util/callback\"\nimport {find, removeBy} from \"./util/array\"\n\nexport type Slot<Args, Sender extends object> = ((args: Args, sender: Sender) => void) | ((args: Args) => void) | (() => void)\n\nexport class Signal<Args, Sender extends object> {\n\n  constructor(readonly sender: Sender, readonly name: string) {}\n\n  connect(slot: Slot<Args, Sender>, context: object | null = null): boolean {\n    if (!receiversForSender.has(this.sender)) {\n      receiversForSender.set(this.sender, [])\n    }\n\n    const receivers = receiversForSender.get(this.sender)!\n\n    if (findConnection(receivers, this, slot, context) != null) {\n      return false\n    }\n\n    const receiver = context || slot\n\n    if (!sendersForReceiver.has(receiver)) {\n      sendersForReceiver.set(receiver, [])\n    }\n\n    const senders = sendersForReceiver.get(receiver)!\n\n    const connection = {signal: this, slot, context}\n    receivers.push(connection)\n    senders.push(connection)\n\n    return true\n  }\n\n  disconnect(slot: Slot<Args, Sender>, context: object | null = null): boolean {\n    const receivers = receiversForSender.get(this.sender)\n    if (receivers == null || receivers.length === 0) {\n      return false\n    }\n\n    const connection = findConnection(receivers, this, slot, context)\n    if (connection == null) {\n      return false\n    }\n\n    const receiver = context || slot\n    const senders = sendersForReceiver.get(receiver)!\n\n    connection.signal = null\n    scheduleCleanup(receivers)\n    scheduleCleanup(senders)\n\n    return true\n  }\n\n  emit(args: Args): void {\n    const receivers = receiversForSender.get(this.sender) || []\n\n    for (const {signal, slot, context} of receivers) {\n      if (signal === this) {\n        slot.call(context, args, this.sender)\n      }\n    }\n  }\n}\n\nexport class Signal0<Sender extends object> extends Signal<void, Sender> {\n  emit(): void {\n    super.emit(undefined)\n  }\n}\n\nexport namespace Signal {\n  export function disconnectBetween(sender: object, receiver: object): void {\n    const receivers = receiversForSender.get(sender)\n    if (receivers == null || receivers.length === 0)\n      return\n\n    const senders = sendersForReceiver.get(receiver)\n    if (senders == null || senders.length === 0)\n      return\n\n    for (const connection of senders) {\n      if (connection.signal == null)\n        return\n\n      if (connection.signal.sender === sender)\n        connection.signal = null\n    }\n\n    scheduleCleanup(receivers)\n    scheduleCleanup(senders)\n  }\n\n  export function disconnectSender(sender: object): void {\n    const receivers = receiversForSender.get(sender)\n    if (receivers == null || receivers.length === 0)\n      return\n\n    for (const connection of receivers) {\n      if (connection.signal == null)\n        return\n\n      const receiver = connection.context || connection.slot\n      connection.signal = null\n      scheduleCleanup(sendersForReceiver.get(receiver)!)\n    }\n\n    scheduleCleanup(receivers)\n  }\n\n  export function disconnectReceiver(receiver: object): void {\n    const senders = sendersForReceiver.get(receiver)\n    if (senders == null || senders.length === 0)\n      return\n\n    for (const connection of senders) {\n      if (connection.signal == null)\n        return\n\n      const sender = connection.signal.sender\n      connection.signal = null\n      scheduleCleanup(receiversForSender.get(sender)!)\n    }\n\n    scheduleCleanup(senders)\n  }\n\n  export function disconnectAll(obj: object): void {\n    const receivers = receiversForSender.get(obj)\n    if (receivers != null && receivers.length !== 0) {\n      for (const connection of receivers) {\n        connection.signal = null\n      }\n      scheduleCleanup(receivers)\n    }\n\n    const senders = sendersForReceiver.get(obj)\n    if (senders != null && senders.length !== 0) {\n      for (const connection of senders) {\n        connection.signal = null\n      }\n      scheduleCleanup(senders)\n    }\n  }\n}\n\nexport interface ISignalable {\n  connect<Args, Sender extends object>(signal: Signal<Args, Sender>, slot: Slot<Args, Sender>): boolean\n}\n\nexport function Signalable<C extends Constructor>(Base?: C) {\n  // XXX: `class Foo extends Signalable(Object)` doesn't work (compiles, but fails at runtime), so\n  // we have to do this to allow signalable classes without an explict base class.\n  if (Base != null) {\n    return class extends Base implements ISignalable {\n      connect<Args, Sender extends object>(signal: Signal<Args, Sender>, slot: Slot<Args, Sender>): boolean {\n        return signal.connect(slot, this)\n      }\n    }\n  } else {\n    return class implements ISignalable {\n      connect<Args, Sender extends object>(signal: Signal<Args, Sender>, slot: Slot<Args, Sender>): boolean {\n        return signal.connect(slot, this)\n      }\n    }\n  }\n}\n\nexport namespace _Signalable {\n  export function connect<Args, Sender extends object>(this: object, signal: Signal<Args, Sender>, slot: Slot<Args, Sender>): boolean {\n    return signal.connect(slot, this)\n  }\n}\n\ninterface Connection {\n  signal: Signal<any, object> | null\n  readonly slot: Slot<any, object>\n  readonly context: object | null\n}\n\nconst receiversForSender = new WeakMap<object, Connection[]>()\nconst sendersForReceiver = new WeakMap<object, Connection[]>()\n\nfunction findConnection(conns: Connection[], signal: Signal<any, any>, slot: Slot<any, any>, context: any): Connection | undefined {\n  return find(conns, conn => conn.signal === signal && conn.slot === slot && conn.context === context)\n}\n\nconst dirtySet = new Set<Connection[]>()\n\nfunction scheduleCleanup(connections: Connection[]): void {\n  if (dirtySet.size === 0) {\n    defer(cleanupDirtySet);\n  }\n  dirtySet.add(connections);\n}\n\nfunction cleanupDirtySet(): void {\n  dirtySet.forEach((connections) => {\n    removeBy(connections, (connection) => connection.signal == null)\n  })\n  dirtySet.clear()\n}\n"]}