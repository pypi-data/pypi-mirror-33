{"version":3,"sources":["models/annotations/label_set.ts"],"names":[],"mappings":"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","file":"label_set.js","sourcesContent":["import {TextAnnotation, TextAnnotationView} from \"./text_annotation\"\nimport {ColumnarDataSource} from \"../sources/columnar_data_source\"\nimport {ColumnDataSource} from \"../sources/column_data_source\"\nimport {NumberSpec, AngleSpec, StringSpec, ColorSpec} from \"core/vectorization\"\nimport {TextMixinVector} from \"core/property_mixins\"\nimport {LineJoin, LineCap} from \"core/enums\"\nimport {SpatialUnits} from \"core/enums\"\nimport {div, show, hide} from \"core/dom\"\nimport * as p from \"core/properties\"\nimport {Arrayable} from \"core/types\"\nimport {Context2d} from \"core/util/canvas\"\n\nexport class LabelSetView extends TextAnnotationView {\n  model: LabelSet\n  visuals: LabelSet.Visuals\n\n  protected _x: Arrayable<number>\n  protected _y: Arrayable<number>\n  protected _text: Arrayable<string>\n  protected _angle: Arrayable<number>\n  protected _x_offset: Arrayable<number>\n  protected _y_offset: Arrayable<number>\n\n  initialize(options: any): void {\n    super.initialize(options)\n\n    this.set_data(this.model.source)\n\n    if (this.model.render_mode == 'css') {\n      for (let i = 0, end = this._text.length; i < end; i++) {\n        const el = div({class: 'bk-annotation-child', style: {display: \"none\"}})\n        this.el.appendChild(el)\n      }\n    }\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    if (this.model.render_mode == 'css') {\n      // dispatch CSS update immediately\n      this.connect(this.model.change, () => {\n        this.set_data(this.model.source)\n        this.render()\n      })\n      this.connect(this.model.source.streaming, () => {\n        this.set_data(this.model.source)\n        this.render()\n      })\n      this.connect(this.model.source.patching, () => {\n        this.set_data(this.model.source)\n        this.render()\n      })\n      this.connect(this.model.source.change, () => {\n        this.set_data(this.model.source)\n        this.render()\n      })\n    } else {\n      this.connect(this.model.change, () => {\n        this.set_data(this.model.source)\n        this.plot_view.request_render()\n      })\n      this.connect(this.model.source.streaming, () => {\n        this.set_data(this.model.source)\n        this.plot_view.request_render()\n      })\n      this.connect(this.model.source.patching, () => {\n        this.set_data(this.model.source)\n        this.plot_view.request_render()\n      })\n      this.connect(this.model.source.change, () => {\n        this.set_data(this.model.source)\n        this.plot_view.request_render()\n      })\n    }\n  }\n\n  set_data(source: ColumnarDataSource): void {\n    super.set_data(source)\n    this.visuals.warm_cache(source)\n  }\n\n  protected _map_data(): [Arrayable<number>, Arrayable<number>] {\n    const xscale = this.plot_view.frame.xscales[this.model.x_range_name]\n    const yscale = this.plot_view.frame.yscales[this.model.y_range_name]\n\n    const panel = this.model.panel != null ? this.model.panel : this.plot_view.frame\n\n    const sx = this.model.x_units == \"data\" ? xscale.v_compute(this._x) : panel.xview.v_compute(this._x)\n    const sy = this.model.y_units == \"data\" ? yscale.v_compute(this._y) : panel.yview.v_compute(this._y)\n\n    return [sx, sy]\n  }\n\n  render(): void {\n    if (!this.model.visible && this.model.render_mode == 'css')\n      hide(this.el)\n\n    if (!this.model.visible)\n      return\n\n    const draw = this.model.render_mode == 'canvas' ? this._v_canvas_text.bind(this) : this._v_css_text.bind(this)\n    const {ctx} = this.plot_view.canvas_view\n\n    const [sx, sy] = this._map_data()\n\n    for (let i = 0, end = this._text.length; i < end; i++) {\n      draw(ctx, i, this._text[i], sx[i] + this._x_offset[i], sy[i] - this._y_offset[i], this._angle[i])\n    }\n  }\n\n  protected _get_size(): number {\n    const {ctx} = this.plot_view.canvas_view\n    this.visuals.text.set_value(ctx)\n\n    switch (this.model.panel!.side) {\n      case \"above\":\n      case \"below\": {\n        const height = ctx.measureText(this._text[0]).ascent\n        return height\n      }\n      case \"left\":\n      case \"right\": {\n        const {width} = ctx.measureText(this._text[0])\n        return width\n      }\n      default:\n        throw new Error(\"unreachable code\")\n    }\n  }\n\n  protected _v_canvas_text(ctx: Context2d, i: number, text: string, sx: number, sy: number, angle: number): void {\n    this.visuals.text.set_vectorize(ctx, i)\n    const bbox_dims = this._calculate_bounding_box_dimensions(ctx, text)\n\n    ctx.save()\n\n    ctx.beginPath()\n    ctx.translate(sx, sy)\n    ctx.rotate(angle)\n\n    ctx.rect(bbox_dims[0], bbox_dims[1], bbox_dims[2], bbox_dims[3])\n\n    if (this.visuals.background_fill.doit) {\n      this.visuals.background_fill.set_vectorize(ctx, i)\n      ctx.fill()\n    }\n\n    if (this.visuals.border_line.doit) {\n      this.visuals.border_line.set_vectorize(ctx, i)\n      ctx.stroke()\n    }\n\n    if (this.visuals.text.doit) {\n      this.visuals.text.set_vectorize(ctx, i)\n      ctx.fillText(text, 0, 0)\n    }\n\n    ctx.restore()\n  }\n\n  protected _v_css_text(ctx: Context2d, i: number, text: string, sx: number, sy: number, angle: number): void {\n    const el = this.el.children[i] as HTMLElement\n    el.textContent = text\n\n    this.visuals.text.set_vectorize(ctx, i)\n    const bbox_dims = this._calculate_bounding_box_dimensions(ctx, text)\n\n    // attempt to support vector-style (\"8 4 8\") line dashing for css mode\n    const ld = this.visuals.border_line.line_dash.value()\n    const line_dash = ld.length < 2 ? \"solid\" : \"dashed\"\n\n    this.visuals.border_line.set_vectorize(ctx, i)\n    this.visuals.background_fill.set_vectorize(ctx, i)\n\n    el.style.position = 'absolute'\n    el.style.left = `${sx + bbox_dims[0]}px`\n    el.style.top = `${sy + bbox_dims[1]}px`\n    el.style.color = `${this.visuals.text.text_color.value()}`\n    el.style.opacity = `${this.visuals.text.text_alpha.value()}`\n    el.style.font = `${this.visuals.text.font_value()}`\n    el.style.lineHeight = \"normal\"  // needed to prevent ipynb css override\n\n    if (angle) {\n      el.style.transform = `rotate(${angle}rad)`\n    }\n\n    if (this.visuals.background_fill.doit) {\n      el.style.backgroundColor = `${this.visuals.background_fill.color_value()}`\n    }\n\n    if (this.visuals.border_line.doit) {\n      el.style.borderStyle = `${line_dash}`\n      el.style.borderWidth = `${this.visuals.border_line.line_width.value()}px`\n      el.style.borderColor = `${this.visuals.border_line.color_value()}`\n    }\n\n    show(el)\n  }\n}\n\nexport namespace LabelSet {\n  // line:border_ v\n  export interface BorderLine {\n    border_line_color: ColorSpec\n    border_line_width: NumberSpec\n    border_line_alpha: NumberSpec\n    border_line_join: LineJoin\n    border_line_cap: LineCap\n    border_line_dash: number[]\n    border_line_dash_offset: number\n  }\n\n  // fill:background_ v\n  export interface BackgroundFill {\n    background_fill_color: ColorSpec\n    background_fill_alpha: NumberSpec\n  }\n\n  export interface Mixins extends TextMixinVector, BorderLine, BackgroundFill {}\n\n  export interface Attrs extends TextAnnotation.Attrs, Mixins {\n    x: NumberSpec\n    y: NumberSpec\n    x_units: SpatialUnits\n    y_units: SpatialUnits\n    text: StringSpec\n    angle: AngleSpec\n    x_offset: NumberSpec\n    y_offset: NumberSpec\n    source: ColumnarDataSource\n    x_range_name: string\n    y_range_name: string\n  }\n\n  export interface Props extends TextAnnotation.Props {}\n\n  export type Visuals = TextAnnotation.Visuals\n}\n\nexport interface LabelSet extends LabelSet.Attrs {}\n\nexport class LabelSet extends TextAnnotation {\n\n  properties: LabelSet.Props\n\n  constructor(attrs?: Partial<LabelSet.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'LabelSet'\n    this.prototype.default_view = LabelSetView\n\n    this.mixins(['text', 'line:border_', 'fill:background_'])\n\n    this.define({\n      x:            [ p.NumberSpec                      ],\n      y:            [ p.NumberSpec                      ],\n      x_units:      [ p.SpatialUnits, 'data'            ],\n      y_units:      [ p.SpatialUnits, 'data'            ],\n      text:         [ p.StringSpec,   { field: \"text\" } ],\n      angle:        [ p.AngleSpec,    0                 ],\n      x_offset:     [ p.NumberSpec,   { value: 0 }      ],\n      y_offset:     [ p.NumberSpec,   { value: 0 }      ],\n      source:       [ p.Instance,     () => new ColumnDataSource()  ],\n      x_range_name: [ p.String,      'default'          ],\n      y_range_name: [ p.String,      'default'          ],\n    })\n\n    this.override({\n      background_fill_color: null,\n      border_line_color: null,\n    })\n  }\n}\nLabelSet.initClass()\n"]}