{"version":3,"sources":["core/has_props.ts"],"names":[],"mappings":"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","file":"has_props.js","sourcesContent":["//import {logger} from \"./logging\"\nimport {View} from \"./view\"\nimport {Class} from \"./class\"\nimport {Signal0, Signal, Signalable} from \"./signaling\"\nimport * as property_mixins from \"./property_mixins\"\nimport {Ref, is_ref, create_ref} from \"./util/refs\"\nimport * as p from \"./properties\"\nimport {Property} from \"./properties\"\nimport {uniqueId} from \"./util/string\"\nimport {max, copy} from \"./util/array\"\nimport {extend, values, clone, isEmpty} from \"./util/object\"\nimport {isObject, isArray, isFunction} from \"./util/types\"\nimport {isEqual} from './util/eq'\nimport {ColumnarDataSource} from \"models/sources/columnar_data_source\"\nimport {Document} from \"../document\"\n\nexport module HasProps {\n  export interface Attrs {\n    id: string\n  }\n\n  export interface Props {\n    id: p.Any\n  }\n\n  export interface SetOptions {\n    check_eq?: boolean\n    silent?: boolean\n    no_change?: boolean\n    defaults?: boolean\n    setter_id?: string\n  }\n}\n\nexport interface HasProps extends HasProps.Attrs {}\n\nexport abstract class HasProps extends Signalable() {\n\n  static initClass(): void {\n    this.prototype.type = \"HasProps\"\n\n    this.prototype.props = {}\n    this.prototype.mixins = []\n\n    this.define({\n      id: [ p.Any ],\n    })\n  }\n\n  // {{{ prototype\n  type: string\n  default_view: Class<View>\n  props: {[key: string]: {\n    type: Class<Property<any>>,  // T\n    default_value: any,          // T\n    internal: boolean,\n  }}\n  mixins: string[]\n  // }}}\n\n  private static _fix_default(default_value: any, _attr: string): undefined | (() => any) {\n    if (default_value === undefined)\n      return undefined\n    else if (isFunction(default_value))\n      return default_value\n    else if (!isObject(default_value))\n      return () => default_value\n    else {\n      //logger.warn(`${this.prototype.type}.${attr} uses unwrapped non-primitive default value`)\n\n      if (isArray(default_value))\n        return () => copy(default_value)\n      else\n        return () => clone(default_value)\n    }\n  }\n\n  static define(obj: any): void {\n    for (const name in obj) {\n      const prop = obj[name]\n      if (this.prototype.props[name] != null)\n        throw new Error(`attempted to redefine property '${this.prototype.type}.${name}'`)\n\n      if ((this.prototype as any)[name] != null)\n        throw new Error(`attempted to redefine attribute '${this.prototype.type}.${name}'`)\n\n      Object.defineProperty(this.prototype, name, {\n        // XXX: don't use tail calls in getters/setters due to https://bugs.webkit.org/show_bug.cgi?id=164306\n        get: function(this: HasProps): any {\n          const value = this.getv(name)\n          return value\n        },\n        set: function(this: HasProps, value: any): HasProps {\n          this.setv({[name]: value})\n          return this\n        },\n        configurable: false,\n        enumerable: true,\n      })\n\n      const [type, default_value, internal] = prop\n      const refined_prop = {\n        type: type,\n        default_value: this._fix_default(default_value, name),\n        internal: internal || false,\n      }\n\n      const props = clone(this.prototype.props)\n      props[name] = refined_prop\n      this.prototype.props = props\n    }\n  }\n\n  static internal(obj: any): void {\n    const _object: any = {}\n    for (const name in obj) {\n      const prop = obj[name]\n      const [type, default_value] = prop\n      _object[name] = [type, default_value, true]\n    }\n    this.define(_object)\n  }\n\n  static mixin(...names: string[]): void {\n    this.define(property_mixins.create(names))\n    const mixins = this.prototype.mixins.concat(names)\n    this.prototype.mixins = mixins\n  }\n\n  static mixins(names: string[]): void {\n    this.mixin(...names)\n  }\n\n  static override(obj: any): void {\n    for (const name in obj) {\n      const default_value = this._fix_default(obj[name], name)\n      const value = this.prototype.props[name]\n      if (value == null)\n        throw new Error(`attempted to override nonexistent '${this.prototype.type}.${name}'`)\n      const props = clone(this.prototype.props)\n      props[name] = extend({}, value, { default_value: default_value })\n      this.prototype.props = props\n    }\n  }\n\n  toString(): string {\n    return `${this.type}(${this.id})`\n  }\n\n  _subtype: string | undefined = undefined\n\n  document: Document | null = null\n\n  readonly destroyed       = new Signal0<this>(this, \"destroyed\")\n  readonly change          = new Signal0<this>(this, \"change\")\n  readonly transformchange = new Signal0<this>(this, \"transformchange\")\n\n  readonly attributes: {[key: string]: any} = {}\n  readonly properties: {[key: string]: any} = {}\n\n  protected readonly _set_after_defaults: {[key: string]: boolean} = {}\n\n  constructor(attrs: {[key: string]: any} = {}) {\n    super()\n\n    for (const name in this.props) {\n      const {type, default_value} = this.props[name]\n      if (type != null)\n        this.properties[name] = new type(this, name, default_value)\n      else\n        throw new Error(`undefined property type for ${this.type}.${name}`)\n    }\n\n    // auto generating ID\n    if (attrs.id == null)\n      this.setv({id: uniqueId()}, {silent: true})\n\n    const deferred = attrs.__deferred__ || false\n    if (deferred) {\n      attrs = clone(attrs)\n      delete attrs.__deferred__\n    }\n\n    this.setv(attrs, {silent: true})\n\n    // allowing us to defer initialization when loading many models\n    // when loading a bunch of models, we want to do initialization as a second pass\n    // because other objects that this one depends on might not be loaded yet\n\n    if (!deferred)\n      this.finalize()\n  }\n\n  finalize(): void {\n    // This is necessary because the initial creation of properties relies on\n    // model.get which is not usable at that point yet in the constructor. This\n    // initializer is called when deferred initialization happens for all models\n    // and insures that the Bokeh properties are initialized from Backbone\n    // attributes in a consistent way.\n    //\n    // TODO (bev) split property creation up into two parts so that only the\n    // portion of init that can be done happens in HasProps constructor and so\n    // that subsequent updates do not duplicate that setup work.\n    for (const name in this.properties) {\n      const prop = this.properties[name]\n      prop.update()\n      if (prop.spec.transform != null)\n        this.connect(prop.spec.transform.change, () => this.transformchange.emit())\n    }\n\n    this.initialize()\n    this.connect_signals()\n  }\n\n  initialize(): void {}\n\n  connect_signals(): void {}\n\n  disconnect_signals(): void {\n    Signal.disconnectReceiver(this)\n  }\n\n  destroy(): void {\n    this.disconnect_signals()\n    this.destroyed.emit()\n  }\n\n  // Create a new model with identical attributes to this one.\n  clone(): this {\n    return new (this.constructor as any)(this.attributes)\n  }\n\n  private _pending: boolean = false\n  private _changing: boolean = false\n\n  // Set a hash of model attributes on the object, firing `\"change\"`. This is\n  // the core primitive operation of a model, updating the data and notifying\n  // anyone who needs to know about the change in state. The heart of the beast.\n  private _setv(attrs: {[key: string]: any}, options: HasProps.SetOptions): void {\n    // Extract attributes and options.\n    const check_eq   = options.check_eq\n    const silent     = options.silent\n    const changes    = []\n    const changing   = this._changing\n    this._changing = true\n\n    const current = this.attributes\n\n    // For each `set` attribute, update or delete the current value.\n    for (const attr in attrs) {\n      const val = attrs[attr]\n      if (check_eq !== false) {\n        if (!isEqual(current[attr], val))\n          changes.push(attr)\n      } else\n        changes.push(attr)\n      current[attr] = val\n    }\n\n    // Trigger all relevant attribute changes.\n    if (!silent) {\n      if (changes.length > 0)\n        this._pending = true\n      for (let i = 0; i < changes.length; i++)\n        this.properties[changes[i]].change.emit()\n    }\n\n    // You might be wondering why there's a `while` loop here. Changes can\n    // be recursively nested within `\"change\"` events.\n    if (changing)\n      return\n    if (!silent && !options.no_change) {\n      while (this._pending) {\n        this._pending = false\n        this.change.emit()\n      }\n    }\n\n    this._pending = false\n    this._changing = false\n  }\n\n  setv(attrs: {[key: string]: any}, options: HasProps.SetOptions = {}): void {\n    for (const key in attrs) {\n      if (!attrs.hasOwnProperty(key))\n        continue\n\n      const prop_name = key\n      if (this.props[prop_name] == null)\n        throw new Error(`property ${this.type}.${prop_name} wasn't declared`)\n\n      if (!(options != null && options.defaults))\n        this._set_after_defaults[key] = true\n    }\n\n    if (!isEmpty(attrs)) {\n      const old: typeof attrs = {}\n      for (const key in attrs)\n        old[key] = this.getv(key)\n      this._setv(attrs, options)\n\n      const silent = options.silent\n      if (silent == null || !silent) {\n        for (const key in attrs)\n          this._tell_document_about_change(key, old[key], this.getv(key), options)\n      }\n    }\n  }\n\n  getv(prop_name: string): any {\n    if (this.props[prop_name] == null)\n      throw new Error(`property ${this.type}.${prop_name} wasn't declared`)\n    else\n      return this.attributes[prop_name]\n  }\n\n  ref(): Ref {\n    return create_ref(this)\n  }\n\n  // we only keep the subtype so we match Python;\n  // only Python cares about this\n  set_subtype(subtype: string): void {\n    this._subtype = subtype\n  }\n\n  attribute_is_serializable(attr: string): boolean {\n    const prop = this.props[attr]\n    if (prop == null)\n      throw new Error(`${this.type}.attribute_is_serializable('${attr}'): ${attr} wasn't declared`)\n    else\n      return !prop.internal\n  }\n\n  // dict of attributes that should be serialized to the server. We\n  // sometimes stick things in attributes that aren't part of the\n  // Document's models, subtypes that do that have to remove their\n  // extra attributes here.\n  serializable_attributes(): {[key: string]: any} {\n    const attrs: {[key: string]: any} = {}\n    for (const name in this.attributes) {\n      const value = this.attributes[name]\n      if (this.attribute_is_serializable(name))\n        attrs[name] = value\n    }\n    return attrs\n  }\n\n  static _value_to_json(_key: string, value: any, _optional_parent_object: any): any {\n    if (value instanceof HasProps)\n      return value.ref()\n    else if (isArray(value)) {\n      const ref_array: any[] = []\n      for (let i = 0; i < value.length; i++) {\n        const v = value[i]\n        ref_array.push(HasProps._value_to_json(i.toString(), v, value))\n      }\n      return ref_array\n    } else if (isObject(value)) {\n      const ref_obj: {[key: string]: any} = {}\n      for (const subkey in value) {\n        if (value.hasOwnProperty(subkey))\n          ref_obj[subkey] = HasProps._value_to_json(subkey, value[subkey], value)\n      }\n      return ref_obj\n    } else\n      return value\n  }\n\n  // Convert attributes to \"shallow\" JSON (values which are themselves models\n  // are included as just references)\n  attributes_as_json(include_defaults: boolean = true, value_to_json=HasProps._value_to_json): any {\n    const serializable = this.serializable_attributes()\n    const attrs: {[key: string]: any} = {}\n    for (const key in serializable) {\n      if (serializable.hasOwnProperty(key)) {\n        const value = serializable[key]\n        if (include_defaults)\n          attrs[key] = value\n        else if (key in this._set_after_defaults)\n          attrs[key] = value\n      }\n    }\n    return value_to_json(\"attributes\", attrs, this)\n  }\n\n  // this is like _value_record_references but expects to find refs\n  // instead of models, and takes a doc to look up the refs in\n  static _json_record_references(doc: Document, v: any, result: {[key: string]: HasProps}, recurse: boolean): void {\n    if (v == null) {\n    } else if (is_ref(v)) {\n      if (!(v.id in result)) {\n        const model = doc.get_model_by_id(v.id)\n        HasProps._value_record_references(model, result, recurse)\n      }\n    } else if (isArray(v)) {\n      for (const elem of v)\n        HasProps._json_record_references(doc, elem, result, recurse)\n    } else if (isObject(v)) {\n      for (const k in v) {\n        if (v.hasOwnProperty(k)) {\n          const elem = v[k]\n          HasProps._json_record_references(doc, elem, result, recurse)\n        }\n      }\n    }\n  }\n\n  // add all references from 'v' to 'result', if recurse\n  // is true then descend into refs, if false only\n  // descend into non-refs\n  static _value_record_references(v: any, result: {[key: string]: HasProps}, recurse: boolean): void {\n    if (v == null) {\n    } else if (v instanceof HasProps) {\n      if (!(v.id in result)) {\n        result[v.id] = v\n        if (recurse) {\n          const immediate = v._immediate_references()\n          for (const obj of immediate)\n            HasProps._value_record_references(obj, result, true) // true=recurse\n        }\n      }\n    } else if (v.buffer instanceof ArrayBuffer) {\n    } else if (isArray(v)) {\n      for (const elem of v)\n        HasProps._value_record_references(elem, result, recurse)\n    } else if (isObject(v)) {\n      for (const k in v) {\n        if (v.hasOwnProperty(k)) {\n          const elem = v[k]\n          HasProps._value_record_references(elem, result, recurse)\n        }\n      }\n    }\n  }\n\n  // Get models that are immediately referenced by our properties\n  // (do not recurse, do not include ourselves)\n  protected _immediate_references(): HasProps[] {\n    const result = {}\n    const attrs = this.serializable_attributes()\n    for (const key in attrs) {\n      const value = attrs[key]\n      HasProps._value_record_references(value, result, false) // false = no recurse\n    }\n\n    return values(result)\n  }\n\n  references(): HasProps[] {\n    const references = {}\n    HasProps._value_record_references(this, references, true)\n    return values(references)\n  }\n\n  protected _doc_attached(): void {}\n\n  attach_document(doc: Document): void {\n    // This should only be called by the Document implementation to set the document field\n    if (this.document != null && this.document != doc)\n      throw new Error(\"models must be owned by only a single document\")\n\n    this.document = doc\n    this._doc_attached()\n  }\n\n  detach_document(): void {\n    // This should only be called by the Document implementation to unset the document field\n    this.document = null\n  }\n\n  protected _tell_document_about_change(attr: string, old: any, new_: any, options: {setter_id?: string}): void {\n    if (!this.attribute_is_serializable(attr))\n      return\n\n    if (this.document != null) {\n      const new_refs: {[key: string]: HasProps} = {}\n      HasProps._value_record_references(new_, new_refs, false)\n\n      const old_refs: {[key: string]: HasProps} = {}\n      HasProps._value_record_references(old, old_refs, false)\n\n      let need_invalidate = false\n      for (const new_id in new_refs) {\n        if (!(new_id in old_refs)) {\n          need_invalidate = true\n          break\n        }\n      }\n\n      if (!need_invalidate) {\n        for (const old_id in old_refs) {\n          if (!(old_id in new_refs)) {\n            need_invalidate = true\n            break\n          }\n        }\n      }\n\n      if (need_invalidate)\n        this.document._invalidate_all_models()\n\n      this.document._notify_change(this, attr, old, new_, options)\n    }\n  }\n\n  materialize_dataspecs(source: ColumnarDataSource): {[key: string]: any} {\n    // Note: this should be moved to a function separate from HasProps\n    const data: {[key: string]: any} = {}\n    for (const name in this.properties) {\n      const prop = this.properties[name]\n      if (!prop.dataspec)\n        continue\n      // this skips optional properties like radius for circles\n      if (prop.optional && prop.spec.value == null && !(name in this._set_after_defaults))\n        continue\n\n      data[`_${name}`] = prop.array(source)\n      // the shapes are indexed by the column name, but when we materialize the dataspec, we should\n      // store under the canonical field name, e.g. _image_shape, even if the column name is \"foo\"\n      if (prop.spec.field != null && prop.spec.field in source._shapes)\n        data[`_${name}_shape`] = source._shapes[prop.spec.field]\n      if (prop instanceof p.Distance)\n        data[`max_${name}`] = max(data[`_${name}`])\n    }\n    return data\n  }\n}\nHasProps.initClass()\n"]}