{"version":3,"sources":["models/tools/gestures/pan_tool.ts"],"names":[],"mappings":"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","file":"pan_tool.js","sourcesContent":["import {GestureTool, GestureToolView} from \"./gesture_tool\"\nimport * as p from \"core/properties\"\nimport {GestureEvent} from \"core/ui_events\"\nimport {Dimensions} from \"core/enums\"\n\nexport class PanToolView extends GestureToolView {\n  model: PanTool\n\n  protected last_dx: number\n  protected last_dy: number\n\n  protected v_axis_only: boolean\n  protected h_axis_only: boolean\n\n  protected pan_info: {\n    xrs: {[key: string]: {start: number, end: number}}\n    yrs: {[key: string]: {start: number, end: number}}\n    sdx: number\n    sdy: number\n  }\n\n  _pan_start(ev: GestureEvent): void {\n    this.last_dx = 0\n    this.last_dy = 0\n    const {sx, sy} = ev\n    const bbox = this.plot_model.frame.bbox\n    if (!bbox.contains(sx, sy)) {\n      const hr = bbox.h_range\n      const vr = bbox.v_range\n      if (sx < hr.start || sx > hr.end)\n        this.v_axis_only = true\n      if (sy < vr.start || sy > vr.end)\n        this.h_axis_only = true\n    }\n\n    if (this.model.document != null)\n      this.model.document.interactive_start(this.plot_model.plot)\n  }\n\n  _pan(ev: GestureEvent): void {\n    this._update(ev.deltaX, ev.deltaY)\n\n    if (this.model.document != null)\n      this.model.document.interactive_start(this.plot_model.plot)\n  }\n\n  _pan_end(_e: GestureEvent): void {\n    this.h_axis_only = false\n    this.v_axis_only = false\n\n    if (this.pan_info != null)\n      this.plot_view.push_state('pan', {range: this.pan_info})\n  }\n\n  _update(dx: number, dy: number): void {\n    const frame = this.plot_model.frame\n\n    const new_dx = dx - this.last_dx\n    const new_dy = dy - this.last_dy\n\n    const hr = frame.bbox.h_range\n    const sx_low  = hr.start - new_dx\n    const sx_high = hr.end - new_dx\n\n    const vr = frame.bbox.v_range\n    const sy_low  = vr.start - new_dy\n    const sy_high = vr.end - new_dy\n\n    const dims = this.model.dimensions\n\n    let sx0: number\n    let sx1: number\n    let sdx: number\n    if ((dims == 'width' || dims == 'both') && !this.v_axis_only) {\n      sx0 = sx_low\n      sx1 = sx_high\n      sdx = -new_dx\n    } else {\n      sx0 = hr.start\n      sx1 = hr.end\n      sdx = 0\n    }\n\n    let sy0: number\n    let sy1: number\n    let sdy: number\n    if ((dims == 'height' || dims == 'both') && !this.h_axis_only) {\n      sy0 = sy_low\n      sy1 = sy_high\n      sdy = -new_dy\n    } else {\n      sy0 = vr.start\n      sy1 = vr.end\n      sdy = 0\n    }\n\n    this.last_dx = dx\n    this.last_dy = dy\n\n    const {xscales, yscales} = frame\n\n    const xrs: {[key: string]: {start: number, end: number}} = {}\n    for (const name in xscales) {\n      const scale = xscales[name]\n      const [start, end] = scale.r_invert(sx0, sx1)\n      xrs[name] = {start: start, end: end}\n    }\n\n    const yrs: {[key: string]: {start: number, end: number}} = {}\n    for (const name in yscales) {\n      const scale = yscales[name]\n      const [start, end] = scale.r_invert(sy0, sy1)\n      yrs[name] = {start: start, end: end}\n    }\n\n    this.pan_info = {\n      xrs: xrs,\n      yrs: yrs,\n      sdx: sdx,\n      sdy: sdy,\n    }\n\n    this.plot_view.update_range(this.pan_info, true)\n  }\n}\n\nexport namespace PanTool {\n  export interface Attrs extends GestureTool.Attrs {\n    dimensions: Dimensions\n  }\n\n  export interface Props extends GestureTool.Props {}\n}\n\nexport interface PanTool extends PanTool.Attrs {}\n\nexport class PanTool extends GestureTool {\n\n  properties: PanTool.Props\n\n  constructor(attrs?: Partial<PanTool.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"PanTool\"\n    this.prototype.default_view = PanToolView\n\n    this.define({\n      dimensions: [ p.Dimensions, \"both\" ],\n    })\n  }\n\n  tool_name = \"Pan\"\n  event_type = \"pan\" as \"pan\"\n  default_order = 10\n\n  get tooltip(): string {\n    return this._get_dim_tooltip(\"Pan\", this.dimensions)\n  }\n\n  get icon(): string {\n    switch (this.dimensions) {\n      case \"both\":   return \"bk-tool-icon-pan\"\n      case \"width\":  return \"bk-tool-icon-xpan\"\n      case \"height\": return \"bk-tool-icon-ypan\"\n    }\n  }\n}\n\nPanTool.initClass()\n"]}