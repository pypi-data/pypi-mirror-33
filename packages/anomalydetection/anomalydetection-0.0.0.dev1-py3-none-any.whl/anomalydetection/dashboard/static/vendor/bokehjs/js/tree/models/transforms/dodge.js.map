{"version":3,"sources":["models/transforms/dodge.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAErC,uDAA0D;AAC1D,mCAAoC;AAEpC,yCAAuD;AAavD;IAA2B,iCAAS;IAIlC,eAAY,KAA4B;eACtC,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,eAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,OAAO,CAAA;QAE7B,IAAI,CAAC,MAAM,CAAC;YACV,KAAK,EAAE,CAAE,CAAC,CAAC,MAAM,EAAG,CAAC,CAAE;YACvB,KAAK,EAAE,CAAE,CAAC,CAAC,QAAQ,CAAI;SACxB,CAAC,CAAA;IACJ,CAAC;IAED,uCAAuC;IACvC,yBAAS,GAAT,UAAU,GAA+B;QACvC,IAAI,EAAqB,CAAA;QACzB,IAAI,IAAI,CAAC,KAAK,YAAY,0BAAW;YACnC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;aAC7B,IAAI,qBAAa,CAAC,GAAG,EAAE,gBAAQ,CAAC;YACnC,EAAE,GAAG,GAAG,CAAA;;YAER,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAA;QAE/B,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;YACf,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;SAC7B;QACD,OAAO,MAAM,CAAA;IACf,CAAC;IAED,uBAAO,GAAP,UAAQ,CAAkB;QACxB,IAAI,IAAI,CAAC,KAAK,YAAY,0BAAW;YACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;aAC1C,IAAI,gBAAQ,CAAC,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;;YAEvB,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAA;IACjC,CAAC;IAES,wBAAQ,GAAlB,UAAmB,CAAS;QAC1B,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;IACvB,CAAC;IACH,YAAC;AAAD,CA/CA,AA+CC,CA/C0B,qBAAS,GA+CnC;AA/CY,sBAAK;AAgDlB,KAAK,CAAC,SAAS,EAAE,CAAA","file":"dodge.js","sourcesContent":["import {Transform} from \"./transform\"\nimport {Range} from \"../ranges/range\"\nimport {Factor, FactorRange} from \"../ranges/factor_range\"\nimport * as p from \"core/properties\"\nimport {Arrayable} from \"core/types\"\nimport {isNumber, isArrayableOf} from \"core/util/types\"\n\nexport namespace Dodge {\n  export interface Attrs extends Transform.Attrs {\n    value: number\n    range: Range\n  }\n\n  export interface Props extends Transform.Props {}\n}\n\nexport interface Dodge extends Dodge.Attrs {}\n\nexport class Dodge extends Transform {\n\n  properties: Dodge.Props\n\n  constructor(attrs?: Partial<Dodge.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Dodge\"\n\n    this.define({\n      value: [ p.Number,  0 ],\n      range: [ p.Instance   ],\n    })\n  }\n\n  // XXX: this is repeated in ./jitter.ts\n  v_compute(xs0: Arrayable<number | Factor>): Arrayable<number> {\n    let xs: Arrayable<number>\n    if (this.range instanceof FactorRange)\n      xs = this.range.v_synthetic(xs0)\n    else if (isArrayableOf(xs0, isNumber))\n      xs = xs0\n    else\n      throw new Error(\"unexpected\")\n\n    const result = new Float64Array(xs.length)\n    for (let i = 0; i < xs.length; i++) {\n      const x = xs[i]\n      result[i] = this._compute(x)\n    }\n    return result\n  }\n\n  compute(x: number | Factor): number {\n    if (this.range instanceof FactorRange)\n      return this._compute(this.range.synthetic(x))\n    else if (isNumber(x))\n      return this._compute(x)\n    else\n      throw new Error(\"unexpected\")\n  }\n\n  protected _compute(x: number): number {\n    return x + this.value\n  }\n}\nDodge.initClass()\n"]}