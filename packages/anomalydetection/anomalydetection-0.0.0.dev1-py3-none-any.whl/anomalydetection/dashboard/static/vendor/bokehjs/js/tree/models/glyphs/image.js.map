{"version":3,"sources":["models/glyphs/image.ts"],"names":[],"mappings":"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","file":"image.js","sourcesContent":["import {XYGlyph, XYGlyphView, XYGlyphData} from \"./xy_glyph\"\nimport {DistanceSpec, NumberSpec} from \"core/vectorization\"\nimport {ColorMapper} from \"../mappers/color_mapper\"\nimport {LinearColorMapper} from \"../mappers/linear_color_mapper\"\nimport {Arrayable} from \"core/types\"\nimport * as p from \"core/properties\"\nimport {max, concat} from \"core/util/array\"\nimport {Context2d} from \"core/util/canvas\"\nimport {Rect} from \"core/util/spatial\"\nimport {SpatialIndex} from \"core/util/spatial\"\nimport * as hittest from \"core/hittest\";\nimport {Selection} from \"../selections/selection\";\nimport {PointGeometry} from \"core/geometry\"\n\n// XXX: because ImageData is a global\nexport interface _ImageData extends XYGlyphData {\n  image_data: Arrayable<HTMLCanvasElement>\n\n  _image: Arrayable<Arrayable<number> | number[][]>\n  _dw: Arrayable<number>\n  _dh: Arrayable<number>\n\n  _image_shape?: Arrayable<[number, number]>\n\n  sw: Arrayable<number>\n  sh: Arrayable<number>\n\n  max_dw: number\n  max_dh: number\n}\n\nexport interface ImageView extends _ImageData {}\n\n\nexport interface ImageIndex {\n  index: number\n  dim1: number\n  dim2: number\n  flat_index: number\n}\n\nexport class ImageView extends XYGlyphView {\n  model: Image\n  visuals: Image.Visuals\n\n  protected _width: Arrayable<number>\n  protected _height: Arrayable<number>\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.connect(this.model.color_mapper.change, () => this._update_image())\n    this.connect(this.model.properties.global_alpha.change, () => this.renderer.request_render())\n  }\n\n  protected _update_image(): void {\n    // Only reset image_data if already initialized\n    if (this.image_data != null) {\n      this._set_data()\n      this.renderer.plot_view.request_render()\n    }\n  }\n\n  _index_data(): SpatialIndex {\n    const points = []\n    for (let i = 0, end = this._x.length; i < end; i++) {\n      const [l, r, t, b] = this._lrtb(i)\n      if (isNaN(l + r + t + b) || !isFinite(l + r + t + b)) {\n        continue\n      }\n      points.push({minX: l, minY: b, maxX: r, maxY: t, i})\n    }\n    return new SpatialIndex(points)\n  }\n\n  _lrtb(i: number) : [number, number, number, number]{\n    const l = this._x[i]\n    const r = l + this._dw[i]\n    const b = this._y[i]\n    const t = b + this._dh[i]\n    return [l, r, t, b]\n  }\n\n  _image_index(index : number, x: number, y : number) : ImageIndex {\n    const [l,r,t,b] = this._lrtb(index)\n    const width = this._width[index]\n    const height = this._height[index]\n    const dx = (r - l) / width\n    const dy = (t - b) / height\n    const dim1 = Math.floor((x - l) / dx)\n    const dim2 = Math.floor((y - b) / dy)\n    return {index, dim1, dim2, flat_index: dim2*width + dim1}\n  }\n\n  _hit_point(geometry: PointGeometry) : Selection {\n    const {sx, sy} = geometry\n    const x = this.renderer.xscale.invert(sx)\n    const y = this.renderer.yscale.invert(sy)\n    const bbox = hittest.validate_bbox_coords([x, x], [y, y])\n    const candidates = this.index.indices(bbox)\n    const result = hittest.create_empty_hit_test_result()\n\n    result.image_indices = []\n    for (const index of candidates) {\n      if ((sx != Infinity) && (sy != Infinity)) {\n        result.image_indices.push(this._image_index(index, x,y))\n      }\n    }\n    return result\n  }\n\n\n  protected _set_data(): void {\n    if (this.image_data == null || this.image_data.length != this._image.length)\n      this.image_data = new Array(this._image.length)\n\n    if (this._width == null || this._width.length != this._image.length)\n      this._width = new Array(this._image.length)\n\n    if (this._height == null || this._height.length != this._image.length)\n      this._height = new Array(this._image.length)\n\n    const cmap = this.model.color_mapper.rgba_mapper\n\n    for (let i = 0, end = this._image.length; i < end; i++) {\n      let img: Arrayable<number>\n      if (this._image_shape != null && this._image_shape[i].length > 0) {\n        img = this._image[i] as Arrayable<number>\n        const shape = this._image_shape[i]\n        this._height[i] = shape[0]\n        this._width[i] = shape[1]\n      } else {\n        const _image = this._image[i] as number[][]\n        img = concat(_image)\n        this._height[i] = _image.length\n        this._width[i] = _image[0].length\n      }\n\n      const _image_data = this.image_data[i]\n      let canvas: HTMLCanvasElement\n      if (_image_data != null && _image_data.width == this._width[i] &&\n                                 _image_data.height == this._height[i])\n        canvas = _image_data\n      else {\n        canvas = document.createElement('canvas')\n        canvas.width = this._width[i]\n        canvas.height = this._height[i]\n      }\n\n      const ctx = canvas.getContext('2d')!\n      const image_data = ctx.getImageData(0, 0, this._width[i], this._height[i])\n      const buf8 = cmap.v_compute(img)\n      image_data.data.set(buf8)\n      ctx.putImageData(image_data, 0, 0)\n      this.image_data[i] = canvas\n\n      this.max_dw = 0\n      if (this.model.properties.dw.units == \"data\")\n        this.max_dw = max(this._dw)\n\n      this.max_dh = 0\n      if (this.model.properties.dh.units == \"data\")\n        this.max_dh = max(this._dh)\n    }\n  }\n\n  protected _map_data(): void {\n    switch (this.model.properties.dw.units) {\n      case \"data\": {\n        this.sw = this.sdist(this.renderer.xscale, this._x, this._dw, 'edge', this.model.dilate)\n        break\n      }\n      case \"screen\": {\n        this.sw = this._dw\n        break\n      }\n    }\n\n    switch (this.model.properties.dh.units) {\n      case \"data\": {\n        this.sh = this.sdist(this.renderer.yscale, this._y, this._dh, 'edge', this.model.dilate)\n        break\n      }\n      case \"screen\": {\n        this.sh = this._dh\n        break\n      }\n    }\n  }\n\n  protected _render(ctx: Context2d, indices: number[], {image_data, sx, sy, sw, sh}: _ImageData): void {\n    const old_smoothing = ctx.getImageSmoothingEnabled()\n    ctx.setImageSmoothingEnabled(false)\n\n    ctx.globalAlpha = this.model.global_alpha\n\n    for (const i of indices) {\n      if (image_data[i] == null)\n        continue\n\n      if (isNaN(sx[i] + sy[i] + sw[i] + sh[i]))\n        continue\n\n      const y_offset = sy[i]\n\n      ctx.translate(0, y_offset)\n      ctx.scale(1, -1)\n      ctx.translate(0, -y_offset)\n      ctx.drawImage(image_data[i], sx[i]|0, sy[i]|0, sw[i], sh[i])\n      ctx.translate(0, y_offset)\n      ctx.scale(1, -1)\n      ctx.translate(0, -y_offset)\n    }\n\n    ctx.setImageSmoothingEnabled(old_smoothing)\n  }\n\n  bounds(): Rect {\n    const {bbox} = this.index\n    bbox.maxX += this.max_dw\n    bbox.maxY += this.max_dh\n    return bbox\n  }\n}\n\n// NOTE: this needs to be redefined here, because palettes are located in bokeh-api.js bundle\nconst Greys9 = () => [\"#000000\", \"#252525\", \"#525252\", \"#737373\", \"#969696\", \"#bdbdbd\", \"#d9d9d9\", \"#f0f0f0\", \"#ffffff\"]\n\nexport namespace Image {\n  export interface Attrs extends XYGlyph.Attrs {\n    image: NumberSpec\n    dw: DistanceSpec\n    dh: DistanceSpec\n    global_alpha: number\n    dilate: boolean\n    color_mapper: ColorMapper\n  }\n\n  export interface Props extends XYGlyph.Props {\n    image: p.NumberSpec\n    dw: p.DistanceSpec\n    dh: p.DistanceSpec\n    global_alpha: p.Property<number>\n    dilate: p.Property<boolean>\n    color_mapper: p.Property<ColorMapper>\n  }\n\n  export interface Visuals extends XYGlyph.Visuals {}\n}\n\nexport interface Image extends Image.Attrs {}\n\nexport class Image extends XYGlyph {\n\n  properties: Image.Props\n\n  constructor(attrs?: Partial<Image.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Image'\n    this.prototype.default_view = ImageView\n\n    this.define({\n      image:        [ p.NumberSpec       ], // TODO (bev) array spec?\n      dw:           [ p.DistanceSpec     ],\n      dh:           [ p.DistanceSpec     ],\n      dilate:       [ p.Bool,      false ],\n      global_alpha: [ p.Number,    1.0   ],\n      color_mapper: [ p.Instance,  () => new LinearColorMapper({palette: Greys9()}) ],\n    })\n  }\n}\nImage.initClass()\n"]}