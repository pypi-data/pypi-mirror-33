{"version":3,"sources":["core/layout/alignments.ts"],"names":[],"mappings":";;AACA,mCAAuC;AACvC,uCAAkD;AAElD,gBAAuB,SAAiB,EAAE,QAAkB;IAC1D,IAAM,WAAW,GAAG,EAAE,CAAA;IAEtB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACvB,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,YAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QACrE,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,YAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAElE,WAAW,CAAC,IAAI,OAAhB,WAAW,EAAS,gBAAQ,CAAC,QAAQ,EAAE,UAAC,IAAI,EAAE,IAAI,IAAK,OAAA,WAAE,CAAC,IAAI,CAAC,IAAI,EAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAlC,CAAkC,CAAC,EAAC;QAE3F,KAAoB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;YAAvB,IAAM,KAAK,iBAAA;YACd,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,KAAK,CAAC,KAAK,EAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YACzD,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SAC3D;KACF;IAED,OAAO,WAAW,CAAA;AACpB,CAAC;AAhBD,wBAgBC;AAED,gBAAuB,SAAiB,EAAE,QAAkB;IAC1D,IAAM,WAAW,GAAG,EAAE,CAAA;IAEtB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACvB,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,YAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACpE,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,YAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAI,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAEnE,WAAW,CAAC,IAAI,OAAhB,WAAW,EAAS,gBAAQ,CAAC,QAAQ,EAAE,UAAC,IAAI,EAAE,IAAI,IAAK,OAAA,WAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAjC,CAAiC,CAAC,EAAC;QAE1F,KAAoB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;YAAvB,IAAM,KAAK,iBAAA;YACd,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,KAAK,CAAC,IAAI,EAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACzD,WAAW,CAAC,IAAI,CAAC,WAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;SAC7D;KACF;IAED,OAAO,WAAW,CAAA;AACpB,CAAC;AAhBD,wBAgBC","file":"alignments.js","sourcesContent":["import {LayoutCanvas as Layout} from \"./layout_canvas\"\nimport {EQ, Constraint} from \"./solver\"\nimport {head, tail, pairwise} from \"../util/array\"\n\nexport function vstack(container: Layout, children: Layout[]): Constraint[] {\n  const constraints = []\n\n  if (children.length > 0) {\n    constraints.push(EQ(head(children)._bottom, [-1, container._bottom]))\n    constraints.push(EQ(tail(children)._top,    [-1, container._top]))\n\n    constraints.push(...pairwise(children, (prev, next) => EQ(prev._top,  [-1, next._bottom])))\n\n    for (const child of children) {\n      constraints.push(EQ(child._left,  [-1, container._left]))\n      constraints.push(EQ(child._right, [-1, container._right]))\n    }\n  }\n\n  return constraints\n}\n\nexport function hstack(container: Layout, children: Layout[]): Constraint[] {\n  const constraints = []\n\n  if (children.length > 0) {\n    constraints.push(EQ(head(children)._right,  [-1, container._right]))\n    constraints.push(EQ(tail(children)._left,   [-1, container._left]))\n\n    constraints.push(...pairwise(children, (prev, next) => EQ(prev._left, [-1, next._right])))\n\n    for (const child of children) {\n      constraints.push(EQ(child._top,    [-1, container._top]))\n      constraints.push(EQ(child._bottom, [-1, container._bottom]))\n    }\n  }\n\n  return constraints\n}\n"]}