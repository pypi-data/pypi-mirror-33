{"version":3,"sources":["api/gridplot.ts"],"names":[],"mappings":"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","file":"gridplot.js","sourcesContent":["import {LayoutDOM, Row, Column, Spacer, ToolbarBox, ProxyToolbar, Plot, Tool} from \"./models\"\nimport {SizingMode, Location} from \"../core/enums\"\n\nexport interface GridPlotOpts {\n  toolbar_location?: Location | null\n  sizing_mode?: SizingMode\n  merge_tools?: boolean\n}\n\nfunction or_else<T>(value: T | undefined, default_value: T): T {\n  if (value === undefined)\n    return default_value\n  else\n    return value\n}\n\nfunction nope(): never {\n  throw new Error(\"this shouldn't have happened\")\n}\n\nexport function gridplot(children: (LayoutDOM | null)[][], opts: GridPlotOpts = {}): LayoutDOM {\n  const toolbar_location = or_else(opts.toolbar_location, \"above\")\n  const sizing_mode      = or_else(opts.sizing_mode, \"fixed\")\n  const merge_tools      = or_else(opts.merge_tools, true)\n\n  const tools: Tool[] = []\n  const rows: Row[] = []\n\n  for (const row of children) {\n    const row_tools: Tool[] = []\n    const row_children: LayoutDOM[] = []\n\n    for (let item of row) {\n      if (item == null) {\n        let width = 0\n        let height = 0\n        for (const neighbor of row) {\n          if (neighbor instanceof Plot) {\n            width = neighbor.plot_width\n            height = neighbor.plot_height\n            break\n          }\n        }\n        item = new Spacer({width: width, height: height})\n      } else if (item instanceof Plot) {\n        row_tools.push(...item.toolbar.tools)\n        item.toolbar_location = null\n      }\n\n      item.sizing_mode = sizing_mode\n      row_children.push(item)\n    }\n\n    tools.push(...row_tools)\n    rows.push(new Row({children: row_children, sizing_mode: sizing_mode}))\n  }\n\n  const grid = new Column({children: rows, sizing_mode: sizing_mode})\n\n  if (!merge_tools || toolbar_location == null)\n    return grid\n\n  let toolbar_sizing_mode: SizingMode\n  if (sizing_mode == \"fixed\") {\n    if (toolbar_location == \"above\" || toolbar_location == \"below\")\n      toolbar_sizing_mode = \"scale_width\"\n    else\n      toolbar_sizing_mode = \"scale_height\"\n  } else\n    toolbar_sizing_mode = sizing_mode\n\n  const toolbar = new ToolbarBox({\n    toolbar: new ProxyToolbar({tools: tools}),\n    toolbar_location: toolbar_location,\n    sizing_mode: toolbar_sizing_mode,\n  })\n\n  switch (toolbar_location) {\n    case \"above\":\n      return new Column({children: [toolbar, grid], sizing_mode: sizing_mode})\n    case \"below\":\n      return new Column({children: [grid, toolbar], sizing_mode: sizing_mode})\n    case \"left\":\n      return new Row({children: [toolbar, grid], sizing_mode: sizing_mode})\n    case \"right\":\n      return new Row({children: [grid, toolbar], sizing_mode: sizing_mode})\n    default:\n      return nope()\n  }\n}\n"]}