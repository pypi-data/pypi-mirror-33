{"version":3,"sources":["models/tickers/fixed_ticker.ts"],"names":[],"mappings":";;;AACA,yDAAoD;AACpD,mCAAoC;AAYpC;IAAiC,uCAAgB;IAI/C,qBAAY,KAAkC;QAA9C,YACE,kBAAM,KAAK,CAAC,SACb;QAsBD,kBAAY,GAAW,CAAC,CAAA;QACxB,kBAAY,GAAW,CAAC,CAAA;;IAvBxB,CAAC;IAEM,qBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,aAAa,CAAA;QAEnC,IAAI,CAAC,MAAM,CAAC;YACV,KAAK,EAAE,CAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAE;SACvB,CAAC,CAAA;IACJ,CAAC;IAED,2CAAqB,GAArB,UAAsB,SAAiB,EAAE,UAAkB,EAAE,UAAe,EAAE,gBAAwB;QACpG,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,EAAE;SACV,CAAA;IACH,CAAC;IAED,6EAA6E;IAC7E,kCAAY,GAAZ,UAAa,SAAiB,EAAE,UAAkB,EAAE,gBAAwB;QAC1E,OAAO,CAAC,CAAA;IACV,CAAC;IAKH,kBAAC;AAAD,CA/BA,AA+BC,CA/BgC,oCAAgB,GA+BhD;AA/BY,kCAAW;AAiCxB,WAAW,CAAC,SAAS,EAAE,CAAA","file":"fixed_ticker.js","sourcesContent":["import {TickSpec} from \"./ticker\"\nimport {ContinuousTicker} from \"./continuous_ticker\"\nimport * as p from \"core/properties\"\n\nexport namespace FixedTicker {\n  export interface Attrs extends ContinuousTicker.Attrs {\n    ticks: number[]\n  }\n\n  export interface Props extends ContinuousTicker.Props {}\n}\n\nexport interface FixedTicker extends FixedTicker.Attrs {}\n\nexport class FixedTicker extends ContinuousTicker {\n\n  properties: FixedTicker.Props\n\n  constructor(attrs?: Partial<FixedTicker.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"FixedTicker\"\n\n    this.define({\n      ticks: [ p.Array, [] ],\n    })\n  }\n\n  get_ticks_no_defaults(_data_low: number, _data_high: number, _cross_loc: any, _desired_n_ticks: number): TickSpec<number> {\n    return {\n      major: this.ticks,\n      minor: [],\n    }\n  }\n\n  // XXX: whatever, because FixedTicker needs to fullfill the interface somehow\n  get_interval(_data_low: number, _data_high: number, _desired_n_ticks: number): number {\n    return 0\n  }\n\n  min_interval: number = 0\n  max_interval: number = 0\n  //\n}\n\nFixedTicker.initClass()\n"]}