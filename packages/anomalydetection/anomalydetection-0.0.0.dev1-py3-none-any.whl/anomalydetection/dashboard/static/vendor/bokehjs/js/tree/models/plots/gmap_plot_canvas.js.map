{"version":3,"sources":["models/plots/gmap_plot_canvas.ts"],"names":[],"mappings":"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","file":"gmap_plot_canvas.js","sourcesContent":["import {Signal0} from \"core/signaling\"\nimport {wgs84_mercator} from \"core/util/projections\"\nimport {Context2d} from \"core/util/canvas\"\nimport {GMapPlot} from \"./gmap_plot\"\nimport {PlotCanvas, PlotCanvasView, RangeInfo, FrameBox} from \"./plot_canvas\"\n\ndeclare let _bokeh_gmaps_callback: () => void\n\nconst gmaps_ready = new Signal0({}, \"gmaps_ready\")\n\nconst load_google_api = function(api_key: string): void {\n  _bokeh_gmaps_callback = () => gmaps_ready.emit()\n\n  const script = document.createElement('script')\n  script.type = 'text/javascript'\n  script.src = `https://maps.googleapis.com/maps/api/js?key=${api_key}&callback=_bokeh_gmaps_callback`\n  document.body.appendChild(script)\n}\n\nexport class GMapPlotCanvasView extends PlotCanvasView {\n  model: GMapPlotCanvas\n\n  protected _tiles_loaded: boolean\n\n  protected zoom_count: number\n\n  protected initial_zoom: number\n  protected initial_lat: number\n  protected initial_lng: number\n\n  protected map: google.maps.Map\n  protected map_types: any\n\n  initialize(options: any): void {\n    this.pause()\n\n    super.initialize(options)\n\n    this._tiles_loaded = false\n    this.zoom_count = 0\n\n    const {zoom, lat, lng} = this.model.plot.map_options\n    this.initial_zoom = zoom\n    this.initial_lat = lat\n    this.initial_lng = lng\n\n    this.canvas_view.map_el!.style.position = \"absolute\"\n\n    if (typeof google === \"undefined\" || google.maps == null) {\n      if (typeof _bokeh_gmaps_callback === \"undefined\") {\n        load_google_api(this.model.plot.api_key)\n      }\n      gmaps_ready.connect(() => this.request_render())\n    }\n\n    this.unpause()\n  }\n\n  update_range(range_info: RangeInfo & {sdx?: number, sdy?: number, factor?: number} | null): void {\n    // RESET -------------------------\n    if (range_info == null) {\n      this.map.setCenter({lat: this.initial_lat, lng: this.initial_lng})\n      this.map.setOptions({zoom: this.initial_zoom})\n      super.update_range(null)\n\n    // PAN ----------------------------\n    } else if (range_info.sdx != null || range_info.sdy != null) {\n      this.map.panBy(range_info.sdx || 0, range_info.sdy || 0)\n      super.update_range(range_info)\n\n    // ZOOM ---------------------------\n    } else if (range_info.factor != null) {\n\n      // The zoom count decreases the sensitivity of the zoom. (We could make this user configurable)\n      let zoom_change\n      if (this.zoom_count !== 10) {\n        this.zoom_count += 1\n        return\n      }\n      this.zoom_count = 0\n\n      this.pause()\n\n      super.update_range(range_info)\n\n      if (range_info.factor < 0)\n        zoom_change = -1\n      else\n        zoom_change = 1\n\n      const old_map_zoom = this.map.getZoom()\n      const new_map_zoom = old_map_zoom + zoom_change\n\n      // Zooming out too far causes problems\n      if (new_map_zoom >= 2) {\n        this.map.setZoom(new_map_zoom)\n\n        // Check we haven't gone out of bounds, and if we have undo the zoom\n        const [proj_xstart, proj_xend,,] = this._get_projected_bounds()\n        if (proj_xend - proj_xstart < 0) {\n          this.map.setZoom(old_map_zoom)\n        }\n      }\n\n      this.unpause()\n    }\n\n    // Finally re-center\n    this._set_bokeh_ranges()\n  }\n\n  protected _build_map(): void {\n    const {maps} = google\n\n    this.map_types = {\n      satellite : maps.MapTypeId.SATELLITE,\n      terrain   : maps.MapTypeId.TERRAIN,\n      roadmap   : maps.MapTypeId.ROADMAP,\n      hybrid    : maps.MapTypeId.HYBRID,\n    }\n\n    const mo = this.model.plot.map_options\n    const map_options: google.maps.MapOptions = {\n      center: new maps.LatLng(mo.lat, mo.lng),\n      zoom: mo.zoom,\n      disableDefaultUI: true,\n      mapTypeId: this.map_types[mo.map_type],\n      scaleControl: mo.scale_control,\n    }\n\n    if (mo.styles != null)\n      map_options.styles = JSON.parse(mo.styles)\n\n    // create the map with above options in div\n    this.map = new maps.Map(this.canvas_view.map_el, map_options)\n\n    // update bokeh ranges whenever the map idles, which should be after most UI action\n    maps.event.addListener(this.map, 'idle', () => this._set_bokeh_ranges())\n\n    // also need an event when bounds change so that map resizes trigger renders too\n    maps.event.addListener(this.map, 'bounds_changed', () => this._set_bokeh_ranges())\n\n    maps.event.addListenerOnce(this.map, 'tilesloaded', () => this._render_finished())\n\n    // wire up listeners so that changes to properties are reflected\n    this.connect(this.model.plot.properties.map_options.change, () => this._update_options())\n    this.connect(this.model.plot.map_options.properties.styles.change, () => this._update_styles())\n    this.connect(this.model.plot.map_options.properties.lat.change, () => this._update_center('lat'))\n    this.connect(this.model.plot.map_options.properties.lng.change, () => this._update_center('lng'))\n    this.connect(this.model.plot.map_options.properties.zoom.change, () => this._update_zoom())\n    this.connect(this.model.plot.map_options.properties.map_type.change, () => this._update_map_type())\n    this.connect(this.model.plot.map_options.properties.scale_control.change, () => this._update_scale_control())\n  }\n\n  protected _render_finished(): void {\n    this._tiles_loaded = true\n    this.notify_finished()\n  }\n\n  has_finished(): boolean {\n    return super.has_finished() && this._tiles_loaded === true\n  }\n\n  protected _get_latlon_bounds(): [number, number, number, number] {\n    const bounds = this.map.getBounds()!\n    const top_right = bounds.getNorthEast()\n    const bottom_left = bounds.getSouthWest()\n\n    const xstart = bottom_left.lng()\n    const xend = top_right.lng()\n    const ystart = bottom_left.lat()\n    const yend = top_right.lat()\n    return [xstart, xend, ystart, yend]\n  }\n\n  protected _get_projected_bounds(): [number, number, number, number] {\n    const [xstart, xend, ystart, yend] = this._get_latlon_bounds()\n    const [proj_xstart, proj_ystart] = wgs84_mercator.forward([xstart, ystart])\n    const [proj_xend, proj_yend] = wgs84_mercator.forward([xend, yend])\n    return [proj_xstart, proj_xend, proj_ystart, proj_yend]\n  }\n\n  protected _set_bokeh_ranges(): void {\n    const [proj_xstart, proj_xend, proj_ystart, proj_yend] = this._get_projected_bounds()\n    this.frame.x_range.setv({start: proj_xstart, end: proj_xend})\n    this.frame.y_range.setv({start: proj_ystart, end: proj_yend})\n  }\n\n  protected _update_center(fld: \"lat\" | \"lng\"): void {\n    const c = this.map.getCenter().toJSON()\n    c[fld] = this.model.plot.map_options[fld]\n    this.map.setCenter(c)\n    this._set_bokeh_ranges()\n  }\n\n  protected _update_map_type(): void {\n    this.map.setOptions({mapTypeId: this.map_types[this.model.plot.map_options.map_type] })\n  }\n\n  protected _update_scale_control(): void {\n    this.map.setOptions({scaleControl: this.model.plot.map_options.scale_control })\n  }\n\n  protected _update_options(): void {\n    this._update_styles()\n    this._update_center('lat')\n    this._update_center('lng')\n    this._update_zoom()\n    this._update_map_type()\n  }\n\n  protected _update_styles(): void {\n    this.map.setOptions({styles: JSON.parse(this.model.plot.map_options.styles) })\n  }\n\n  protected _update_zoom(): void {\n    this.map.setOptions({zoom: this.model.plot.map_options.zoom})\n    this._set_bokeh_ranges()\n  }\n\n  // this method is expected and called by PlotCanvasView.render\n  protected _map_hook(_ctx: Context2d, frame_box: FrameBox): void {\n    const [left, top, width, height] = frame_box\n    this.canvas_view.map_el!.style.top    = `${top}px`\n    this.canvas_view.map_el!.style.left   = `${left}px`\n    this.canvas_view.map_el!.style.width  = `${width}px`\n    this.canvas_view.map_el!.style.height = `${height}px`\n\n    if (this.map == null && typeof google !== \"undefined\" && google.maps != null)\n      this._build_map()\n  }\n\n  // this overrides the standard _paint_empty to make the inner canvas transparent\n  protected _paint_empty(ctx: Context2d, frame_box: FrameBox): void {\n    const ow = this.canvas._width.value\n    const oh = this.canvas._height.value\n    const [left, top, iw, ih] = frame_box\n\n    ctx.clearRect(0, 0, ow, oh)\n\n    ctx.beginPath()\n    ctx.moveTo(0,  0)\n    ctx.lineTo(0,  oh)\n    ctx.lineTo(ow, oh)\n    ctx.lineTo(ow, 0)\n    ctx.lineTo(0,  0)\n\n    ctx.moveTo(left,    top)\n    ctx.lineTo(left+iw, top)\n    ctx.lineTo(left+iw, top+ih)\n    ctx.lineTo(left,    top+ih)\n    ctx.lineTo(left,    top)\n    ctx.closePath()\n\n    ctx.fillStyle = this.model.plot.border_fill_color\n    ctx.fill()\n  }\n}\n\nexport namespace GMapPlotCanvas {\n  export interface Attrs extends PlotCanvas.Attrs {}\n\n  export interface Props extends PlotCanvas.Props {}\n}\n\nexport interface GMapPlotCanvas extends GMapPlotCanvas.Attrs {}\n\nexport class GMapPlotCanvas extends PlotCanvas {\n\n  properties: GMapPlotCanvas.Props\n\n  plot: GMapPlot\n\n  constructor(attrs?: Partial<GMapPlotCanvas.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'GMapPlotCanvas'\n    this.prototype.default_view = GMapPlotCanvasView\n  }\n\n  initialize(): void {\n    this.use_map = true\n    super.initialize()\n  }\n}\nGMapPlotCanvas.initClass()\n"]}