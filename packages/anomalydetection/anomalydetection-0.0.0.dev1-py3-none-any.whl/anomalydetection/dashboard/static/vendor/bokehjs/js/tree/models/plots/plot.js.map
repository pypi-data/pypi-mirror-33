{"version":3,"sources":["models/plots/plot.ts"],"names":[],"mappings":"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","file":"plot.js","sourcesContent":["import {EQ, Constraint, Variable} from \"core/layout/solver\"\nimport {logger} from \"core/logging\"\nimport * as visuals from \"core/visuals\"\nimport * as p from \"core/properties\"\nimport {Signal0} from \"core/signaling\"\nimport {Color} from \"core/types\"\nimport {LineJoin, LineCap} from \"core/enums\"\nimport {Place, Location, OutputBackend} from \"core/enums\"\nimport {find, removeBy, includes} from \"core/util/array\"\nimport {extend, values} from \"core/util/object\"\nimport {isString, isArray} from \"core/util/types\"\n\nimport {LayoutDOM, LayoutDOMView} from \"../layouts/layout_dom\"\nimport {Title} from \"../annotations/title\"\nimport {LinearScale} from \"../scales/linear_scale\"\nimport {Toolbar} from \"../tools/toolbar\"\nimport {ToolbarPanel} from \"../annotations/toolbar_panel\"\nimport {PlotCanvas, PlotCanvasView} from \"./plot_canvas\"\n\nimport {Range} from \"../ranges/range\"\nimport {Scale} from \"../scales/scale\"\nimport {Glyph} from \"../glyphs/glyph\"\nimport {DataSource} from \"../sources/data_source\"\nimport {ColumnDataSource} from \"../sources/column_data_source\"\nimport {Renderer} from \"../renderers/renderer\"\nimport {GlyphRenderer} from \"../renderers/glyph_renderer\"\nimport {Tool} from \"../tools/tool\"\nimport {register_with_event, UIEvent} from 'core/bokeh_events'\n\nexport class PlotView extends LayoutDOMView {\n  model: Plot\n\n  connect_signals(): void {\n    super.connect_signals()\n    // Note: Title object cannot be replaced after initialization, similar to axes, and also\n    // not being able to change the sizing_mode. All of these changes require a re-initialization\n    // of all constraints which we don't currently support.\n    const title_msg = \"Title object cannot be replaced. Try changing properties on title to update it after initialization.\"\n    this.connect(this.model.properties.title.change, () => logger.warn(title_msg))\n  }\n\n  css_classes(): string[] {\n    return super.css_classes().concat(\"bk-plot-layout\")\n  }\n\n  get_height(): number {\n    return this.model._width.value / this.model.get_aspect_ratio()\n  }\n\n  get_width(): number {\n    return this.model._height.value * this.model.get_aspect_ratio()\n  }\n\n  save(name: string): void {\n    this.plot_canvas_view.save(name)\n  }\n\n  get plot_canvas_view(): PlotCanvasView {\n    // XXX: PlotCanvasView is not LayoutDOMView\n    return (this.child_views[this.model.plot_canvas.id] as any) as PlotCanvasView\n  }\n}\n\nexport namespace Plot {\n  // line:outline_\n  export interface OutlineLine {\n    outline_line_color: Color\n    outline_line_width: number\n    outline_line_alpha: number\n    outline_line_join: LineJoin\n    outline_line_cap: LineCap\n    outline_line_dash: number[]\n    outline_line_dash_offset: number\n  }\n\n  // fill:background_\n  export interface BackgroundFill {\n    background_fill_color: Color\n    background_fill_alpha: number\n  }\n\n  // fill:border_\n  export interface BorderFill {\n    border_fill_color: Color\n    border_fill_alpha: number\n  }\n\n  export interface Mixins extends OutlineLine, BackgroundFill, BorderFill {}\n\n  export interface Attrs extends LayoutDOM.Attrs, Mixins {\n    toolbar: Toolbar\n    toolbar_location: Location | null\n    toolbar_sticky: boolean\n\n    plot_width: number\n    plot_height: number\n\n    title: Title | string | null\n    title_location: Location\n\n    h_symmetry: boolean\n    v_symmetry: boolean\n\n    above: Renderer[]\n    below: Renderer[]\n    left: Renderer[]\n    right: Renderer[]\n\n    renderers: Renderer[]\n\n    x_range: Range\n    extra_x_ranges: {[key: string]: Range}\n    y_range: Range\n    extra_y_ranges: {[key: string]: Range}\n\n    x_scale: Scale\n    y_scale: Scale\n\n    lod_factor: number\n    lod_interval: number\n    lod_threshold: number\n    lod_timeout: number\n\n    hidpi: boolean\n    output_backend: OutputBackend\n\n    min_border: number | null\n    min_border_top: number | null\n    min_border_left: number | null\n    min_border_bottom: number | null\n    min_border_right: number | null\n\n    inner_width: number\n    inner_height: number\n    layout_width: number\n    layout_height: number\n\n    match_aspect: boolean\n    aspect_scale: number\n  }\n\n  export interface Props extends LayoutDOM.Props {\n    toolbar_location: p.Property<Location | null>\n    title: p.Property<Title | string | null>\n    above: p.Property<Renderer[]>\n    below: p.Property<Renderer[]>\n    left: p.Property<Renderer[]>\n    right: p.Property<Renderer[]>\n    renderers: p.Property<Renderer[]>\n    outline_line_width: p.Property<number>\n  }\n\n  export type Visuals = visuals.Visuals & {\n    outline_line: visuals.Line\n    background_fill: visuals.Fill\n    border_fill: visuals.Fill\n  }\n}\n\nexport interface Plot extends Plot.Attrs {}\n\nexport class Plot extends LayoutDOM {\n  reset: Signal0<this>\n  properties: Plot.Props\n\n  constructor(attrs?: Partial<Plot.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"Plot\"\n    this.prototype.default_view = PlotView\n\n    this.mixins([\"line:outline_\", \"fill:background_\", \"fill:border_\"])\n\n    this.define({\n      toolbar:           [ p.Instance, () => new Toolbar()     ],\n      toolbar_location:  [ p.Location, 'right'                 ],\n      toolbar_sticky:    [ p.Boolean,  true                    ],\n\n      plot_width:        [ p.Number,   600                     ],\n      plot_height:       [ p.Number,   600                     ],\n\n      title:             [ p.Any, () => new Title({text: \"\"})  ], // TODO: p.Either(p.Instance(Title), p.String)\n      title_location:    [ p.Location, 'above'                 ],\n\n      h_symmetry:        [ p.Bool,     true                    ],\n      v_symmetry:        [ p.Bool,     false                   ],\n\n      above:             [ p.Array,    []                      ],\n      below:             [ p.Array,    []                      ],\n      left:              [ p.Array,    []                      ],\n      right:             [ p.Array,    []                      ],\n\n      renderers:         [ p.Array,    []                      ],\n\n      x_range:           [ p.Instance                          ],\n      extra_x_ranges:    [ p.Any,      {}                      ], // TODO (bev)\n      y_range:           [ p.Instance                          ],\n      extra_y_ranges:    [ p.Any,      {}                      ], // TODO (bev)\n\n      x_scale:           [ p.Instance, () => new LinearScale() ],\n      y_scale:           [ p.Instance, () => new LinearScale() ],\n\n      lod_factor:        [ p.Number,   10                      ],\n      lod_interval:      [ p.Number,   300                     ],\n      lod_threshold:     [ p.Number,   2000                    ],\n      lod_timeout:       [ p.Number,   500                     ],\n\n      hidpi:             [ p.Bool,     true                    ],\n      output_backend:    [ p.OutputBackend, \"canvas\"           ],\n\n      min_border:        [ p.Number,   5                       ],\n      min_border_top:    [ p.Number,   null                    ],\n      min_border_left:   [ p.Number,   null                    ],\n      min_border_bottom: [ p.Number,   null                    ],\n      min_border_right:  [ p.Number,   null                    ],\n\n      inner_width:       [ p.Number                            ],\n      inner_height:      [ p.Number                            ],\n      layout_width:      [ p.Number                            ],\n      layout_height:     [ p.Number                            ],\n\n      match_aspect:      [ p.Bool,     false                   ],\n      aspect_scale:      [ p.Number,   1                       ],\n    })\n\n    this.override({\n      outline_line_color: \"#e5e5e5\",\n      border_fill_color: \"#ffffff\",\n      background_fill_color: \"#ffffff\",\n    })\n\n    register_with_event(UIEvent, this)\n  }\n\n  protected _plot_canvas: PlotCanvas\n\n  initialize(): void {\n    super.initialize()\n\n    this.reset = new Signal0(this, \"reset\")\n\n    for (const xr of values(this.extra_x_ranges).concat(this.x_range)) {\n      let plots = xr.plots\n      if (isArray(plots)) {\n        plots = plots.concat(this)\n        xr.setv({plots: plots}, {silent: true})\n      }\n    }\n\n    for (const yr of values(this.extra_y_ranges).concat(this.y_range)) {\n      let plots = yr.plots\n      if (isArray(plots)) {\n        plots = plots.concat(this)\n        yr.setv({plots: plots}, {silent: true})\n      }\n    }\n    // Min border applies to the edge of everything\n    if (this.min_border != null) {\n      if (this.min_border_top == null)\n        this.min_border_top = this.min_border\n      if (this.min_border_bottom == null)\n        this.min_border_bottom = this.min_border\n      if (this.min_border_left == null)\n        this.min_border_left = this.min_border\n      if (this.min_border_right == null)\n        this.min_border_right = this.min_border\n    }\n\n    // Setup side renderers\n    for (const side of ['above', 'below', 'left', 'right']) {\n      const layout_renderers = this.getv(side)\n      for (const renderer of layout_renderers)\n        renderer.add_panel(side)\n    }\n\n    this._init_title_panel()\n    this._init_toolbar_panel()\n\n    this._plot_canvas = this._init_plot_canvas()\n    this.plot_canvas.toolbar = this.toolbar\n\n    // Set width & height to be the passed in plot_width and plot_height\n    // We may need to be more subtle about this - not sure why people use one\n    // or the other.\n    if (this.width == null)\n      this.width = this.plot_width\n    if (this.height == null)\n      this.height = this.plot_height\n  }\n\n  protected _init_plot_canvas(): PlotCanvas {\n    return new PlotCanvas({plot: this})\n  }\n\n  protected _init_title_panel(): void {\n    if (this.title != null) {\n      const title = isString(this.title) ? new Title({text: this.title}) : this.title\n      this.add_layout(title, this.title_location)\n    }\n  }\n\n  protected _init_toolbar_panel(): void {\n    let tpanel = find(this.renderers, (model): model is ToolbarPanel => {\n      return model instanceof ToolbarPanel && includes(model.tags, this.id)\n    })\n\n    if (tpanel != null)\n      this.remove_layout(tpanel)\n\n    switch (this.toolbar_location) {\n      case \"left\":\n      case \"right\":\n      case \"above\":\n      case \"below\": {\n        tpanel = new ToolbarPanel({toolbar: this.toolbar, tags: [this.id]})\n        this.toolbar.toolbar_location = this.toolbar_location\n\n        if (this.toolbar_sticky) {\n          const models = this.getv(this.toolbar_location)\n          const title = find(models, (model): model is Title => model instanceof Title)\n\n          if (title != null) {\n            (tpanel as ToolbarPanel).set_panel((title as Title).panel!) // XXX, XXX: because find() doesn't provide narrowed types\n            this.add_renderers(tpanel)\n            return\n          }\n        }\n\n        this.add_layout(tpanel, this.toolbar_location)\n        break\n      }\n    }\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.properties.toolbar_location.change, () => this._init_toolbar_panel())\n  }\n\n  get plot_canvas(): PlotCanvas {\n    return this._plot_canvas\n  }\n\n  protected _doc_attached(): void {\n    this.plot_canvas.attach_document(this.document!) // XXX!\n    super._doc_attached()\n  }\n\n  add_renderers(...new_renderers: Renderer[]): void {\n    let renderers = this.renderers\n    renderers = renderers.concat(new_renderers)\n    this.renderers = renderers\n  }\n\n  add_layout(renderer: any /* XXX: Renderer */, side: Place = \"center\"): void {\n    if (renderer.props.plot != null)\n      (renderer as any).plot = this // XXX\n    if (side != \"center\") {\n      const side_renderers = this.getv(side)\n      side_renderers.push(renderer)\n      renderer.add_panel(side) // XXX\n    }\n    this.add_renderers(renderer)\n  }\n\n  remove_layout(renderer: Renderer): void {\n\n    const del = (items: Renderer[]): void => {\n      removeBy(items, (item) => item == renderer)\n    }\n\n    del(this.left)\n    del(this.right)\n    del(this.above)\n    del(this.below)\n    del(this.renderers)\n  }\n\n  add_glyph(glyph: Glyph, source: DataSource = new ColumnDataSource(), extra_attrs: any = {}): GlyphRenderer {\n    const attrs = extend({}, extra_attrs, {data_source: source, glyph: glyph})\n    const renderer = new GlyphRenderer(attrs)\n    this.add_renderers(renderer)\n    return renderer\n  }\n\n  add_tools(...tools: Tool[]): void {\n    for (const tool of tools) {\n      if ((tool as any).overlay != null) // XXX\n        this.add_renderers((tool as any).overlay)\n    }\n\n    this.toolbar.tools = this.toolbar.tools.concat(tools)\n  }\n\n  get_layoutable_children(): LayoutDOM[] {\n    return [this.plot_canvas]\n  }\n\n  get_constraints(): Constraint[] {\n    const constraints = super.get_constraints()\n\n    constraints.push(EQ(this._width,  [-1, this.plot_canvas._width ]))\n    constraints.push(EQ(this._height, [-1, this.plot_canvas._height]))\n\n    return constraints\n  }\n\n  get_constrained_variables(): {[key: string]: Variable} {\n    const vars = extend({}, super.get_constrained_variables(), {\n      on_edge_align_top    : this.plot_canvas._top,\n      on_edge_align_bottom : this.plot_canvas._height_minus_bottom,\n      on_edge_align_left   : this.plot_canvas._left,\n      on_edge_align_right  : this.plot_canvas._width_minus_right,\n\n      box_cell_align_top   : this.plot_canvas._top,\n      box_cell_align_bottom: this.plot_canvas._height_minus_bottom,\n      box_cell_align_left  : this.plot_canvas._left,\n      box_cell_align_right : this.plot_canvas._width_minus_right,\n\n      box_equal_size_top   : this.plot_canvas._top,\n      box_equal_size_bottom: this.plot_canvas._height_minus_bottom,\n    })\n\n    if (this.sizing_mode != \"fixed\") {\n      vars.box_equal_size_left  = this.plot_canvas._left\n      vars.box_equal_size_right = this.plot_canvas._width_minus_right\n    }\n\n    return vars\n  }\n\n  get all_renderers(): Renderer[] {\n    let renderers = this.renderers\n    for (const tool of this.toolbar.tools)\n      renderers = renderers.concat(tool.synthetic_renderers)\n    return renderers\n  }\n\n  get webgl(): boolean {\n    logger.warn(\"webgl attr is deprecated, use output_backend\")\n    return this.output_backend == \"webgl\"\n  }\n\n  get tool_events(): any {\n    logger.warn(\"tool_events attr is deprecated, use SelectionGeometry Event\")\n    return null\n  }\n}\n\nPlot.initClass()\n"]}