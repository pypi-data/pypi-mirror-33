{"version":3,"sources":["models/tools/toolbar_base.ts"],"names":[],"mappings":"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","file":"toolbar_base.js","sourcesContent":["import {logger} from \"core/logging\"\nimport {empty, div, a} from \"core/dom\"\nimport {build_views, remove_views} from \"core/build_views\"\nimport * as p from \"core/properties\"\nimport {DOMView} from \"core/dom_view\"\nimport {Logo, Location} from \"core/enums\"\nimport {EventType} from \"core/ui_events\"\nimport {isString} from \"core/util/types\"\nimport {Model} from \"model\"\nimport {Tool} from \"./tool\"\nimport {ButtonTool, ButtonToolButtonView} from \"./button_tool\"\nimport {GestureTool} from \"./gestures/gesture_tool\"\nimport {ActionTool} from \"./actions/action_tool\"\nimport {HelpTool} from \"./actions/help_tool\"\nimport {ToolProxy} from \"./tool_proxy\"\nimport {InspectTool} from \"./inspectors/inspect_tool\"\n\nexport class ToolbarBaseView extends DOMView {\n  model: ToolbarBase\n\n  protected _tool_button_views: {[key: string]: ButtonToolButtonView}\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this._tool_button_views = {}\n    this._build_tool_button_views()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.properties.tools.change, () => this._build_tool_button_views())\n  }\n\n  remove(): void {\n    remove_views(this._tool_button_views)\n    super.remove()\n  }\n\n  protected _build_tool_button_views(): void {\n    const tools: ButtonTool[] = (this.model._proxied_tools != null ? this.model._proxied_tools : this.model.tools) as any // XXX\n    build_views(this._tool_button_views, tools, {parent: this}, (tool) => tool.button_view)\n  }\n\n  render(): void {\n    empty(this.el)\n\n    this.el.classList.add(\"bk-toolbar\")\n    this.el.classList.add(`bk-toolbar-${this.model.toolbar_location}`)\n\n    if (this.model.logo != null) {\n      const cls = this.model.logo === \"grey\" ? \"bk-grey\" : null\n      const logo = a({href: \"https://bokeh.pydata.org/\", target: \"_blank\", class: [\"bk-logo\", \"bk-logo-small\", cls]})\n      this.el.appendChild(logo)\n    }\n\n    const bars: HTMLElement[][] = []\n\n    const el = (tool: Tool) => {\n      return this._tool_button_views[tool.id].el\n    }\n\n    const {gestures} = this.model\n    for (const et in gestures) {\n      bars.push(gestures[et as EventType].tools.map(el))\n    }\n\n    bars.push(this.model.actions.map(el))\n    bars.push(this.model.inspectors.filter((tool) => tool.toggleable).map(el))\n    bars.push(this.model.help.map(el))\n\n    for (const bar of bars) {\n      if (bar.length !== 0) {\n        const el = div({class: 'bk-button-bar'}, bar)\n        this.el.appendChild(el)\n      }\n    }\n  }\n}\n\nexport type GestureType = \"pan\" | \"scroll\" | \"pinch\" | \"tap\" | \"doubletap\" | \"press\" | \"rotate\" | \"move\" | \"multi\"\n\nexport namespace ToolbarBase {\n  export interface Attrs extends Model.Attrs {\n    tools: Tool[]\n    logo: Logo\n    gestures: {\n      pan:       { tools: GestureTool[], active: Tool | null },\n      scroll:    { tools: GestureTool[], active: Tool | null },\n      pinch:     { tools: GestureTool[], active: Tool | null },\n      tap:       { tools: GestureTool[], active: Tool | null },\n      doubletap: { tools: GestureTool[], active: Tool | null },\n      press:     { tools: GestureTool[], active: Tool | null },\n      rotate:    { tools: GestureTool[], active: Tool | null },\n      move:      { tools: GestureTool[], active: Tool | null },\n      multi:     { tools: GestureTool[], active: Tool | null },\n    },\n    actions: ActionTool[]\n    inspectors: InspectTool[]\n    help: HelpTool[]\n    toolbar_location: Location\n  }\n\n  export interface Props extends Model.Props {\n    tools: p.Property<Tool[]>\n  }\n}\n\nexport interface ToolbarBase extends ToolbarBase.Attrs {}\n\nexport class ToolbarBase extends Model {\n\n  properties: ToolbarBase.Props\n\n  constructor(attrs?: Partial<ToolbarBase.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'ToolbarBase'\n    this.prototype.default_view = ToolbarBaseView\n\n    this.define({\n      tools: [ p.Array,    []       ],\n      logo:  [ p.String,   'normal' ], // TODO (bev)\n    })\n\n    this.internal({\n      gestures: [ p.Any, () => ({\n        pan:       { tools: [], active: null },\n        scroll:    { tools: [], active: null },\n        pinch:     { tools: [], active: null },\n        tap:       { tools: [], active: null },\n        doubletap: { tools: [], active: null },\n        press:     { tools: [], active: null },\n        rotate:    { tools: [], active: null },\n        move:      { tools: [], active: null },\n        multi:     { tools: [], active: null },\n      })  ],\n      actions:    [ p.Array, [] ],\n      inspectors: [ p.Array, [] ],\n      help:       [ p.Array, [] ],\n      toolbar_location: [ p.Location, 'right' ],\n    })\n  }\n\n  _proxied_tools?: (Tool | ToolProxy)[]\n\n  get horizontal(): boolean {\n    return this.toolbar_location === \"above\" || this.toolbar_location === \"below\"\n  }\n\n  get vertical(): boolean {\n    return this.toolbar_location === \"left\" || this.toolbar_location === \"right\"\n  }\n\n  _active_change(tool: Tool): void {\n    const {event_type} = tool\n\n    if (event_type == null)\n      return\n\n    const event_types = isString(event_type) ? [event_type] : event_type\n\n    for (const et of event_types) {\n      if (tool.active) {\n        const currently_active_tool = this.gestures[et].active\n        if (currently_active_tool != null && tool != currently_active_tool) {\n          logger.debug(`Toolbar: deactivating tool: ${currently_active_tool.type} (${currently_active_tool.id}) for event type '${et}'`)\n          currently_active_tool.active = false\n        }\n        this.gestures[et].active = tool\n        logger.debug(`Toolbar: activating tool: ${tool.type} (${tool.id}) for event type '${et}'`)\n      } else\n        this.gestures[et].active = null\n    }\n  }\n}\nToolbarBase.initClass()\n"]}