{"version":3,"sources":["models/glyphs/step.ts"],"names":[],"mappings":";;;AAAA,uCAA4D;AAC5D,iCAA2C;AAI3C,mCAAoC;AAQpC;IAA8B,oCAAW;IAAzC;;IAiDA,CAAC;IA7CW,0BAAO,GAAjB,UAAkB,GAAc,EAAE,OAAiB,EAAE,EAAkB;YAAjB,UAAE,EAAE,UAAE;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;QAEhC,IAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAA;QACxB,IAAI,CAAC,GAAG,CAAC;YACP,OAAM;QAER,GAAG,CAAC,SAAS,EAAE,CAAA;QACf,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;QAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,EAAE,SAAQ,EAAE,EAAE,SAAQ,CAAA;YAC1B,IAAI,EAAE,SAAQ,EAAE,EAAE,SAAQ,CAAA;YAC1B,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACvB,KAAK,QAAQ,CAAC,CAAC;oBACb,CAAC;oBAAA,uBAA2B,EAA1B,UAAE,EAAE,UAAE,CACP;oBAAA,mBAA2B,EAA1B,UAAE,EAAE,UAAE,CAAoB;oBAC5B,MAAK;iBACN;gBACD,KAAK,OAAO,CAAC,CAAC;oBACZ,CAAC;oBAAA,uBAA2B,EAA1B,UAAE,EAAE,UAAE,CACP;oBAAA,mBAA2B,EAA1B,UAAE,EAAE,UAAE,CAAoB;oBAC5B,MAAK;iBACN;gBACD,KAAK,QAAQ,CAAC,CAAC;oBACb,IAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAC7B;oBAAA,oBAAwB,EAAvB,UAAE,EAAE,UAAE,CACP;oBAAA,gBAAwB,EAAvB,UAAE,EAAE,UAAE,CAAiB;oBACzB,MAAK;iBACN;gBACD;oBACE,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAA;aAChC;YAED,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;YAClB,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;SACnB;QAED,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA;QAC5B,GAAG,CAAC,MAAM,EAAE,CAAA;;IACd,CAAC;IAED,wCAAqB,GAArB,UAAsB,GAAc,EAAE,IAAW,EAAE,KAAa;QAC9D,2BAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IACrD,CAAC;IACH,eAAC;AAAD,CAjDA,AAiDC,CAjD6B,sBAAW,GAiDxC;AAjDY,4BAAQ;AAmErB;IAA0B,gCAAO;IAI/B,cAAY,KAA2B;eACrC,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,cAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAA;QAC5B,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAA;QAEtC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;QACrB,IAAI,CAAC,MAAM,CAAC;YACV,IAAI,EAAE,CAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC;SAC9B,CAAC,CAAA;IACJ,CAAC;IACH,WAAC;AAAD,CAjBA,AAiBC,CAjByB,kBAAO,GAiBhC;AAjBY,oBAAI;AAkBjB,IAAI,CAAC,SAAS,EAAE,CAAA","file":"step.js","sourcesContent":["import {XYGlyph, XYGlyphView, XYGlyphData} from \"./xy_glyph\"\nimport {generic_line_legend} from \"./utils\"\nimport {LineMixinVector} from \"core/property_mixins\"\nimport {Line} from \"core/visuals\"\nimport {StepMode} from \"core/enums\"\nimport * as p from \"core/properties\"\nimport {IBBox} from \"core/util/bbox\"\nimport {Context2d} from \"core/util/canvas\"\n\nexport interface StepData extends XYGlyphData {}\n\nexport interface StepView extends StepData {}\n\nexport class StepView extends XYGlyphView {\n  model: Step\n  visuals: Step.Visuals\n\n  protected _render(ctx: Context2d, indices: number[], {sx, sy}: StepData): void {\n    this.visuals.line.set_value(ctx)\n\n    const L = indices.length\n    if (L < 2)\n      return\n\n    ctx.beginPath()\n    ctx.moveTo(sx[0], sy[0])\n\n    for (let i = 1; i < L; i++) {\n      let x1: number, x2: number\n      let y1: number, y2: number\n      switch (this.model.mode) {\n        case \"before\": {\n          ;[x1, y1] = [sx[i-1], sy[i]]\n          ;[x2, y2] = [sx[i],   sy[i]]\n          break\n        }\n        case \"after\": {\n          ;[x1, y1] = [sx[i], sy[i-1]]\n          ;[x2, y2] = [sx[i], sy[i]  ]\n          break\n        }\n        case \"center\": {\n          const xm = (sx[i-1] + sx[i])/2\n          ;[x1, y1] = [xm, sy[i-1]]\n          ;[x2, y2] = [xm, sy[i]  ]\n          break\n        }\n        default:\n          throw new Error(\"unexpected\")\n      }\n\n      ctx.lineTo(x1, y1)\n      ctx.lineTo(x2, y2)\n    }\n\n    ctx.lineTo(sx[L-1], sy[L-1])\n    ctx.stroke()\n  }\n\n  draw_legend_for_index(ctx: Context2d, bbox: IBBox, index: number): void {\n    generic_line_legend(this.visuals, ctx, bbox, index)\n  }\n}\n\nexport namespace Step {\n  export interface Mixins extends LineMixinVector {}\n\n  export interface Attrs extends XYGlyph.Attrs, Mixins {\n    mode: StepMode\n  }\n\n  export interface Props extends XYGlyph.Props {}\n\n  export interface Visuals extends XYGlyph.Visuals {\n    line: Line\n  }\n}\n\nexport interface Step extends Step.Attrs {}\n\nexport class Step extends XYGlyph {\n\n  properties: Step.Props\n\n  constructor(attrs?: Partial<Step.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'Step'\n    this.prototype.default_view = StepView\n\n    this.mixins(['line'])\n    this.define({\n      mode: [ p.StepMode, \"before\"],\n    })\n  }\n}\nStep.initClass()\n"]}