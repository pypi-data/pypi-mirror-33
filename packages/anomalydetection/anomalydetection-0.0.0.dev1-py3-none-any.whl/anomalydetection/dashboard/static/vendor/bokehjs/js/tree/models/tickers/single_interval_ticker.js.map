{"version":3,"sources":["models/tickers/single_interval_ticker.ts"],"names":[],"mappings":";;;AAAA,yDAAoD;AACpD,mCAAoC;AAgBpC;IAA0C,gDAAgB;IAIxD,8BAAY,KAA2C;eACrD,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,8BAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,sBAAsB,CAAA;QAE5C,IAAI,CAAC,MAAM,CAAC;YACV,QAAQ,EAAE,CAAE,CAAC,CAAC,MAAM,CAAE;SACvB,CAAC,CAAA;IACJ,CAAC;IAED,2CAAY,GAAZ,UAAa,SAAiB,EAAE,UAAkB,EAAE,gBAAwB;QAC1E,OAAO,IAAI,CAAC,QAAQ,CAAA;IACtB,CAAC;IAED,sBAAI,8CAAY;aAAhB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAA;QACtB,CAAC;;;OAAA;IAED,sBAAI,8CAAY;aAAhB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAA;QACtB,CAAC;;;OAAA;IACH,2BAAC;AAAD,CA3BA,AA2BC,CA3ByC,oCAAgB,GA2BzD;AA3BY,oDAAoB;AA6BjC,oBAAoB,CAAC,SAAS,EAAE,CAAA","file":"single_interval_ticker.js","sourcesContent":["import {ContinuousTicker} from \"./continuous_ticker\"\nimport * as p from \"core/properties\"\n\n// The SingleIntervalTicker is a Ticker that always uses the same tick spacing,\n// regardless of the input range.  It's not very useful by itself, but can\n// be used as part of a CompositeTicker below.\n\nexport namespace SingleIntervalTicker {\n  export interface Attrs extends ContinuousTicker.Attrs {\n    interval: number\n  }\n\n  export interface Props extends ContinuousTicker.Props {}\n}\n\nexport interface SingleIntervalTicker extends SingleIntervalTicker.Attrs {}\n\nexport class SingleIntervalTicker extends ContinuousTicker {\n\n  properties: SingleIntervalTicker.Props\n\n  constructor(attrs?: Partial<SingleIntervalTicker.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"SingleIntervalTicker\"\n\n    this.define({\n      interval: [ p.Number ],\n    })\n  }\n\n  get_interval(_data_low: number, _data_high: number, _n_desired_ticks: number): number {\n    return this.interval\n  }\n\n  get min_interval(): number {\n    return this.interval\n  }\n\n  get max_interval(): number {\n    return this.interval\n  }\n}\n\nSingleIntervalTicker.initClass()\n"]}