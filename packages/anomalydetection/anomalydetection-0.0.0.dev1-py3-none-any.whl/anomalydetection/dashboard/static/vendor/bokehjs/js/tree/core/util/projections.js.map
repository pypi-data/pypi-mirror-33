{"version":3,"sources":["core/util/projections.ts"],"names":[],"mappings":";;AAAA,sCAAwC;AACxC,2CAA6C;AAI7C,IAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAA;AACzC,IAAM,KAAK,GAAM,IAAI,UAAU,CAAC,OAAO,CAAC,CAAA;AAE3B,QAAA,cAAc,GAAG,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;AAEpD,IAAM,eAAe,GAAG;IACtB,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC;IAChC,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC;CACjC,CAAA;AAED,IAAM,aAAa,GAAG;IACpB,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;IAChB,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC;CACrB,CAAA;AAED,uBAA8B,GAAW,EAAE,IAAY,EAAE,SAAiB;IAClE,IAAA,+BAAuC,EAAtC,WAAG,EAAE,WAAG,CAA8B;IAC7C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;AAClD,CAAC;AAHD,sCAGC;AAED,mBAA0B,KAAa,EAAE,SAAiB;IACxD,OAAO,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;AACnF,CAAC;AAFD,8BAEC;AAED,oBAA2B,CAAW,EAAE,CAAW;IACjD,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAA;IACtC,IAAM,QAAQ,GAAa,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;IACvC,IAAM,QAAQ,GAAa,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACpB,IAAA,iDAAuD,EAAtD,cAAM,EAAE,cAAM,CAAwC;QAC7D,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;QACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;KACrB;IACD,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;AAC7B,CAAC;AAVD,gCAUC;AAED,sBAA6B,EAAc,EAAE,EAAc;IACzD,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAA;IACxC,IAAM,SAAS,GAAe,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;IAC1C,IAAM,SAAS,GAAe,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;IAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACpB,IAAA,6BAA+C,EAA9C,gBAAQ,EAAE,gBAAQ,CAA4B;QACrD,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAA;QACvB,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAA;KACxB;IACD,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AAC/B,CAAC;AAVD,oCAUC","file":"projections.js","sourcesContent":["import proj4 = require(\"proj4/lib/core\")\nimport Projection = require(\"proj4/lib/Proj\")\n\nimport {LatLon} from \"../enums\"\n\nconst mercator = new Projection('GOOGLE')\nconst wgs84    = new Projection('WGS84')\n\nexport const wgs84_mercator = proj4(wgs84, mercator)\n\nconst mercator_bounds = {\n  lon: [-20026376.39, 20026376.39],\n  lat: [-20048966.10, 20048966.10],\n}\n\nconst latlon_bounds = {\n  lon: [-180, 180],\n  lat: [-85.06, 85.06],\n}\n\nexport function clip_mercator(low: number, high: number, dimension: LatLon): [number, number] {\n  const [min, max] = mercator_bounds[dimension]\n  return [Math.max(low, min), Math.min(high, max)]\n}\n\nexport function in_bounds(value: number, dimension: LatLon): boolean {\n  return value > latlon_bounds[dimension][0] && value < latlon_bounds[dimension][1]\n}\n\nexport function project_xy(x: number[], y: number[]): [number[], number[]] {\n  const n = Math.min(x.length, y.length)\n  const merc_x_s: number[] = new Array(n)\n  const merc_y_s: number[] = new Array(n)\n  for (let i = 0; i < n; i++) {\n    const [merc_x, merc_y] = wgs84_mercator.forward([x[i], y[i]])\n    merc_x_s[i] = merc_x\n    merc_y_s[i] = merc_y\n  }\n  return [merc_x_s, merc_y_s]\n}\n\nexport function project_xsys(xs: number[][], ys: number[][]): [number[][], number[][]] {\n  const n = Math.min(xs.length, ys.length)\n  const merc_xs_s: number[][] = new Array(n)\n  const merc_ys_s: number[][] = new Array(n)\n  for (let i = 0; i < n; i++) {\n    const [merc_x_s, merc_y_s] = project_xy(xs[i], ys[i])\n    merc_xs_s[i] = merc_x_s\n    merc_ys_s[i] = merc_y_s\n  }\n  return [merc_xs_s, merc_ys_s]\n}\n"]}