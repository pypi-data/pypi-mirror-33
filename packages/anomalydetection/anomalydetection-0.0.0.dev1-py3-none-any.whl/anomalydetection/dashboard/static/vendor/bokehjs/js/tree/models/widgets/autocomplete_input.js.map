{"version":3,"sources":["models/widgets/autocomplete_input.ts"],"names":[],"mappings":"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","file":"autocomplete_input.js","sourcesContent":["import {TextInput, TextInputView} from \"./text_input\"\n\nimport {empty, ul, li, a, Keys} from \"core/dom\"\nimport {clear_menus} from \"core/menus\"\nimport * as p from \"core/properties\"\n\nexport class AutocompleteInputView extends TextInputView {\n  model: AutocompleteInput\n\n  protected menuEl: HTMLElement\n\n  connect_signals(): void {\n    super.connect_signals()\n    clear_menus.connect(() => this._clear_menu())\n  }\n\n  render(): void {\n    super.render()\n\n    this.inputEl.classList.add(\"bk-autocomplete-input\")\n\n    this.inputEl.addEventListener(\"keydown\", (event) => this._keydown(event))\n    this.inputEl.addEventListener(\"keyup\", (event) => this._keyup(event))\n\n    this.menuEl = ul({class: \"bk-bs-dropdown-menu\"})\n    this.menuEl.addEventListener(\"click\", (event) => this._item_click(event))\n    this.el.appendChild(this.menuEl)\n  }\n\n  protected _render_items(completions: string[]): void {\n    empty(this.menuEl)\n\n    for (const text of completions) {\n      const itemEl = li({}, a({data: {text: text}}, text))\n      this.menuEl.appendChild(itemEl)\n    }\n  }\n\n  protected _open_menu(): void {\n    this.el.classList.add(\"bk-bs-open\")\n  }\n\n  protected _clear_menu(): void {\n    this.el.classList.remove(\"bk-bs-open\")\n  }\n\n  protected _item_click(event: MouseEvent): void {\n    event.preventDefault()\n\n    if (event.target != event.currentTarget) {\n      const el = event.target as HTMLElement\n      const text = el.dataset.text!\n      this.model.value = text\n      //this.inputEl.value = text\n    }\n  }\n\n  _keydown(_event: KeyboardEvent): void {}\n\n  _keyup(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case Keys.Enter: {\n        console.log(\"enter\")\n        break\n      }\n      case Keys.Esc: {\n        this._clear_menu()\n        break\n      }\n      case Keys.Up:\n      case Keys.Down: {\n        console.log(\"up/down\")\n        break\n      }\n      default: {\n        const value = this.inputEl.value\n\n        if (value.length <= 1) {\n          this._clear_menu()\n          return\n        }\n\n        const completions: string[] = []\n        for (const text of this.model.completions) {\n          if (text.indexOf(value) != -1)\n            completions.push(text)\n        }\n\n        if (completions.length == 0)\n          this._clear_menu()\n        else {\n          this._render_items(completions)\n          this._open_menu()\n        }\n      }\n    }\n  }\n}\n\nexport namespace AutocompleteInput {\n  export interface Attrs extends TextInput.Attrs {\n    completions: string[]\n  }\n\n  export interface Props extends TextInput.Props {}\n}\n\nexport interface AutocompleteInput extends AutocompleteInput.Attrs {}\n\nexport class AutocompleteInput extends TextInput {\n\n  properties: AutocompleteInput.Props\n\n  constructor(attrs?: Partial<AutocompleteInput.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"AutocompleteInput\"\n    this.prototype.default_view = AutocompleteInputView\n\n    this.define({\n      completions: [ p.Array, [] ],\n    })\n\n    this.internal({\n      active: [p.Boolean, true],\n    })\n  }\n\n  active: boolean\n}\n\nAutocompleteInput.initClass()\n"]}