{"version":3,"sources":["core/view.ts"],"names":[],"mappings":";;;AACA,yCAAuD;AACvD,wCAAsC;AAStC;IAA0B,gCAAY;IAUpC,cAAY,OAAoB;QAAhC,YACE,iBAAO,SAcR;QAvBQ,aAAO,GAAG,IAAI,mBAAO,CAAO,KAAI,EAAE,SAAS,CAAC,CAAA;QAWnD,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI;YACvB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;;YAE1B,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;QAEtD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAA;QAE7B,KAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,iBAAQ,EAAE,CAAA;QAClC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;QAExB,IAAI,OAAO,CAAC,eAAe,KAAK,KAAK;YACnC,KAAI,CAAC,eAAe,EAAE,CAAA;;IAC1B,CAAC;IAED,yBAAU,GAAV,UAAW,QAAqB,IAAS,CAAC;IAE1C,qBAAM,GAAN;QACE,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAA;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC;IAED,uBAAQ,GAAR;QACE,OAAW,IAAI,CAAC,KAAK,CAAC,IAAI,aAAQ,IAAI,CAAC,EAAE,MAAG,CAAA;IAC9C,CAAC;IAED,sBAAI,wBAAM;aAAV;YACE,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;gBAC5B,OAAO,IAAI,CAAC,OAAO,CAAA;;gBAEnB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAA;QACzD,CAAC;;;OAAA;IAED,sBAAI,yBAAO;aAAX;YACE,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAA;QAC7B,CAAC;;;OAAA;IAED,sBAAI,sBAAI;aAAR;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAO,CAAC,IAAI,CAAA;QAChD,CAAC;;;OAAA;IAED,8BAAe,GAAf,cAAyB,CAAC;IAE1B,iCAAkB,GAAlB;QACE,kBAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAA;IACjC,CAAC;IAED,8BAAe,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAA;IAC7B,CAAC;IACH,WAAC;AAAD,CA/DA,AA+DC,CA/DyB,sBAAU,EAAE,GA+DrC;AA/DY,oBAAI","file":"view.js","sourcesContent":["import {HasProps} from \"./has_props\"\nimport {Signal0, Signal, Signalable} from \"./signaling\"\nimport {uniqueId} from \"./util/string\"\n\nexport interface ViewOptions {\n  id?: string\n  model?: HasProps                  // TODO: this isn't optional\n  parent: View | null\n  connect_signals?: boolean\n}\n\nexport class View extends Signalable() {\n\n  readonly removed = new Signal0<this>(this, \"removed\")\n\n  readonly id: string\n\n  readonly model: HasProps\n\n  private _parent: View | null | undefined\n\n  constructor(options: ViewOptions) {\n    super()\n\n    if (options.model != null)\n      this.model = options.model\n    else\n      throw new Error(\"model of a view wasn't configured\")\n\n    this._parent = options.parent\n\n    this.id = options.id || uniqueId()\n    this.initialize(options)\n\n    if (options.connect_signals !== false)\n      this.connect_signals()\n  }\n\n  initialize(_options: ViewOptions): void {}\n\n  remove(): void {\n    this._parent = undefined\n    this.disconnect_signals()\n    this.removed.emit()\n  }\n\n  toString(): string {\n    return  `${this.model.type}View(${this.id})`\n  }\n\n  get parent(): View | null {\n    if (this._parent !== undefined)\n      return this._parent\n    else\n      throw new Error(\"parent of a view wasn't configured\")\n  }\n\n  get is_root(): boolean {\n    return this.parent === null\n  }\n\n  get root(): View {\n    return this.is_root ? this : this.parent!.root\n  }\n\n  connect_signals(): void {}\n\n  disconnect_signals(): void {\n    Signal.disconnectReceiver(this)\n  }\n\n  notify_finished(): void {\n    this.root.notify_finished()\n  }\n}\n"]}