{"version":3,"sources":["models/widgets/radio_group.ts"],"names":[],"mappings":"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","file":"radio_group.js","sourcesContent":["import {empty, input, label, div} from \"core/dom\"\nimport {uniqueId} from \"core/util/string\"\nimport * as p from \"core/properties\"\n\nimport {Widget, WidgetView} from \"./widget\"\n\nexport class RadioGroupView extends WidgetView {\n  model: RadioGroup\n\n  initialize(options: any): void {\n    super.initialize(options)\n    this.render()\n  }\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.change, () => this.render())\n  }\n\n  render(): void {\n    super.render()\n    empty(this.el)\n\n    const name = uniqueId()\n\n    const active = this.model.active\n    const labels = this.model.labels\n\n    for (let i = 0; i < labels.length; i++) {\n      const text = labels[i]\n\n      const inputEl = input({type: `radio`, name: name, value: `${i}`})\n      inputEl.addEventListener(\"change\", () => this.change_input())\n\n      if (this.model.disabled)\n        inputEl.disabled = true\n      if (i == active)\n        inputEl.checked = true\n\n      const labelEl = label({}, inputEl, text)\n      if (this.model.inline) {\n        labelEl.classList.add(\"bk-bs-radio-inline\")\n        this.el.appendChild(labelEl)\n      } else {\n        const divEl = div({class: \"bk-bs-radio\"}, labelEl)\n        this.el.appendChild(divEl)\n      }\n    }\n  }\n\n  change_input(): void {\n    const radios = this.el.querySelectorAll(\"input\")\n    const active: number[] = []\n    for (let i = 0; i < radios.length; i++) {\n      const radio = radios[i]\n      if (radio.checked)\n        active.push(i)\n    }\n    this.model.active = active[0]\n    if (this.model.callback != null)\n      this.model.callback.execute(this.model)\n  }\n}\n\nexport namespace RadioGroup {\n  export interface Attrs extends Widget.Attrs {\n    active: number\n    labels: string[]\n    inline: boolean\n    callback: any // XXX\n  }\n\n  export interface Props extends Widget.Props {}\n}\n\nexport interface RadioGroup extends RadioGroup.Attrs {}\n\nexport class RadioGroup extends Widget {\n\n  properties: RadioGroup.Props\n\n  constructor(attrs?: Partial<RadioGroup.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"RadioGroup\"\n    this.prototype.default_view = RadioGroupView\n\n    this.define({\n      active:   [ p.Any,   null  ], // TODO (bev) better type?\n      labels:   [ p.Array, []    ],\n      inline:   [ p.Bool,  false ],\n      callback: [ p.Instance ],\n    })\n  }\n}\n\nRadioGroup.initClass()\n"]}