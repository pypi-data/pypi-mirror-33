{"version":3,"sources":["models/layouts/widget_box.ts"],"names":[],"mappings":"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","file":"widget_box.js","sourcesContent":["import {logger} from \"core/logging\"\nimport * as p from \"core/properties\"\nimport {extend} from \"core/util/object\"\nimport {Variable} from \"core/layout/solver\"\n\nimport {LayoutDOM, LayoutDOMView} from \"../layouts/layout_dom\"\n\nexport class WidgetBoxView extends LayoutDOMView {\n  model: WidgetBox\n\n  connect_signals(): void {\n    super.connect_signals()\n    this.connect(this.model.properties.children.change, () => this.rebuild_child_views())\n  }\n\n  css_classes(): string[] {\n    return super.css_classes().concat(\"bk-widget-box\")\n  }\n\n  render(): void {\n    this._render_classes() // XXX: because no super()\n\n    if (this.model.sizing_mode == 'fixed' || this.model.sizing_mode == 'scale_height') {\n      const width = this.get_width()\n      if (this.model._width.value != width)\n        this.solver.suggest_value(this.model._width, width)\n    }\n\n    if (this.model.sizing_mode == 'fixed' || this.model.sizing_mode == 'scale_width') {\n      const height = this.get_height()\n      if (this.model._height.value != height)\n        this.solver.suggest_value(this.model._height, height)\n    }\n\n    this.solver.update_variables()\n\n    if (this.model.sizing_mode == 'stretch_both') {\n      this.el.style.position = 'absolute'\n      this.el.style.left = `${this.model._dom_left.value}px`\n      this.el.style.top = `${this.model._dom_top.value}px`\n      this.el.style.width = `${this.model._width.value}px`\n      this.el.style.height = `${this.model._height.value}px`\n    } else {\n      // Note we DO NOT want to set a height (except in stretch_both). Widgets\n      // are happier sizing themselves. We've tried to tell the layout what\n      // the height is with the suggest_value. But that doesn't mean we need\n      // to put it in the dom.\n      let css_width: string\n      if (this.model._width.value - 20 > 0)\n        css_width = `${this.model._width.value - 20}px`\n      else\n        css_width = \"100%\"\n\n      this.el.style.width = css_width\n    }\n  }\n\n  get_height(): number {\n    let height = 0\n    for (const key in this.child_views) {\n      const child_view = this.child_views[key]\n      const el = child_view.el\n      const style = getComputedStyle(el)\n      const marginTop = parseInt(style.marginTop!) || 0\n      const marginBottom = parseInt(style.marginBottom!) || 0\n      height += el.offsetHeight + marginTop + marginBottom\n    }\n    return height + 20\n  }\n\n  get_width(): number {\n    if (this.model.width != null)\n      return this.model.width\n    else {\n      let width = this.el.scrollWidth + 20\n      for (const key in this.child_views) {\n        const child_view = this.child_views[key]\n        // Take the max width of all the children as the constrainer.\n        const child_width = child_view.el.scrollWidth\n        if (child_width > width)\n          width = child_width\n      }\n      return width\n    }\n  }\n}\n\nexport namespace WidgetBox {\n  export interface Attrs extends LayoutDOM.Attrs {\n    children: LayoutDOM[]\n  }\n\n  export interface Props extends LayoutDOM.Props {\n    children: p.Property<LayoutDOM[]>\n  }\n}\n\nexport interface WidgetBox extends WidgetBox.Attrs {}\n\nexport class WidgetBox extends LayoutDOM {\n\n  properties: WidgetBox.Props\n\n  constructor(attrs?: Partial<WidgetBox.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"WidgetBox\"\n    this.prototype.default_view = WidgetBoxView\n\n    this.define({\n      children: [ p.Array, [] ],\n    })\n  }\n\n  initialize(): void {\n    super.initialize()\n    if (this.sizing_mode == 'fixed' && this.width == null) {\n      this.width = 300 // Set a default for fixed.\n      logger.info(\"WidgetBox mode is fixed, but no width specified. Using default of 300.\")\n    }\n  }\n\n  get_constrained_variables(): {[key: string]: Variable} {\n    const vars = extend({}, super.get_constrained_variables(), {\n      on_edge_align_top    : this._top,\n      on_edge_align_bottom : this._height_minus_bottom,\n      on_edge_align_left   : this._left,\n      on_edge_align_right  : this._width_minus_right,\n\n      box_cell_align_top   : this._top,\n      box_cell_align_bottom: this._height_minus_bottom,\n      box_cell_align_left  : this._left,\n      box_cell_align_right : this._width_minus_right,\n\n      box_equal_size_top   : this._top,\n      box_equal_size_bottom: this._height_minus_bottom,\n    })\n\n    if (this.sizing_mode != 'fixed') {\n      vars.box_equal_size_left  = this._left\n      vars.box_equal_size_right = this._width_minus_right\n    }\n\n    return vars\n  }\n\n  get_layoutable_children(): LayoutDOM[] {\n    return this.children\n  }\n}\n\nWidgetBox.initClass()\n"]}