{"version":3,"sources":["models/tools/inspectors/customjs_hover.ts"],"names":[],"mappings":";;;AAAA,wCAAoC;AACpC,mCAAoC;AACpC,2CAA6C;AAC7C,2CAA2C;AAe3C;IAAmC,yCAAK;IAItC,uBAAY,KAAoC;eAC9C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,uBAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,eAAe,CAAA;QAErC,IAAI,CAAC,MAAM,CAAC;YACV,IAAI,EAAE,CAAE,CAAC,CAAC,GAAG,EAAK,EAAE,CAAE;YACtB,IAAI,EAAE,CAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAE;SACvB,CAAC,CAAA;IACJ,CAAC;IAED,sBAAI,iCAAM;aAAV;YACE,OAAO,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC1B,CAAC;;;OAAA;IAES,kCAAU,GAApB,UAAqB,OAAe,EAAE,UAAkB,EAAE,QAAgB,EAAE,EAAU;QACpF,uEAAuE;QACvE,oBAAoB;QACpB,YAAW,QAAQ,YAAR,QAAQ,kBAAI,aAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,mBAAU,CAAC,EAAE,CAAC,OAAC;IAC9G,CAAC;IAED,8BAAM,GAAN,UAAO,KAAU,EAAE,MAAc,EAAE,YAAkC;QACnE,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/E,OAAO,SAAS,eAAI,IAAI,CAAC,MAAM,SAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,IAAC;IACjF,CAAC;IAEH,oBAAC;AAAD,CAhCA,AAgCC,CAhCkC,aAAK,GAgCvC;AAhCY,sCAAa;AAiC1B,aAAa,CAAC,SAAS,EAAE,CAAA","file":"customjs_hover.js","sourcesContent":["import {Model} from \"../../../model\"\nimport * as p from \"core/properties\"\nimport {keys, values} from \"core/util/object\"\nimport {use_strict} from \"core/util/string\"\n\ndeclare var exports: {[key: string]: any}\n\nexport namespace CustomJSHover {\n  export interface Attrs extends Model.Attrs {\n    args: {[key: string]: any}\n    code: string\n  }\n\n  export interface Props extends Model.Props {}\n}\n\nexport interface CustomJSHover extends CustomJSHover.Attrs {}\n\nexport class CustomJSHover extends Model {\n\n  properties: CustomJSHover.Props\n\n  constructor(attrs?: Partial<CustomJSHover.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = 'CustomJSHover'\n\n    this.define({\n      args: [ p.Any,    {} ], // TODO (bev) better type\n      code: [ p.String, \"\" ],\n    })\n  }\n\n  get values(): any[] {\n    return values(this.args)\n  }\n\n  protected _make_code(valname: string, formatname: string, varsname: string, fn: string): Function {\n    // this relies on keys(args) and values(args) returning keys and values\n    // in the same order\n    return new Function(...keys(this.args), valname, formatname, varsname, \"require\", \"exports\", use_strict(fn))\n  }\n\n  format(value: any, format: string, special_vars: {[key: string]: any}): string {\n    const formatter = this._make_code(\"value\", \"format\", \"special_vars\", this.code)\n    return formatter(...this.values, value, format, special_vars, require, exports)\n  }\n\n}\nCustomJSHover.initClass()\n"]}