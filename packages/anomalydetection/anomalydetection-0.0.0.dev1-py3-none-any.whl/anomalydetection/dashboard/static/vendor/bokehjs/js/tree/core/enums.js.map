{"version":3,"sources":["core/enums.ts"],"names":[],"mappings":";;AACa,QAAA,UAAU,GAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAGzC,QAAA,SAAS,GAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;AAG5C,QAAA,UAAU,GAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAA;AAGtD,QAAA,SAAS,GAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;AAG/C,QAAA,SAAS,GAAgB,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAA;AAGrD,QAAA,MAAM,GAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAGjC,QAAA,OAAO,GAAc,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;AAGhD,QAAA,QAAQ,GAAe,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;AAGlD,QAAA,QAAQ,GAAe,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;AAG1D,QAAA,iBAAiB,GAAwB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;AAMjE,QAAA,cAAc,GAAqB;IAC9C,UAAU,EAAK,YAAY,EAAK,WAAW;IAC3C,aAAa,EAAE,QAAQ,EAAS,cAAc;IAC9C,aAAa,EAAE,eAAe,EAAE,cAAc;CAC/C,CAAA;AAGY,QAAA,MAAM,GAAa,sBAAc,CAAA;AAGjC,QAAA,WAAW,GAAkB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAA;AAGvD,QAAA,aAAa,GAAoB,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;AAG3D,QAAA,WAAW,GAAkB,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,CAAC,CAAA;AAGpF,QAAA,UAAU,GAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AAG5C,QAAA,IAAI,GAAW,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;AAGlD,QAAA,KAAK,GAAY,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;AAG9D,QAAA,YAAY,GAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;AAGjD,QAAA,QAAQ,GAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;AAGvC,QAAA,aAAa,GAAoB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;AAG5D,QAAA,SAAS,GAAgB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;AAGpD,QAAA,YAAY,GAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa,CAAC,CAAA;AAGlG,QAAA,oBAAoB,GAA2B,CAAC,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAA;AAG/F,QAAA,iBAAiB,GAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;AAGtG,QAAA,YAAY,GAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;AAGpD,QAAA,QAAQ,GAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;AAGpD,QAAA,UAAU,GAAiB,CAAC,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,CAAC,CAAA;AAGjG,QAAA,YAAY,GAAmB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;AAGtD,QAAA,oBAAoB,GAA2B,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC,CAAA;AAGpF,QAAA,gBAAgB,GAAuB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAA;AAGpG,QAAA,UAAU,GAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;AAGhD,QAAA,UAAU,GAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AAG1C,QAAA,IAAI,GAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA","file":"enums.js","sourcesContent":["export type AngleUnits = \"deg\" | \"rad\"\nexport const AngleUnits: AngleUnits[] = [\"deg\", \"rad\"]\n\nexport type Dimension = \"width\" | \"height\"\nexport const Dimension: Dimension[] = [\"width\", \"height\"]\n\nexport type Dimensions = \"width\" | \"height\" | \"both\"\nexport const Dimensions: Dimensions[] = [\"width\", \"height\", \"both\"]\n\nexport type Direction = \"clock\" | \"anticlock\"\nexport const Direction: Direction[] = [\"clock\", \"anticlock\"]\n\nexport type FontStyle = \"normal\" | \"italic\" | \"bold\"\nexport const FontStyle: FontStyle[] = [\"normal\", \"italic\", \"bold\"]\n\nexport type LatLon = \"lat\" | \"lon\"\nexport const LatLon: LatLon[] = [\"lat\", \"lon\"]\n\nexport type LineCap = \"butt\" | \"round\" | \"square\"\nexport const LineCap: LineCap[] = [\"butt\", \"round\", \"square\"]\n\nexport type LineJoin = \"miter\" | \"round\" | \"bevel\"\nexport const LineJoin: LineJoin[] = [\"miter\", \"round\", \"bevel\"]\n\nexport type Location = \"above\" | \"below\" | \"left\" | \"right\"\nexport const Location: Location[] = [\"above\", \"below\", \"left\", \"right\"]\n\nexport type LegendClickPolicy = \"none\" | \"hide\" | \"mute\"\nexport const LegendClickPolicy: LegendClickPolicy[] = [\"none\", \"hide\", \"mute\"]\n\nexport type LegendLocation =\n  \"top_left\"    | \"top_center\"    | \"top_right\"    |\n  \"center_left\" | \"center\"        | \"center_right\" |\n  \"bottom_left\" | \"bottom_center\" | \"bottom_right\"\nexport const LegendLocation: LegendLocation[] = [\n  \"top_left\",    \"top_center\",    \"top_right\",\n  \"center_left\", \"center\",        \"center_right\",\n  \"bottom_left\", \"bottom_center\", \"bottom_right\",\n]\n\nexport type Anchor = LegendLocation\nexport const Anchor: Anchor[] = LegendLocation\n\nexport type Orientation = \"vertical\" | \"horizontal\"\nexport const Orientation: Orientation[] = [\"vertical\", \"horizontal\"]\n\nexport type OutputBackend = \"canvas\" | \"svg\" | \"webgl\"\nexport const OutputBackend: OutputBackend[] = [\"canvas\", \"svg\", \"webgl\"]\n\nexport type RenderLevel = \"image\" | \"underlay\" | \"glyph\" | \"annotation\" | \"overlay\"\nexport const RenderLevel: RenderLevel[] = [\"image\", \"underlay\", \"glyph\", \"annotation\", \"overlay\"]\n\nexport type RenderMode = \"canvas\" | \"css\"\nexport const RenderMode: RenderMode[] = [\"canvas\", \"css\"]\n\nexport type Side = \"above\" | \"below\" | \"left\" | \"right\"\nexport const Side: Side[] = [\"above\", \"below\", \"left\", \"right\"]\n\nexport type Place = Side | \"center\"\nexport const Place: Place[] = [\"above\", \"below\", \"left\", \"right\", \"center\"]\n\nexport type SpatialUnits = \"screen\" | \"data\"\nexport const SpatialUnits: SpatialUnits[] = [\"screen\", \"data\"]\n\nexport type StartEnd = \"start\" | \"end\"\nexport const StartEnd: StartEnd[] = [\"start\", \"end\"]\n\nexport type VerticalAlign = \"top\" | \"middle\" | \"bottom\"\nexport const VerticalAlign: VerticalAlign[] = [\"top\", \"middle\", \"bottom\"]\n\nexport type TextAlign = \"left\" | \"right\" | \"center\"\nexport const TextAlign: TextAlign[] = [\"left\", \"right\", \"center\"]\n\nexport type TextBaseline = \"top\" | \"middle\" | \"bottom\" | \"alphabetic\" | \"hanging\" | \"ideographic\"\nexport const TextBaseline: TextBaseline[] = [\"top\", \"middle\", \"bottom\", \"alphabetic\", \"hanging\", \"ideographic\"]\n\nexport type TickLabelOrientation = \"vertical\" | \"horizontal\" | \"parallel\" | \"normal\"\nexport const TickLabelOrientation: TickLabelOrientation[] = [\"vertical\", \"horizontal\", \"parallel\", \"normal\"]\n\nexport type TooltipAttachment = \"horizontal\" | \"vertical\" | \"left\" | \"right\" | \"above\" | \"below\"\nexport const TooltipAttachment: TooltipAttachment[] = [\"horizontal\", \"vertical\", \"left\", \"right\", \"above\", \"below\"]\n\nexport type Distribution = \"uniform\" | \"normal\"\nexport const Distribution: Distribution[] = [\"uniform\", \"normal\"]\n\nexport type StepMode = \"after\" | \"before\" | \"center\"\nexport const StepMode: StepMode[] = [\"after\", \"before\", \"center\"]\n\nexport type SizingMode = \"stretch_both\" | \"scale_width\" | \"scale_height\" | \"scale_both\" | \"fixed\"\nexport const SizingMode: SizingMode[] = [\"stretch_both\", \"scale_width\", \"scale_height\", \"scale_both\", \"fixed\"]\n\nexport type PaddingUnits = \"percent\" | \"absolute\"\nexport const PaddingUnits: PaddingUnits[] = [\"percent\", \"absolute\"]\n\nexport type SliderCallbackPolicy = \"continuous\" | \"throttle\" | \"mouseup\"\nexport const SliderCallbackPolicy: SliderCallbackPolicy[] = [\"continuous\", \"throttle\", \"mouseup\"]\n\nexport type RoundingFunction = \"round\" | \"nearest\" | \"floor\" | \"rounddown\" | \"ceil\" | \"roundup\"\nexport const RoundingFunction: RoundingFunction[] = [\"round\", \"nearest\", \"floor\", \"rounddown\", \"ceil\", \"roundup\"]\n\nexport type UpdateMode = \"replace\" | \"append\"\nexport const UpdateMode: UpdateMode[] = [\"replace\", \"append\"]\n\nexport type HTTPMethod = \"POST\" | \"GET\"\nexport const HTTPMethod: HTTPMethod[] = [\"POST\", \"GET\"]\n\nexport type Logo = \"normal\" | \"grey\"\nexport const Logo: Logo[] = [\"normal\", \"grey\"]\n"]}