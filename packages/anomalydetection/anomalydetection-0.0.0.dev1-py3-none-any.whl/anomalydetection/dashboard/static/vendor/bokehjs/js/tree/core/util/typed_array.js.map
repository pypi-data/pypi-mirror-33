{"version":3,"sources":["core/util/typed_array.ts"],"names":[],"mappings":";;AAEA,gBAA6C,MAAS;IAAE,gBAAc;SAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;QAAd,+BAAc;;IACpE,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAA;IACrB,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;QAArB,IAAM,KAAK,eAAA;QACd,CAAC,IAAI,KAAK,CAAC,MAAM,CAAA;KAAA;IAEnB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,CAAM,CAAA;IAC7C,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;IAErB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAA;IACrB,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;QAArB,IAAM,KAAK,eAAA;QACd,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QACpB,CAAC,IAAI,KAAK,CAAC,MAAM,CAAA;KAClB;IAED,OAAO,MAAM,CAAA;AACf,CAAC;AAfD,wBAeC","file":"typed_array.js","sourcesContent":["import {TypedArray} from \"../types\"\n\nexport function concat<T extends TypedArray>(array0: T, ...arrays: T[]): T {\n  let n = array0.length\n  for (const array of arrays)\n    n += array.length\n\n  const result = new array0.constructor(n) as T\n  result.set(array0, 0)\n\n  let i = array0.length\n  for (const array of arrays) {\n    result.set(array, i)\n    i += array.length\n  }\n\n  return result\n}\n"]}