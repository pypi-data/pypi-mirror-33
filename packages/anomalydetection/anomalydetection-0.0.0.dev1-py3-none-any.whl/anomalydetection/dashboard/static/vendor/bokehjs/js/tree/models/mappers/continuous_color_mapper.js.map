{"version":3,"sources":["models/mappers/continuous_color_mapper.ts"],"names":[],"mappings":";;;AAAA,+CAA0C;AAE1C,mCAAoC;AAepC;IAAoD,iDAAW;IAI7D,+BAAY,KAA4C;eACtD,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,+BAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,uBAAuB,CAAA;QAE7C,IAAI,CAAC,MAAM,CAAC;YACV,IAAI,EAAQ,CAAE,CAAC,CAAC,MAAM,CAAE;YACxB,GAAG,EAAS,CAAE,CAAC,CAAC,MAAM,CAAE;YACxB,UAAU,EAAE,CAAE,CAAC,CAAC,KAAK,CAAG;YACxB,SAAS,EAAG,CAAE,CAAC,CAAC,KAAK,CAAG;SACzB,CAAC,CAAA;IACJ,CAAC;IAES,uCAAO,GAAjB,UAAqB,IAAqB;QACxC,4BACK,iBAAM,OAAO,YAAC,IAAI,CAAC,IACtB,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,EACpE,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,IACxE;IACH,CAAC;IAIH,4BAAC;AAAD,CA7BA,AA6BC,CA7BmD,0BAAW,GA6B9D;AA7BqB,sDAAqB;AA8B3C,qBAAqB,CAAC,SAAS,EAAE,CAAA","file":"continuous_color_mapper.js","sourcesContent":["import {ColorMapper} from \"./color_mapper\"\nimport {Arrayable, Color} from \"core/types\"\nimport * as p from \"core/properties\"\n\nexport namespace ContinuousColorMapper {\n  export interface Attrs extends ColorMapper.Attrs {\n    high: number\n    low: number\n    high_color: Color\n    low_color: Color\n  }\n\n  export interface Props extends ColorMapper.Props {}\n}\n\nexport interface ContinuousColorMapper extends ContinuousColorMapper.Attrs {}\n\nexport abstract class ContinuousColorMapper extends ColorMapper {\n\n  properties: ContinuousColorMapper.Props\n\n  constructor(attrs?: Partial<ContinuousColorMapper.Attrs>) {\n    super(attrs)\n  }\n\n  static initClass(): void {\n    this.prototype.type = \"ContinuousColorMapper\"\n\n    this.define({\n      high:       [ p.Number ],\n      low:        [ p.Number ],\n      high_color: [ p.Color  ],\n      low_color:  [ p.Color  ],\n    })\n  }\n\n  protected _colors<T>(conv: (c: Color) => T): {nan_color: T, low_color?: T, high_color?: T} {\n    return {\n      ...super._colors(conv),\n      low_color: this.low_color != null ? conv(this.low_color) : undefined,\n      high_color: this.high_color != null ? conv(this.high_color) : undefined,\n    }\n  }\n\n  protected abstract _v_compute<T>(data: Arrayable<number>, values: Arrayable<T>,\n    palette: Arrayable<T>, colors: {nan_color: T, low_color?: T, high_color?: T}): void\n}\nContinuousColorMapper.initClass()\n"]}