<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="CisInterfaceClass_8m" kind="file" language="Objective-C">
    <compoundname>CisInterfaceClass.m</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="CisInterfaceClass_8m_1a1666631cdbbb768e804caeac2b1454b4" prot="public" static="no" mutable="no">
        <type>classdef CisInterfaceClass properties pyobj end methods function</type>
        <definition>classdef CisInterfaceClass properties pyobj end methods function obj</definition>
        <argsstring></argsstring>
        <name>obj</name>
        <initializer>= CisInterfaceClass(pyobj)
      if nargin &gt; 0
	obj.pyobj = pyobj</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/CisInterfaceClass.m" line="6" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/CisInterfaceClass.m" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="CisInterfaceClass_8m_1abd318e9730429a664f48b836d90ab3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>end end function</type>
        <definition>end end function delete</definition>
        <argsstring>(obj) obj.pyobj.matlab_atexit()</argsstring>
        <name>delete</name>
        <param>
          <type>obj</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/CisInterfaceClass.m" line="11" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">classdef<sp/>CisInterfaceClass</highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/>properties</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/>pyobj</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>methods</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>obj<sp/>=<sp/>CisInterfaceClass(pyobj)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nargin<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.pyobj<sp/>=<sp/>pyobj;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(obj)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj.pyobj.matlab_atexit();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ml_res<sp/>=<sp/>eval_pyobj(obj,<sp/>cmd,<sp/>nargs,<sp/>args)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>py_cmd<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;obj.pyobj.%s(&apos;</highlight><highlight class="normal">,<sp/>cmd);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:nargs</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iarg_str<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;args{%d}&apos;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iarg_str<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;,args{%d}&apos;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>py_cmd<sp/>=<sp/>strcat(py_cmd,<sp/>iarg_str);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>args{i}<sp/>=<sp/>matlab2python(args{i});</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>py_cmd<sp/>=<sp/>strcat(py_cmd,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>py_res<sp/>=<sp/>eval(py_cmd);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ml_res<sp/>=<sp/>python2matlab(py_res);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>[flag,<sp/>res]<sp/>=<sp/>recv(obj,<sp/>varargin)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ml_res<sp/>=<sp/>obj.eval_pyobj(</highlight><highlight class="stringliteral">&apos;recv&apos;</highlight><highlight class="normal">,<sp/>nargin-1,<sp/>varargin);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>ml_res{1};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ml_res{2};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>send(obj,<sp/>varargin)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>obj.eval_pyobj(</highlight><highlight class="stringliteral">&apos;send&apos;</highlight><highlight class="normal">,<sp/>nargin-1,<sp/>varargin);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>[flag,<sp/>res]<sp/>=<sp/>recv_dict(obj,<sp/>varargin)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ml_res<sp/>=<sp/>obj.eval_pyobj(</highlight><highlight class="stringliteral">&apos;recv_dict&apos;</highlight><highlight class="normal">,<sp/>nargin-1,<sp/>varargin);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>ml_res{1};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ml_res{2};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>send_dict(obj,<sp/>varargin)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>obj.eval_pyobj(</highlight><highlight class="stringliteral">&apos;send_dict&apos;</highlight><highlight class="normal">,<sp/>nargin-1,<sp/>varargin);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>send_eof(obj,<sp/>varargin)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>obj.eval_pyobj(</highlight><highlight class="stringliteral">&apos;send_eof&apos;</highlight><highlight class="normal">,<sp/>nargin-1,<sp/>varargin);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>[flag,<sp/>res]<sp/>=<sp/>call(obj,<sp/>varargin)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ml_res<sp/>=<sp/>obj.eval_pyobj(</highlight><highlight class="stringliteral">&apos;call&apos;</highlight><highlight class="normal">,<sp/>nargin-1,<sp/>varargin);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>ml_res{1};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ml_res{2};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>end</highlight></codeline>
<codeline lineno="54"><highlight class="normal">end</highlight></codeline>
    </programlisting>
    <location file="/root/cis_interface/cis_interface/cis_interface/interface/CisInterfaceClass.m"/>
  </compounddef>
</doxygen>
