<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="reduce__dim_8m" kind="file" language="Objective-C">
    <compoundname>reduce_dim.m</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="reduce__dim_8m_1a5f5c721a998776898bb5705ea71d69c5" prot="public" static="no" mutable="no">
        <type>function</type>
        <definition>else new_x</definition>
        <argsstring></argsstring>
        <name>new_x</name>
        <initializer>= reduce_dim(x)

  if isa(x, &apos;cell&apos;)
    nd = ndims(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="1" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="reduce__dim_8m_1a56dafca2783babdd25891a4da634e0bd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fmt_str</definition>
        <argsstring></argsstring>
        <name>fmt_str</name>
        <initializer>= &apos;x(%d&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="12" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="reduce__dim_8m_1acc82abdbbd310279a27df18d6acc0e45" prot="public" static="no" mutable="no">
        <type></type>
        <definition>else per_str</definition>
        <argsstring></argsstring>
        <name>per_str</name>
        <initializer>= &apos;[&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="13" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="reduce__dim_8m_1a6f6ccfcf58b31cb6412107d9d5281426" prot="public" static="no" mutable="no">
        <type>for</type>
        <definition>for i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <initializer>= 1:(nd-1)
	fmt_str = strcat(fmt_str, &apos;,:&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="14" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="reduce__dim_8m_1afb358f48b1646c750fb9da6c6585be2b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="20" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="reduce__dim_8m_1a1fc47c645f28bdf59e262287b034aa92" prot="public" static="no" mutable="no">
        <type></type>
        <definition>per_ord</definition>
        <argsstring></argsstring>
        <name>per_ord</name>
        <initializer>= eval(per_str)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="24" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="reduce__dim_8m_1a3a2b59450698db1fb646887da2eb72b7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>icol</definition>
        <argsstring></argsstring>
        <name>icol</name>
        <initializer>= permute(irow, per_ord)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="28" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="reduce__dim_8m_1a9e0385084b6bbb44fbab817285a0b56c" prot="public" static="no" const="no" explicit="no" inline="no" new="yes" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(nd==1) new _x</argsstring>
        <name>if</name>
        <param>
          <type>nd</type>
          <defval>=1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="reduce__dim_8m_1a56c9f0868231fe0915feaab6e3900631" prot="public" static="no" const="no" explicit="no" inline="no" new="yes" virt="non-virtual">
        <type></type>
        <definition>elseif</definition>
        <argsstring>((nd==2) &amp;&amp;(size(x, 2)==1)) new _x</argsstring>
        <name>elseif</name>
        <param>
          <type>(nd==2) &amp;&amp;(size(x, 2)==1)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="7" column="1"/>
      </memberdef>
      <memberdef kind="function" id="reduce__dim_8m_1a2a623d8a73db56103126df298f67f797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(i==1) per_str</argsstring>
        <name>if</name>
        <param>
          <type>i</type>
          <defval>=1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m" line="16" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">function</highlight><highlight class="normal"><sp/>new_x<sp/>=<sp/>reduce_dim(x)</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isa(x,<sp/></highlight><highlight class="stringliteral">&apos;cell&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>ndims(x);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(nd<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>elseif<sp/>((nd<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(size(x,<sp/>2)<sp/>==<sp/>1))</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_x<sp/>=<sp/>transpose(x);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>Multi<sp/>dimensional<sp/>cell<sp/>array</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_x<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt_str<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;x(%d&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>per_str<sp/>=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:(nd-1)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str<sp/>=<sp/>strcat(fmt_str,<sp/>&apos;,:&apos;);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>per_str<sp/>=<sp/>strcat(per_str,<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;%d&apos;</highlight><highlight class="normal">,<sp/>i+1));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>per_str<sp/>=<sp/>strcat(per_str,<sp/>sprintf(</highlight><highlight class="stringliteral">&apos;,%d&apos;</highlight><highlight class="normal">,<sp/>i+1));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>end;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt_str<sp/>=<sp/>strcat(fmt_str,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>per_str<sp/>=<sp/>strcat(per_str,<sp/></highlight><highlight class="stringliteral">&apos;,1]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>per_ord<sp/>=<sp/>eval(per_str);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:size(x,<sp/>1)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>irow<sp/>=<sp/>eval(sprintf(fmt_str,<sp/>i));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>icol<sp/>=<sp/>permute(irow,<sp/>per_ord);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>new_x{i}<sp/>=<sp/>reduce_dim(icol);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>end;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>new_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>end;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">end</highlight></codeline>
    </programlisting>
    <location file="/root/cis_interface/cis_interface/cis_interface/interface/reduce_dim.m"/>
  </compounddef>
</doxygen>
