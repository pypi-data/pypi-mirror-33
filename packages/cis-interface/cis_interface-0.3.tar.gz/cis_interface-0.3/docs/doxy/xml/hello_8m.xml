<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="hello_8m" kind="file" language="Objective-C">
    <compoundname>hello.m</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hello_8m_1a3c3d12792007016455c15943b1c73039" prot="public" static="no" mutable="no">
        <type>Ins outs matching with the the model yaml</type>
        <definition>Ins outs matching with the the model yaml inf</definition>
        <argsstring></argsstring>
        <name>inf</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisInput" kindref="compound">CisInput</ref>&apos;, &apos;inFile&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="4" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hello_8m_1a40ccbde57c3ade4f0c9b66ad5cb408e6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>outf</definition>
        <argsstring></argsstring>
        <name>outf</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisOutput" kindref="compound">CisOutput</ref>&apos;, &apos;outFile&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="5" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hello_8m_1a91427ee78ba64d8a058f752b2302ebb1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>inq</definition>
        <argsstring></argsstring>
        <name>inq</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisInput" kindref="compound">CisInput</ref>&apos;, &apos;helloQueueIn&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="6" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hello_8m_1a0a054acbb30640bba43b4bab678773c6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>outq</definition>
        <argsstring></argsstring>
        <name>outq</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisOutput" kindref="compound">CisOutput</ref>&apos;, &apos;helloQueueOut&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="7" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hello_8m_1a88d6e56fc3b1c66cbacb0db9890ea677" prot="public" static="no" mutable="no">
        <type>Receive input from a local</type>
        <definition>Receive input from a local file[flag, buf]</definition>
        <argsstring>[flag, buf]</argsstring>
        <name>file</name>
        <initializer>= inf.recv()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="10" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hello_8m_1aaa0d1af72e101521e394af651474de27" prot="public" static="no" mutable="no">
        <type>Send output to the output queue</type>
        <definition>Send output to a local file ret</definition>
        <argsstring></argsstring>
        <name>ret</name>
        <initializer>= outq.send(buf)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="20" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hello_8m_1abcd2d24debaa3fe93f91f4c2ccea63a8" prot="public" static="no" mutable="no">
        <type>Receive input form the input</type>
        <definition>Receive input form the input queue[flag, buf]</definition>
        <argsstring>[flag, buf]</argsstring>
        <name>queue</name>
        <initializer>= inq.recv()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="28" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hello_8m_1a29aa11655b5a20b356caf178ac8f3ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;Hello from Matlab&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;Hello from Matlab&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1afd2bbaf4279fdcf5fbe6ef0cf556fb87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;hello(M):Created I/O channels&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):Created I/O channels&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1af08e63f5009804b89a7ecd5f39abf586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(~flag)</argsstring>
        <name>if</name>
        <param>
          <type>~</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1a5306dbe6bde5ad489ded4ea2ff742279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;hello(M):ERROR FILE RECV&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):ERROR FILE RECV&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1af50b3d88fee3112c7ed3cd06920e0677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>exit</definition>
        <argsstring>(-1)</argsstring>
        <name>exit</name>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1a169bfd6216d55321ab72e90e465e3426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>end</type>
        <definition>end fprintf</definition>
        <argsstring>(&apos;hello(M):Received %d bytes from file:%s\n&apos;,... length(buf), buf)</argsstring>
        <name>fprintf</name>
        <param>
          <type>&apos;hello(M):Received %d bytes from file:%s\n&apos;</type>
        </param>
        <param>
          <type>... </type>
          <declname>length</declname>
          <array>buf</array>
        </param>
        <param>
          <type>buf</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1aabc508867ba7aba89f17729ed85711f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;hello(M):ERROR QUEUE SEND&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):ERROR QUEUE SEND&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1a492119b9a95d83698fb1a8c0fd151700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>end</type>
        <definition>end disp</definition>
        <argsstring>(&apos;hello(M):Sent to outq&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):Sent to outq&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1ae8f4ff8aa509b115527a12d52a9bb411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>outq</type>
        <definition>outq send_eof</definition>
        <argsstring>()</argsstring>
        <name>send_eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1a707e9fd9fd66661be59ca25363d30622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;hello(M):ERROR QUEUE RECV&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):ERROR QUEUE RECV&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1ab81c195ef9b0588ff18f8e9c9e9c1439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>end</type>
        <definition>end fprintf</definition>
        <argsstring>(&apos;hello(M):Received %d bytes from queue:%s\n&apos;,... length(buf), buf)</argsstring>
        <name>fprintf</name>
        <param>
          <type>&apos;hello(M):Received %d bytes from queue:%s\n&apos;</type>
        </param>
        <param>
          <type>... </type>
          <declname>length</declname>
          <array>buf</array>
        </param>
        <param>
          <type>buf</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1a90801dcf6cc80d4c49a53098e319efb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;hello(M):ERROR FILE SEND&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):ERROR FILE SEND&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1ae052733e2daabe8660384e4b21ce0de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>end</type>
        <definition>end disp</definition>
        <argsstring>(&apos;hello(M):Sent to outf&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;hello(M):Sent to outf&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1a6dc7a4382d3d876cda5fd62b921ef25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;Goodbye from Matlab&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;Goodbye from Matlab&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hello_8m_1adf5c804dfce7a70e36dda02995fad481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>exit</definition>
        <argsstring>(0)</argsstring>
        <name>exit</name>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m" line="47" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;Hello<sp/>from<sp/>Matlab&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">%<sp/>Ins/outs<sp/>matching<sp/>with<sp/>the<sp/>the<sp/>model<sp/>yaml</highlight></codeline>
<codeline lineno="4"><highlight class="normal">inf<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisInput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;inFile&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5"><highlight class="normal">outf<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisOutput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;outFile&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6"><highlight class="normal">inq<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisInput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;helloQueueIn&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal">outq<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisOutput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;helloQueueOut&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>Created<sp/>I/O<sp/>channels&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">%<sp/>Receive<sp/>input<sp/>from<sp/>a<sp/>local<sp/>file</highlight></codeline>
<codeline lineno="11"><highlight class="normal">[flag,<sp/>buf]<sp/>=<sp/>inf.recv();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~flag);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>ERROR<sp/>FILE<sp/>RECV&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">end</highlight></codeline>
<codeline lineno="16"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>Received<sp/>%d<sp/>bytes<sp/>from<sp/>file:<sp/>%s\n&apos;</highlight><highlight class="normal">,<sp/>...</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>length(buf),<sp/>buf);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">%<sp/>Send<sp/>output<sp/>to<sp/>the<sp/>output<sp/>queue</highlight></codeline>
<codeline lineno="20"><highlight class="normal">ret<sp/>=<sp/>outq.send(buf);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~ret);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>ERROR<sp/>QUEUE<sp/>SEND&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">end</highlight></codeline>
<codeline lineno="25"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>Sent<sp/>to<sp/>outq&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">outq.send_eof();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">%<sp/>Receive<sp/>input<sp/>form<sp/>the<sp/>input<sp/>queue</highlight></codeline>
<codeline lineno="29"><highlight class="normal">[flag,<sp/>buf]<sp/>=<sp/>inq.recv();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~flag);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>ERROR<sp/>QUEUE<sp/>RECV&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">end</highlight></codeline>
<codeline lineno="34"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>Received<sp/>%d<sp/>bytes<sp/>from<sp/>queue:<sp/>%s\n&apos;</highlight><highlight class="normal">,<sp/>...</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>length(buf),<sp/>buf);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">%<sp/>Send<sp/>output<sp/>to<sp/>a<sp/>local<sp/>file</highlight></codeline>
<codeline lineno="38"><highlight class="normal">ret<sp/>=<sp/>outf.send(buf);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~ret);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>ERROR<sp/>FILE<sp/>SEND&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">end</highlight></codeline>
<codeline lineno="43"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;hello(M):<sp/>Sent<sp/>to<sp/>outf&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;Goodbye<sp/>from<sp/>Matlab&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">exit(0);</highlight></codeline>
    </programlisting>
    <location file="/root/cis_interface/cis_interface/cis_interface/examples/hello/src/hello.m"/>
  </compounddef>
</doxygen>
