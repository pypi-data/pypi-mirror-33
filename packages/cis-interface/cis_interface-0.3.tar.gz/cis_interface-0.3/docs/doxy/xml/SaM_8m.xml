<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="SaM_8m" kind="file" language="Objective-C">
    <compoundname>SaM.m</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="SaM_8m_1a701f11efeba0b70028fe9082b22cd6fe" prot="public" static="no" mutable="no">
        <type>Get input and output channels matching yaml</type>
        <definition>Get input and output channels matching yaml in1</definition>
        <argsstring></argsstring>
        <name>in1</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisInput" kindref="compound">CisInput</ref>&apos;, &apos;input1_matlab&apos;, &apos;%d&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="3" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1a8b424f0c4dc6a760c6f79f3b549caa7c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>in2</definition>
        <argsstring></argsstring>
        <name>in2</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisInput" kindref="compound">CisInput</ref>&apos;, &apos;static_matlab&apos;, &apos;%d&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="4" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1ab9eedcf23def395cb580223092be9420" prot="public" static="no" mutable="no">
        <type></type>
        <definition>out1</definition>
        <argsstring></argsstring>
        <name>out1</name>
        <initializer>= CisInterface(&apos;<ref refid="classCisOutput" kindref="compound">CisOutput</ref>&apos;, &apos;output_matlab&apos;, &apos;%d&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="5" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1a9c71ce16e593bb1369b2e186cc4065d9" prot="public" static="no" mutable="no">
        <type>Get input from input1</type>
        <definition>Get input static from channel</definition>
        <argsstring>[flag, var]</argsstring>
        <name>channel</name>
        <initializer>= in1.recv()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="8" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1ab6991d210d93a78cdbdf6de1889c1259" prot="public" static="no" mutable="no">
        <type>end</type>
        <definition>end a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <initializer>= var{1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="14" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1a8ac21ba61610615e835ec4217ecca3d2" prot="public" static="no" mutable="no">
        <type>end</type>
        <definition>end b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= var{1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="23" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1a8315a3d329032fa4ce3a564f579459e1" prot="public" static="no" mutable="no">
        <type>Compute sum and send message to output channel</type>
        <definition>Compute sum and send message to output channel sum</definition>
        <argsstring></argsstring>
        <name>sum</name>
        <initializer>= a + b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="27" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SaM_8m_1af1ec77bdca1b30e8153fc5da88f603db" prot="public" static="no" mutable="no">
        <type></type>
        <definition>ret</definition>
        <argsstring></argsstring>
        <name>ret</name>
        <initializer>= out1.send(sum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="28" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="SaM_8m_1ae7e31f262710a42f3b4dd59818329249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;SaM(M):Set up I/O channels&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;SaM(M):Set up I/O channels&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="6" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1af08e63f5009804b89a7ecd5f39abf586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(~flag)</argsstring>
        <name>if</name>
        <param>
          <type>~</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1ad9aea1fb6d4686738fbe0a32451748fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;SaM(M):ERROR RECV from input1&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;SaM(M):ERROR RECV from input1&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1af50b3d88fee3112c7ed3cd06920e0677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>exit</definition>
        <argsstring>(-1)</argsstring>
        <name>exit</name>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1aee222ad6299c3076205f085c231fbcfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(&apos;SaM(M):Received %d from input1\n&apos;, a)</argsstring>
        <name>fprintf</name>
        <param>
          <type>&apos;SaM(M):Received %d from input1\n&apos;</type>
        </param>
        <param>
          <type>a</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1a8106d71970fb1a1ba82dd88bbd2bd01c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;SaM(M):ERROR RECV from static&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;SaM(M):ERROR RECV from static&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1a760f6ac7e1368a773ca5ee0defd84c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fprintf</definition>
        <argsstring>(&apos;SaM(M):Received %d from static\n&apos;, b)</argsstring>
        <name>fprintf</name>
        <param>
          <type>&apos;SaM(M):Received %d from static\n&apos;</type>
        </param>
        <param>
          <type>b</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1a60c2a7e7d7a6d9ddcb333ac0c067f1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>disp</definition>
        <argsstring>(&apos;SaM(M):ERROR SEND to output&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;SaM(M):ERROR SEND to output&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1a8905b001fce86c189d6a99f3cbc239a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>end</type>
        <definition>end disp</definition>
        <argsstring>(&apos;SaM(M):Sent to output&apos;)</argsstring>
        <name>disp</name>
        <param>
          <type>&apos;SaM(M):Sent to output&apos;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="SaM_8m_1adf5c804dfce7a70e36dda02995fad481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>exit</definition>
        <argsstring>(0)</argsstring>
        <name>exit</name>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">%<sp/>Get<sp/>input<sp/>and<sp/>output<sp/>channels<sp/>matching<sp/>yaml</highlight></codeline>
<codeline lineno="3"><highlight class="normal">in1<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisInput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;input1_matlab&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%d&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4"><highlight class="normal">in2<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisInput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;static_matlab&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%d&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5"><highlight class="normal">out1<sp/>=<sp/>CisInterface(</highlight><highlight class="stringliteral">&apos;CisOutput&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;output_matlab&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;%d&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>Set<sp/>up<sp/>I/O<sp/>channels&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">%<sp/>Get<sp/>input<sp/>from<sp/>input1<sp/>channel</highlight></codeline>
<codeline lineno="9"><highlight class="normal">[flag,<sp/>var]<sp/>=<sp/>in1.recv();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~flag);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>ERROR<sp/>RECV<sp/>from<sp/>input1&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">end</highlight></codeline>
<codeline lineno="14"><highlight class="normal">a<sp/>=<sp/>var{1};</highlight></codeline>
<codeline lineno="15"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>Received<sp/>%d<sp/>from<sp/>input1\n&apos;</highlight><highlight class="normal">,<sp/>a);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">%<sp/>Get<sp/>input<sp/>from<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>channel</highlight></codeline>
<codeline lineno="18"><highlight class="normal">[flag,<sp/>var]<sp/>=<sp/>in2.recv();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~flag);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>ERROR<sp/>RECV<sp/>from<sp/>static&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">end</highlight></codeline>
<codeline lineno="23"><highlight class="normal">b<sp/>=<sp/>var{1};</highlight></codeline>
<codeline lineno="24"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>Received<sp/>%d<sp/>from<sp/>static\n&apos;</highlight><highlight class="normal">,<sp/>b);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">%<sp/>Compute<sp/>sum<sp/>and<sp/>send<sp/>message<sp/>to<sp/>output<sp/>channel</highlight></codeline>
<codeline lineno="27"><highlight class="normal">sum<sp/>=<sp/>a<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">ret<sp/>=<sp/>out1.send(sum);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~ret);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>disp(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>ERROR<sp/>SEND<sp/>to<sp/>output&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">end</highlight></codeline>
<codeline lineno="33"><highlight class="normal">disp(</highlight><highlight class="stringliteral">&apos;SaM(M):<sp/>Sent<sp/>to<sp/>output&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">exit(0);</highlight></codeline>
    </programlisting>
    <location file="/root/cis_interface/cis_interface/cis_interface/examples/SaM/src/SaM.m"/>
  </compounddef>
</doxygen>
