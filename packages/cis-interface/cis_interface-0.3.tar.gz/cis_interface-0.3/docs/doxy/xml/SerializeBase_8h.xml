<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="SerializeBase_8h" kind="file" language="C++">
    <compoundname>SerializeBase.h</compoundname>
    <includes refid="tools_8h" local="no">../tools.h</includes>
    <includedby refid="AsciiTableSerialize_8h" local="no">/root/cis_interface/cis_interface/cis_interface/serialize/AsciiTableSerialize.h</includedby>
    <includedby refid="FormatSerialize_8h" local="no">/root/cis_interface/cis_interface/cis_interface/serialize/FormatSerialize.h</includedby>
    <includedby refid="serialize_8h" local="yes">/root/cis_interface/cis_interface/cis_interface/serialize/serialize.h</includedby>
    <incdepgraph>
      <node id="2875">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="2876" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
      </node>
      <node id="2870">
        <label>stdarg.h</label>
      </node>
      <node id="2869">
        <label>stdlib.h</label>
      </node>
      <node id="2871">
        <label>errno.h</label>
      </node>
      <node id="2877">
        <label>stddef.h</label>
      </node>
      <node id="2866">
        <label>../tools.h</label>
        <link refid="tools_8h_source"/>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2869" relation="include">
        </childnode>
        <childnode refid="2870" relation="include">
        </childnode>
        <childnode refid="2871" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2873" relation="include">
        </childnode>
        <childnode refid="2875" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
      <node id="2876">
        <label>wchar.h</label>
      </node>
      <node id="2867">
        <label>string.h</label>
      </node>
      <node id="2878">
        <label>unistd.h</label>
      </node>
      <node id="2873">
        <label>regex_posix.h</label>
        <link refid="regex__posix_8h_source"/>
        <childnode refid="2874" relation="include">
        </childnode>
        <childnode refid="2875" relation="include">
        </childnode>
      </node>
      <node id="2872">
        <label>time.h</label>
      </node>
      <node id="2865">
        <label>/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h</label>
        <link refid="SerializeBase_8h"/>
        <childnode refid="2866" relation="include">
        </childnode>
      </node>
      <node id="2874">
        <label>regex.h</label>
      </node>
      <node id="2868">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2880">
        <label>/root/cis_interface/cis_interface/cis_interface/serialize/AsciiTableSerialize.h</label>
        <link refid="AsciiTableSerialize_8h_source"/>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2885">
        <label>/root/cis_interface/cis_interface/cis_interface/interface/PsiInterface.hpp</label>
        <link refid="PsiInterface_8hpp_source"/>
      </node>
      <node id="2887">
        <label>/root/cis_interface/cis_interface/cis_interface/serialize/FormatSerialize.h</label>
        <link refid="FormatSerialize_8h_source"/>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2883">
        <label>/root/cis_interface/cis_interface/cis_interface/interface/CisInterface.h</label>
        <link refid="CisInterface_8h_source"/>
        <childnode refid="2884" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
      </node>
      <node id="2881">
        <label>/root/cis_interface/cis_interface/cis_interface/serialize/serialize.h</label>
        <link refid="serialize_8h_source"/>
        <childnode refid="2882" relation="include">
        </childnode>
      </node>
      <node id="2886">
        <label>/root/cis_interface/cis_interface/cis_interface/interface/PsiInterface.h</label>
        <link refid="PsiInterface_8h_source"/>
      </node>
      <node id="2884">
        <label>/root/cis_interface/cis_interface/cis_interface/interface/CisInterface.hpp</label>
        <link refid="CisInterface_8hpp_source"/>
        <childnode refid="2885" relation="include">
        </childnode>
      </node>
      <node id="2879">
        <label>/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h</label>
        <link refid="SerializeBase_8h"/>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2887" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2882">
        <label>/root/cis_interface/cis_interface/cis_interface/communication/communication.h</label>
        <link refid="communication_8h_source"/>
        <childnode refid="2883" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structseri__t" prot="public">seri_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0" prot="public" static="no" strong="no">
        <type></type>
        <name>seri_enum</name>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0a71ef06708f13ed95aef0d476ad767507" prot="public">
          <name>DIRECT_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0aff41419e3631503b582ce011910d2f49" prot="public">
          <name>FORMAT_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0a971a555630ab3741b89cc673806f66ef" prot="public">
          <name>ARRAY_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0a2275bf6ddec65b58c7d1a7b62c6dfbe7" prot="public">
          <name>ASCII_TABLE_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0a5d8beb87c312c12104087728665ec453" prot="public">
          <name>ASCII_TABLE_ARRAY_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0a1ac5135dec981e3600c3d370165cf92d" prot="public">
          <name>PLY_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="SerializeBase_8h_1a15c32b5706befc104c79850ad392e7a0a2eed2a74a4921a0343c22e5c4a47c60d" prot="public">
          <name>OBJ_SERI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Serializer types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" line="11" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" bodystart="11" bodyend="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="SerializeBase_8h_1af2ad2143ec3df29e282b9b7a493d1d90" prot="public" static="no">
        <type>enum seri_enum</type>
        <definition>typedef enum seri_enum seri_type</definition>
        <argsstring></argsstring>
        <name>seri_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" line="196" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="SerializeBase_8h_1a5f7f77b5c4ebbe2a03fe91f3c3afea12" prot="public" static="no">
        <type>struct <ref refid="structseri__t" kindref="compound">seri_t</ref></type>
        <definition>typedef struct seri_t  seri_t</definition>
        <argsstring></argsstring>
        <name>seri_t</name>
        <briefdescription>
<para>Serializer structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" line="23" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="SerializeBase_8h_1a5d2d0b5155e5154675621c26bf572c31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int serialize_direct</definition>
        <argsstring>(const seri_t s, char *buf, const size_t buf_siz, int *args_used, va_list ap)</argsstring>
        <name>serialize_direct</name>
        <param>
          <type>const <ref refid="structseri__t" kindref="compound">seri_t</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>buf_siz</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>args_used</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
<para>Serialize arguments to create a message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structseri__t" kindref="compound">seri_t</ref> Structure sepcifying how to serialize arguments. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to memory where serialized message should be stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_siz</parametername>
</parameternamelist>
<parameterdescription>
<para>size_t Size of memory allocated to buf. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">args_used</parametername>
</parameternamelist>
<parameterdescription>
<para>int Number of arguments formatted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ap</parametername>
</parameternamelist>
<parameterdescription>
<para>va_list Arguments to be formatted. returns: int The length of the serialized message or -1 if there is an error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" line="37" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="SerializeBase_8h_1ac740904ff678676cfc37a9e462fa6c85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int deserialize_direct</definition>
        <argsstring>(const seri_t s, const char *buf, const size_t buf_siz, va_list ap)</argsstring>
        <name>deserialize_direct</name>
        <param>
          <type>const <ref refid="structseri__t" kindref="compound">seri_t</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>buf_siz</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
<para>Deserialize message to populate arguments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structseri__t" kindref="compound">seri_t</ref> Structure sepcifying how to deserialize message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to serialized message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_siz</parametername>
</parameternamelist>
<parameterdescription>
<para>size_t Size of buf. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ap</parametername>
</parameternamelist>
<parameterdescription>
<para>va_list Arguments to be parsed from message. returns: int The number of populated arguments. -1 indicates an error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" line="59" column="1" bodyfile="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h" bodystart="59" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CISSERIALIZEBASE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CISSERIALIZEBASE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;../tools.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>use<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>seri_enum<sp/>{<sp/>DIRECT_SERI,<sp/>FORMAT_SERI,<sp/>ARRAY_SERI,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASCII_TABLE_SERI,<sp/>ASCII_TABLE_ARRAY_SERI,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLY_SERI,<sp/>OBJ_SERI};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>seri_enum<sp/>seri_type;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structseri__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structseri__t" kindref="compound">seri_t</ref><sp/>{</highlight></codeline>
<codeline lineno="20" refid="structseri__t_1a4278a7440cc158eb8c28010c5ad73724" refkind="member"><highlight class="normal"><sp/><sp/>seri_type<sp/><ref refid="structseri__t_1a4278a7440cc158eb8c28010c5ad73724" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="21" refid="structseri__t_1afe8d056809d1f3155b50603a620a52ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structseri__t_1afe8d056809d1f3155b50603a620a52ab" kindref="member">info</ref>;<sp/></highlight></codeline>
<codeline lineno="22" refid="structseri__t_1a6cf49790453343f2ebb5690b68342ac1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structseri__t_1a6cf49790453343f2ebb5690b68342ac1" kindref="member">size_info</ref>;<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><ref refid="structseri__t" kindref="compound">seri_t</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>serialize_direct(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structseri__t" kindref="compound">seri_t</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_siz,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*args_used,<sp/>va_list<sp/>ap)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>args_used[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.type<sp/>!=<sp/>DIRECT_SERI)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg<sp/>=<sp/>va_arg(ap,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>args_used[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>(int)strlen(msg);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>+<sp/>1)<sp/>&lt;<sp/>(int)buf_siz)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(buf,<sp/>msg);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deserialize_direct(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structseri__t" kindref="compound">seri_t</ref><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_siz,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>ap)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.type<sp/>!=<sp/>DIRECT_SERI)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**msg<sp/>=<sp/>va_arg(ap,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>*msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)realloc(*msg,<sp/>buf_siz<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>memcpy(*msg,<sp/>buf,<sp/>buf_siz);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>(*msg)[buf_siz]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>C++<sp/>compiler,<sp/>end<sp/>C<sp/>linkage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*CISSERIALIZEBASE_H_*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/root/cis_interface/cis_interface/cis_interface/serialize/SerializeBase.h"/>
  </compounddef>
</doxygen>
